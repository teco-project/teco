//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

// Test PR teco-project/teco-code-generator#23.

import Logging
import NIOCore
import TecoCore

extension Cpdp {
    /// QueryDownloadBillURL请求参数结构体
    public struct QueryDownloadBillURLRequest: TCRequestModel {
        /// 分配给商户的AppId。进件成功后返给商户方的AppId。
        public let merchantAppId: String

        /// 渠道编号。固定值：ZSB2B
        public let channelCode: String

        /// 对账单日期，格式yyyyMMdd
        public let billDate: String

        public init(merchantAppId: String, channelCode: String, billDate: String) {
            self.merchantAppId = merchantAppId
            self.channelCode = channelCode
            self.billDate = billDate
        }

        enum CodingKeys: String, CodingKey {
            case merchantAppId = "MerchantAppId"
            case channelCode = "ChannelCode"
            case billDate = "BillDate"
        }
    }

    /// QueryDownloadBillURL返回参数结构体
    public struct QueryDownloadBillURLResponse: TCResponseModel {
        /// 分配给商户的AppId。进件成功后返给商户方的AppId。
        public let merchantAppId: String

        /// 对账单下载地址。
        public let downloadUrl: String

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case merchantAppId = "MerchantAppId"
            case downloadUrl = "DownloadUrl"
            case requestId = "RequestId"
        }
    }

    /// 云鉴-查询对账单下载地址接口
    ///
    /// 云鉴-查询对账单下载地址的接口
    @inlinable
    public func queryDownloadBillURL(_ input: QueryDownloadBillURLRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<QueryDownloadBillURLResponse> {
        self.client.execute(action: "QueryDownloadBillURL", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 云鉴-查询对账单下载地址接口
    ///
    /// 云鉴-查询对账单下载地址的接口
    @inlinable
    public func queryDownloadBillURL(_ input: QueryDownloadBillURLRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> QueryDownloadBillURLResponse {
        try await self.client.execute(action: "QueryDownloadBillURL", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 云鉴-查询对账单下载地址接口
    ///
    /// 云鉴-查询对账单下载地址的接口
    @inlinable
    public func queryDownloadBillURL(merchantAppId: String, channelCode: String, billDate: String, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<QueryDownloadBillURLResponse> {
        self.queryDownloadBillURL(.init(merchantAppId: merchantAppId, channelCode: channelCode, billDate: billDate), region: region, logger: logger, on: eventLoop)
    }

    /// 云鉴-查询对账单下载地址接口
    ///
    /// 云鉴-查询对账单下载地址的接口
    @inlinable
    public func queryDownloadBillURL(merchantAppId: String, channelCode: String, billDate: String, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> QueryDownloadBillURLResponse {
        try await self.queryDownloadBillURL(.init(merchantAppId: merchantAppId, channelCode: channelCode, billDate: billDate), region: region, logger: logger, on: eventLoop)
    }
}
