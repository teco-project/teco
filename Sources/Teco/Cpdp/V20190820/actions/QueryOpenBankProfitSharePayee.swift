//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Cpdp {
    /// QueryOpenBankProfitSharePayee请求参数结构体
    public struct QueryOpenBankProfitSharePayeeRequest: TCRequestModel {
        /// 渠道商户号。代理商/集团ID
        public let channelMerchantId: String

        /// 渠道子商户号。商户ID
        public let channelSubMerchantId: String?

        /// 分账方绑定添加返回的AccountId，账户号和账户ID选其一
        public let accountId: String?

        /// 银行账户号要与绑定收款方时保持一致，账户号AccountNo和账户AccoutId选其一
        public let accountNo: String?

        /// 使用账户号时必选
        public let currency: String?

        /// 接入环境。沙箱环境填 sandbox。缺省默认调用生产环境
        public let environment: String?

        public init(channelMerchantId: String, channelSubMerchantId: String? = nil, accountId: String? = nil, accountNo: String? = nil, currency: String? = nil, environment: String? = nil) {
            self.channelMerchantId = channelMerchantId
            self.channelSubMerchantId = channelSubMerchantId
            self.accountId = accountId
            self.accountNo = accountNo
            self.currency = currency
            self.environment = environment
        }

        enum CodingKeys: String, CodingKey {
            case channelMerchantId = "ChannelMerchantId"
            case channelSubMerchantId = "ChannelSubMerchantId"
            case accountId = "AccountId"
            case accountNo = "AccountNo"
            case currency = "Currency"
            case environment = "Environment"
        }
    }

    /// QueryOpenBankProfitSharePayee返回参数结构体
    public struct QueryOpenBankProfitSharePayeeResponse: TCResponseModel {
        /// 错误码。
        public let errCode: String

        /// 错误信息。
        public let errMessage: String

        /// 返回结果
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let result: QueryOpenBankProfitSharePayeeResult?

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case errCode = "ErrCode"
            case errMessage = "ErrMessage"
            case result = "Result"
            case requestId = "RequestId"
        }
    }

    /// 云企付-绑定分账收款方查询
    @inlinable
    public func queryOpenBankProfitSharePayee(_ input: QueryOpenBankProfitSharePayeeRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<QueryOpenBankProfitSharePayeeResponse> {
        self.client.execute(action: "QueryOpenBankProfitSharePayee", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 云企付-绑定分账收款方查询
    @inlinable
    public func queryOpenBankProfitSharePayee(_ input: QueryOpenBankProfitSharePayeeRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> QueryOpenBankProfitSharePayeeResponse {
        try await self.client.execute(action: "QueryOpenBankProfitSharePayee", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 云企付-绑定分账收款方查询
    @inlinable
    public func queryOpenBankProfitSharePayee(channelMerchantId: String, channelSubMerchantId: String? = nil, accountId: String? = nil, accountNo: String? = nil, currency: String? = nil, environment: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<QueryOpenBankProfitSharePayeeResponse> {
        self.queryOpenBankProfitSharePayee(QueryOpenBankProfitSharePayeeRequest(channelMerchantId: channelMerchantId, channelSubMerchantId: channelSubMerchantId, accountId: accountId, accountNo: accountNo, currency: currency, environment: environment), region: region, logger: logger, on: eventLoop)
    }

    /// 云企付-绑定分账收款方查询
    @inlinable
    public func queryOpenBankProfitSharePayee(channelMerchantId: String, channelSubMerchantId: String? = nil, accountId: String? = nil, accountNo: String? = nil, currency: String? = nil, environment: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> QueryOpenBankProfitSharePayeeResponse {
        try await self.queryOpenBankProfitSharePayee(QueryOpenBankProfitSharePayeeRequest(channelMerchantId: channelMerchantId, channelSubMerchantId: channelSubMerchantId, accountId: accountId, accountNo: accountNo, currency: currency, environment: environment), region: region, logger: logger, on: eventLoop)
    }
}
