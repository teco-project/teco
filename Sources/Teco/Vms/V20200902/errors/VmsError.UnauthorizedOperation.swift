//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import TecoCore

extension TCVmsError {
    public struct UnauthorizedOperation: TCVmsErrorType {
        enum Code: String {
            case sdkAppidIsDisabled = "UnauthorizedOperation.SdkAppidIsDisabled"
            case serviceSuspendDueToArrears = "UnauthorizedOperation.ServiceSuspendDueToArrears"
            case voiceSdkAppidVerifyFail = "UnauthorizedOperation.VoiceSdkAppidVerifyFail"
        }

        private let error: Code

        public let context: TCErrorContext?

        public var errorCode: String {
            self.error.rawValue
        }

        /// Initializer used by ``TCClient`` to match an error of this type.
        public init?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }

        internal init(_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }

        /// SDK AppID 禁用发送语音消息，如有需要请[联系我们](https://cloud.tencent.com/document/product/1128/37720)。
        public static var sdkAppidIsDisabled: UnauthorizedOperation {
            UnauthorizedOperation(.sdkAppidIsDisabled)
        }

        /// 因腾讯云账号欠费被停止服务，请及时为您的腾讯云账号[充值](https://cloud.tencent.com/document/product/555/7425)缴清欠款。
        public static var serviceSuspendDueToArrears: UnauthorizedOperation {
            UnauthorizedOperation(.serviceSuspendDueToArrears)
        }

        /// VoiceSdkAppid 校验失败。
        public static var voiceSdkAppidVerifyFail: UnauthorizedOperation {
            UnauthorizedOperation(.voiceSdkAppidVerifyFail)
        }

        public func asVmsError() -> TCVmsError {
            let code: TCVmsError.Code
            switch self.error {
            case .sdkAppidIsDisabled:
                code = .unauthorizedOperation_SdkAppidIsDisabled
            case .serviceSuspendDueToArrears:
                code = .unauthorizedOperation_ServiceSuspendDueToArrears
            case .voiceSdkAppidVerifyFail:
                code = .unauthorizedOperation_VoiceSdkAppidVerifyFail
            }
            return TCVmsError(code, context: self.context)
        }
    }
}
