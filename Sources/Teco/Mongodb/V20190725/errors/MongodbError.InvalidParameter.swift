//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension TCMongodbError {
    public struct InvalidParameter: TCMongodbErrorType {
        enum Code: String {
            case currentInstanceNotSupportModifyParams = "InvalidParameter.CurrentInstanceNotSupportModifyParams"
            case invalidVip = "InvalidParameter.InvalidVip"
            case permissionDenied = "InvalidParameter.PermissionDenied"
            case zoneClosed = "InvalidParameter.ZoneClosed"
            case other = "InvalidParameter"
        }

        private let error: Code

        public let context: TCErrorContext?

        public var errorCode: String {
            self.error.rawValue
        }

        /// Initializer used by ``TCClient`` to match an error of this type.
        public init?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }

        internal init(_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }

        /// 当前实例不支持设置参数。
        ///
        /// 请升级实例版本。
        public static var currentInstanceNotSupportModifyParams: InvalidParameter {
            InvalidParameter(.currentInstanceNotSupportModifyParams)
        }

        /// 无效Vip信息。
        ///
        /// 输入正确的Vip信息。
        public static var invalidVip: InvalidParameter {
            InvalidParameter(.invalidVip)
        }

        /// 当前子帐号无权执行该操作。
        public static var permissionDenied: InvalidParameter {
            InvalidParameter(.permissionDenied)
        }

        /// 可用区已关闭售卖。
        public static var zoneClosed: InvalidParameter {
            InvalidParameter(.zoneClosed)
        }

        /// 参数错误。
        public static var other: InvalidParameter {
            InvalidParameter(.other)
        }

        public func asMongodbError() -> TCMongodbError {
            let code: TCMongodbError.Code
            switch self.error {
            case .currentInstanceNotSupportModifyParams:
                code = .invalidParameter_CurrentInstanceNotSupportModifyParams
            case .invalidVip:
                code = .invalidParameter_InvalidVip
            case .permissionDenied:
                code = .invalidParameter_PermissionDenied
            case .zoneClosed:
                code = .invalidParameter_ZoneClosed
            case .other:
                code = .invalidParameter
            }
            return TCMongodbError(code, context: self.context)
        }
    }
}
