//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Tcb {
    /// 创建或修改安全网关路由
    ///
    /// 创建或修改安全网关路由
    @inlinable
    public func establishWxGatewayRoute(_ input: EstablishWxGatewayRouteRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < EstablishWxGatewayRouteResponse > {
        self.client.execute(action: "EstablishWxGatewayRoute", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 创建或修改安全网关路由
    ///
    /// 创建或修改安全网关路由
    @inlinable
    public func establishWxGatewayRoute(_ input: EstablishWxGatewayRouteRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> EstablishWxGatewayRouteResponse {
        try await self.client.execute(action: "EstablishWxGatewayRoute", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// EstablishWxGatewayRoute请求参数结构体
    public struct EstablishWxGatewayRouteRequest: TCRequestModel {
        /// 网关id
        public let gatewayId: String
        
        /// 服务名称
        public let gatewayRouteName: String
        
        /// 服务地址
        public let gatewayRouteAddr: String
        
        /// 协议类型 http/https
        public let gatewayRouteProtocol: String
        
        /// 服务描述
        public let gatewayRouteDesc: String?
        
        public init (gatewayId: String, gatewayRouteName: String, gatewayRouteAddr: String, gatewayRouteProtocol: String, gatewayRouteDesc: String?) {
            self.gatewayId = gatewayId
            self.gatewayRouteName = gatewayRouteName
            self.gatewayRouteAddr = gatewayRouteAddr
            self.gatewayRouteProtocol = gatewayRouteProtocol
            self.gatewayRouteDesc = gatewayRouteDesc
        }
        
        enum CodingKeys: String, CodingKey {
            case gatewayId = "GatewayId"
            case gatewayRouteName = "GatewayRouteName"
            case gatewayRouteAddr = "GatewayRouteAddr"
            case gatewayRouteProtocol = "GatewayRouteProtocol"
            case gatewayRouteDesc = "GatewayRouteDesc"
        }
    }
    
    /// EstablishWxGatewayRoute返回参数结构体
    public struct EstablishWxGatewayRouteResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }
}