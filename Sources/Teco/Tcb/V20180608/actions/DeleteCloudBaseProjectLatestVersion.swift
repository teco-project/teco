//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Tcb {
    /// 删除云项目
    ///
    /// 删除云项目
    @inlinable
    public func deleteCloudBaseProjectLatestVersion(_ input: DeleteCloudBaseProjectLatestVersionRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DeleteCloudBaseProjectLatestVersionResponse > {
        self.client.execute(action: "DeleteCloudBaseProjectLatestVersion", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 删除云项目
    ///
    /// 删除云项目
    @inlinable
    public func deleteCloudBaseProjectLatestVersion(_ input: DeleteCloudBaseProjectLatestVersionRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DeleteCloudBaseProjectLatestVersionResponse {
        try await self.client.execute(action: "DeleteCloudBaseProjectLatestVersion", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DeleteCloudBaseProjectLatestVersion请求参数结构体
    public struct DeleteCloudBaseProjectLatestVersionRequest: TCRequestModel {
        /// 环境id
        public let envId: String
        
        /// 项目名
        public let projectName: String
        
        /// 是否保留资源
        public let keepResource: Bool?
        
        public init (envId: String, projectName: String, keepResource: Bool?) {
            self.envId = envId
            self.projectName = projectName
            self.keepResource = keepResource
        }
        
        enum CodingKeys: String, CodingKey {
            case envId = "EnvId"
            case projectName = "ProjectName"
            case keepResource = "KeepResource"
        }
    }
    
    /// DeleteCloudBaseProjectLatestVersion返回参数结构体
    public struct DeleteCloudBaseProjectLatestVersionResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }
}