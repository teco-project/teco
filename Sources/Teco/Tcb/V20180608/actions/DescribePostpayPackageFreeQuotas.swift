//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Tcb {
    /// DescribePostpayPackageFreeQuotas请求参数结构体
    public struct DescribePostpayPackageFreeQuotasRequest: TCRequest {
        /// 环境ID
        public let envId: String?

        /// 免费额度类型标识
        public let freeQuotaType: String?

        public init(envId: String? = nil, freeQuotaType: String? = nil) {
            self.envId = envId
            self.freeQuotaType = freeQuotaType
        }

        enum CodingKeys: String, CodingKey {
            case envId = "EnvId"
            case freeQuotaType = "FreeQuotaType"
        }
    }

    /// DescribePostpayPackageFreeQuotas返回参数结构体
    public struct DescribePostpayPackageFreeQuotasResponse: TCResponse {
        /// 免费量资源信息列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let packageFreeQuotaInfos: [PackageFreeQuotaInfo]?

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case packageFreeQuotaInfos = "PackageFreeQuotaInfos"
            case requestId = "RequestId"
        }
    }

    /// 获取后付费免费额度
    @inlinable
    public func describePostpayPackageFreeQuotas(_ input: DescribePostpayPackageFreeQuotasRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribePostpayPackageFreeQuotasResponse> {
        self.client.execute(action: "DescribePostpayPackageFreeQuotas", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 获取后付费免费额度
    @inlinable
    public func describePostpayPackageFreeQuotas(_ input: DescribePostpayPackageFreeQuotasRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribePostpayPackageFreeQuotasResponse {
        try await self.client.execute(action: "DescribePostpayPackageFreeQuotas", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 获取后付费免费额度
    @inlinable
    public func describePostpayPackageFreeQuotas(envId: String? = nil, freeQuotaType: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribePostpayPackageFreeQuotasResponse> {
        self.describePostpayPackageFreeQuotas(.init(envId: envId, freeQuotaType: freeQuotaType), region: region, logger: logger, on: eventLoop)
    }

    /// 获取后付费免费额度
    @inlinable
    public func describePostpayPackageFreeQuotas(envId: String? = nil, freeQuotaType: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribePostpayPackageFreeQuotasResponse {
        try await self.describePostpayPackageFreeQuotas(.init(envId: envId, freeQuotaType: freeQuotaType), region: region, logger: logger, on: eventLoop)
    }
}
