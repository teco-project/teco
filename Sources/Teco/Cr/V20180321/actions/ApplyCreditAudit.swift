//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

@_exported import struct Foundation.Date

extension Cr {
    /// 提交信审申请
    ///
    /// 提交信审外呼申请，返回当次请求日期。
    @inlinable
    public func applyCreditAudit(_ input: ApplyCreditAuditRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < ApplyCreditAuditResponse > {
        self.client.execute(action: "ApplyCreditAudit", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 提交信审申请
    ///
    /// 提交信审外呼申请，返回当次请求日期。
    @inlinable
    public func applyCreditAudit(_ input: ApplyCreditAuditRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ApplyCreditAuditResponse {
        try await self.client.execute(action: "ApplyCreditAudit", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// ApplyCreditAudit请求参数结构体
    public struct ApplyCreditAuditRequest: TCRequestModel {
        /// 模块名，本接口取值：Credit
        public let module: String
        
        /// 操作名，本接口取值：Apply
        public let operation: String
        
        /// 实例ID
        public let instId: String
        
        /// 产品ID，形如P******。
        public let productId: String
        
        /// 信审任务ID，同一天内，同一InstId下，同一CaseId只能调用一次。
        public let caseId: String
        
        /// 回调地址
        public let callbackUrl: String
        
        /// JSON格式的业务字段。
        public let data: String
        
        public init (module: String, operation: String, instId: String, productId: String, caseId: String, callbackUrl: String, data: String) {
            self.module = module
            self.operation = operation
            self.instId = instId
            self.productId = productId
            self.caseId = caseId
            self.callbackUrl = callbackUrl
            self.data = data
        }
        
        enum CodingKeys: String, CodingKey {
            case module = "Module"
            case operation = "Operation"
            case instId = "InstId"
            case productId = "ProductId"
            case caseId = "CaseId"
            case callbackUrl = "CallbackUrl"
            case data = "Data"
        }
    }
    
    /// ApplyCreditAudit返回参数结构体
    public struct ApplyCreditAuditResponse: TCResponseModel {
        /// 请求日期
        // FIXME: Codable support not implemented for date yet.
        public let requestDate: Date
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case requestDate = "RequestDate"
            case requestId = "RequestId"
        }
    }
}
