//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

/// Service error type returned by `Captcha`.
public protocol TCCaptchaErrorType: TCServiceErrorType {
    /// Get the service error as ``TCCaptchaError``.
    ///
    /// - Returns: ``TCCaptchaError`` that holds the same error code and context.
    func asCaptchaError() -> TCCaptchaError
}

public struct TCCaptchaError: TCCaptchaErrorType {
    enum Code: String {
        case internalError = "InternalError"
        case invalidParameter = "InvalidParameter"
        case missingParameter = "MissingParameter"
        case unauthorizedOperation_ErrAuth = "UnauthorizedOperation.ErrAuth"
        case unauthorizedOperation_Unauthorized = "UnauthorizedOperation.Unauthorized"
    }

    /// Error domains affliated to ``TCCaptchaError``.
    public static var domains: [TCErrorType.Type] {
        [UnauthorizedOperation.self]
    }

    private let error: Code

    public let context: TCErrorContext?

    public var errorCode: String {
        self.error.rawValue
    }

    /// Initializer used by ``TCClient`` to match an error of this type.
    public init?(errorCode: String, context: TCErrorContext) {
        guard let error = Code(rawValue: errorCode) else {
            return nil
        }
        self.error = error
        self.context = context
    }

    internal init(_ error: Code, context: TCErrorContext? = nil) {
        self.error = error
        self.context = context
    }

    /// 内部错误。
    public static var internalError: TCCaptchaError {
        TCCaptchaError(.internalError)
    }

    /// 参数错误。
    public static var invalidParameter: TCCaptchaError {
        TCCaptchaError(.invalidParameter)
    }

    /// 缺少参数错误。
    public static var missingParameter: TCCaptchaError {
        TCCaptchaError(.missingParameter)
    }

    /// 鉴权失败。
    public static var unauthorizedOperation_ErrAuth: TCCaptchaError {
        TCCaptchaError(.unauthorizedOperation_ErrAuth)
    }

    /// 未开通权限。
    public static var unauthorizedOperation_Unauthorized: TCCaptchaError {
        TCCaptchaError(.unauthorizedOperation_Unauthorized)
    }

    public func asCaptchaError() -> TCCaptchaError {
        return self
    }
}
