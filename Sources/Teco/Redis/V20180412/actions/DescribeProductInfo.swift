//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Redis {
    /// DescribeProductInfo请求参数结构体
    public struct DescribeProductInfoRequest: TCRequestModel {
        public init () {
        }
    }
    
    /// DescribeProductInfo返回参数结构体
    public struct DescribeProductInfoResponse: TCResponseModel {
        /// 地域售卖信息
        public let regionSet: [RegionConf]
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case regionSet = "RegionSet"
            case requestId = "RequestId"
        }
    }
    
    /// 查询产品售卖规格
    ///
    /// 本接口查询指定可用区和实例类型下 Redis 的售卖规格， 如果用户不在购买白名单中，将不能查询该可用区或该类型的售卖规格详情。申请购买某地域白名单可以提交工单
    @inlinable
    public func describeProductInfo(_ input: DescribeProductInfoRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeProductInfoResponse > {
        self.client.execute(action: "DescribeProductInfo", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 查询产品售卖规格
    ///
    /// 本接口查询指定可用区和实例类型下 Redis 的售卖规格， 如果用户不在购买白名单中，将不能查询该可用区或该类型的售卖规格详情。申请购买某地域白名单可以提交工单
    @inlinable
    public func describeProductInfo(_ input: DescribeProductInfoRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeProductInfoResponse {
        try await self.client.execute(action: "DescribeProductInfo", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// 查询产品售卖规格
    ///
    /// 本接口查询指定可用区和实例类型下 Redis 的售卖规格， 如果用户不在购买白名单中，将不能查询该可用区或该类型的售卖规格详情。申请购买某地域白名单可以提交工单
    @inlinable
    public func describeProductInfo(logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeProductInfoResponse > {
        self.describeProductInfo(DescribeProductInfoRequest(), logger: logger, on: eventLoop)
    }
    
    /// 查询产品售卖规格
    ///
    /// 本接口查询指定可用区和实例类型下 Redis 的售卖规格， 如果用户不在购买白名单中，将不能查询该可用区或该类型的售卖规格详情。申请购买某地域白名单可以提交工单
    @inlinable
    public func describeProductInfo(logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeProductInfoResponse {
        try await self.describeProductInfo(DescribeProductInfoRequest(), logger: logger, on: eventLoop)
    }
}
