//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Redis {
    /// 手动备份Redis实例
    ///
    /// 手动备份Redis实例
    @inlinable
    public func manualBackupInstance(_ input: ManualBackupInstanceRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < ManualBackupInstanceResponse > {
        self.client.execute(action: "ManualBackupInstance", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 手动备份Redis实例
    ///
    /// 手动备份Redis实例
    @inlinable
    public func manualBackupInstance(_ input: ManualBackupInstanceRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ManualBackupInstanceResponse {
        try await self.client.execute(action: "ManualBackupInstance", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// ManualBackupInstance请求参数结构体
    public struct ManualBackupInstanceRequest: TCRequestModel {
        /// 待操作的实例ID，可通过 DescribeInstance接口返回值中的 InstanceId 获取。
        public let instanceId: String
        
        /// 备份的备注信息
        public let remark: String?
        
        /// 保存天数。0代表指定默认保留时间
        public let storageDays: Int64?
        
        public init (instanceId: String, remark: String?, storageDays: Int64?) {
            self.instanceId = instanceId
            self.remark = remark
            self.storageDays = storageDays
        }
        
        enum CodingKeys: String, CodingKey {
            case instanceId = "InstanceId"
            case remark = "Remark"
            case storageDays = "StorageDays"
        }
    }
    
    /// ManualBackupInstance返回参数结构体
    public struct ManualBackupInstanceResponse: TCResponseModel {
        /// 任务ID
        public let taskId: Int64
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case taskId = "TaskId"
            case requestId = "RequestId"
        }
    }
}