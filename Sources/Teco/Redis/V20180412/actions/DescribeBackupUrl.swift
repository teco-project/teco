//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Redis {
    /// 查询备份Rdb下载地址
    ///
    /// 本接口（DescribeBackupUrl）用于查询备份 Rdb 文件的下载地址。
    @inlinable
    public func describeBackupUrl(_ input: DescribeBackupUrlRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeBackupUrlResponse > {
        self.client.execute(action: "DescribeBackupUrl", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 查询备份Rdb下载地址
    ///
    /// 本接口（DescribeBackupUrl）用于查询备份 Rdb 文件的下载地址。
    @inlinable
    public func describeBackupUrl(_ input: DescribeBackupUrlRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeBackupUrlResponse {
        try await self.client.execute(action: "DescribeBackupUrl", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribeBackupUrl请求参数结构体
    public struct DescribeBackupUrlRequest: TCRequestModel {
        /// 实例 ID。
        public let instanceId: String
        
        /// 备份 ID，可通过DescribeInstanceBackups接口返回的参数 BackupSet 获取。
        public let backupId: String
        
        public init (instanceId: String, backupId: String) {
            self.instanceId = instanceId
            self.backupId = backupId
        }
        
        enum CodingKeys: String, CodingKey {
            case instanceId = "InstanceId"
            case backupId = "BackupId"
        }
    }
    
    /// DescribeBackupUrl返回参数结构体
    public struct DescribeBackupUrlResponse: TCResponseModel {
        /// 外网下载地址（6小时内链接有效），该字段正在逐步废弃中。
        public let downloadUrl: [String]
        
        /// 内网下载地址（6小时内链接有效），该字段正在逐步废弃中。
        public let innerDownloadUrl: [String]
        
        /// 文件名称，该字段正在逐步废弃中。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let filenames: [String]?
        
        /// 备份文件信息列表。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let backupInfos: [BackupDownloadInfo]?
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case downloadUrl = "DownloadUrl"
            case innerDownloadUrl = "InnerDownloadUrl"
            case filenames = "Filenames"
            case backupInfos = "BackupInfos"
            case requestId = "RequestId"
        }
    }
}