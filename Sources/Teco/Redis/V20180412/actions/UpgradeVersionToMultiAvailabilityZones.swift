//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Redis {
    /// 升级实例支持多AZ
    @inlinable
    public func upgradeVersionToMultiAvailabilityZones(_ input: UpgradeVersionToMultiAvailabilityZonesRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < UpgradeVersionToMultiAvailabilityZonesResponse > {
        self.client.execute(action: "UpgradeVersionToMultiAvailabilityZones", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 升级实例支持多AZ
    @inlinable
    public func upgradeVersionToMultiAvailabilityZones(_ input: UpgradeVersionToMultiAvailabilityZonesRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> UpgradeVersionToMultiAvailabilityZonesResponse {
        try await self.client.execute(action: "UpgradeVersionToMultiAvailabilityZones", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// UpgradeVersionToMultiAvailabilityZones请求参数结构体
    public struct UpgradeVersionToMultiAvailabilityZonesRequest: TCRequestModel {
        /// 实例ID。
        public let instanceId: String
        
        /// 升级多可用区之后是否支持就近访问功能。
        /// <ul><li>true：支持就近访问功能。升级过程，需同时升级 Proxy 版本和 Redis 内核小版本，涉及数据搬迁，可能会长达数小时。</li><li>false：无需支持就近访问功能。升级多可用区仅涉及管理元数据迁移，对服务没有影响，升级过程通常在3分钟内完成。</li></ul>
        public let upgradeProxyAndRedisServer: Bool?
        
        public init (instanceId: String, upgradeProxyAndRedisServer: Bool?) {
            self.instanceId = instanceId
            self.upgradeProxyAndRedisServer = upgradeProxyAndRedisServer
        }
        
        enum CodingKeys: String, CodingKey {
            case instanceId = "InstanceId"
            case upgradeProxyAndRedisServer = "UpgradeProxyAndRedisServer"
        }
    }
    
    /// UpgradeVersionToMultiAvailabilityZones返回参数结构体
    public struct UpgradeVersionToMultiAvailabilityZonesResponse: TCResponseModel {
        /// 任务ID
        public let flowId: Int64
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case flowId = "FlowId"
            case requestId = "RequestId"
        }
    }
}
