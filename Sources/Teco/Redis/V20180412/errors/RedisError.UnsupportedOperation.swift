//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension TCRedisError {
    public struct UnsupportedOperation: TCErrorType {
        enum Code: String {
            case clusterInstanceAccessedDeny = "UnsupportedOperation.ClusterInstanceAccessedDeny"
            case inspection = "UnsupportedOperation.Inspection"
            case instanceNotOperation = "UnsupportedOperation.InstanceNotOperation"
            case isAutoRenewError = "UnsupportedOperation.IsAutoRenewError"
            case limitProxyVersion = "UnsupportedOperation.LimitProxyVersion"
            case onlyClusterInstanceCanExportBackup = "UnsupportedOperation.OnlyClusterInstanceCanExportBackup"
            case other = "UnsupportedOperation"
        }
        
        private let error: Code
        
        public let context: TCErrorContext?
        
        public var errorCode: String {
            self.error.rawValue
        }
        
        public init ?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }
        
        internal init (_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }
        
        /// redis 集群版不允许接入安全组。
        public static var clusterInstanceAccessedDeny: UnsupportedOperation {
            UnsupportedOperation(.clusterInstanceAccessedDeny)
        }
        
        /// 复制组巡检中。
        public static var inspection: UnsupportedOperation {
            UnsupportedOperation(.inspection)
        }
        
        /// 不支持当前操作。
        public static var instanceNotOperation: UnsupportedOperation {
            UnsupportedOperation(.instanceNotOperation)
        }
        
        /// 自动续费标识错误。
        public static var isAutoRenewError: UnsupportedOperation {
            UnsupportedOperation(.isAutoRenewError)
        }
        
        public static var limitProxyVersion: UnsupportedOperation {
            UnsupportedOperation(.limitProxyVersion)
        }
        
        /// 只有集群版实例支持导出备份。
        public static var onlyClusterInstanceCanExportBackup: UnsupportedOperation {
            UnsupportedOperation(.onlyClusterInstanceCanExportBackup)
        }
        
        /// 操作不支持。
        public static var other: UnsupportedOperation {
            UnsupportedOperation(.other)
        }
    }
}

extension TCRedisError.UnsupportedOperation: Equatable {
    public static func == (lhs: TCRedisError.UnsupportedOperation, rhs: TCRedisError.UnsupportedOperation) -> Bool {
        lhs.error == rhs.error
    }
}

extension TCRedisError.UnsupportedOperation: CustomStringConvertible {
    public var description: String {
        return "\(self.error.rawValue): \(message ?? "")"
    }
}

extension TCRedisError.UnsupportedOperation {
    public func toRedisError() -> TCRedisError {
        guard let code = TCRedisError.Code(rawValue: self.error.rawValue) else {
            fatalError("Unexpected internal conversion error!\nPlease file a bug at https://github.com/teco-project/teco to help address the problem.")
        }
        return TCRedisError(code, context: self.context)
    }
}