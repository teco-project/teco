//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension TCThpcError {
    public struct InvalidParameterValue: TCThpcErrorType {
        enum Code: String {
            case invalidFilterNotSupportedName = "InvalidParameterValue.InvalidFilterNotSupportedName"
            case limitExceeded = "InvalidParameterValue.LimitExceeded"
            case notSupported = "InvalidParameterValue.NotSupported"
            case parametersNotSupported = "InvalidParameterValue.ParametersNotSupported"
            case tooLarge = "InvalidParameterValue.TooLarge"
            case tooLong = "InvalidParameterValue.TooLong"
            case tooShort = "InvalidParameterValue.TooShort"
            case tooSmall = "InvalidParameterValue.TooSmall"
            case valueDuplicated = "InvalidParameterValue.ValueDuplicated"
            case other = "InvalidParameterValue"
        }

        private let error: Code

        public let context: TCErrorContext?

        public var errorCode: String {
            self.error.rawValue
        }

        /// Initializer used by ``TCClient`` to match an error of this type.
        public init?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }

        internal init(_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }

        /// 不支持指定过滤器的键。
        public static var invalidFilterNotSupportedName: InvalidParameterValue {
            InvalidParameterValue(.invalidFilterNotSupportedName)
        }

        /// 参数值数量超过限制。
        public static var limitExceeded: InvalidParameterValue {
            InvalidParameterValue(.limitExceeded)
        }

        /// 不支持该参数值。
        public static var notSupported: InvalidParameterValue {
            InvalidParameterValue(.notSupported)
        }

        /// 字段不支持此值。
        public static var parametersNotSupported: InvalidParameterValue {
            InvalidParameterValue(.parametersNotSupported)
        }

        /// 参数值过大。
        public static var tooLarge: InvalidParameterValue {
            InvalidParameterValue(.tooLarge)
        }

        /// 参数长度过长。
        public static var tooLong: InvalidParameterValue {
            InvalidParameterValue(.tooLong)
        }

        /// 无效参数值。参数值太短。
        public static var tooShort: InvalidParameterValue {
            InvalidParameterValue(.tooShort)
        }

        /// 参数值过小。
        public static var tooSmall: InvalidParameterValue {
            InvalidParameterValue(.tooSmall)
        }

        /// 参数值重复。不支持此操作。
        public static var valueDuplicated: InvalidParameterValue {
            InvalidParameterValue(.valueDuplicated)
        }

        /// 参数取值错误。
        public static var other: InvalidParameterValue {
            InvalidParameterValue(.other)
        }

        public func asThpcError() -> TCThpcError {
            let code: TCThpcError.Code
            switch self.error {
            case .invalidFilterNotSupportedName:
                code = .invalidParameterValue_InvalidFilterNotSupportedName
            case .limitExceeded:
                code = .invalidParameterValue_LimitExceeded
            case .notSupported:
                code = .invalidParameterValue_NotSupported
            case .parametersNotSupported:
                code = .invalidParameterValue_ParametersNotSupported
            case .tooLarge:
                code = .invalidParameterValue_TooLarge
            case .tooLong:
                code = .invalidParameterValue_TooLong
            case .tooShort:
                code = .invalidParameterValue_TooShort
            case .tooSmall:
                code = .invalidParameterValue_TooSmall
            case .valueDuplicated:
                code = .invalidParameterValue_ValueDuplicated
            case .other:
                code = .invalidParameterValue
            }
            return TCThpcError(code, context: self.context)
        }
    }
}
