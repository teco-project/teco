//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Dsgc {
    /// QueryDSPAMetaResourceDbList请求参数结构体
    public struct QueryDSPAMetaResourceDbListRequest: TCRequest {
        /// DSPA实例ID。
        public let dspaId: String

        /// 数据库实例ID。
        public let resourceId: String

        /// 数据库实例所在地域。
        public let resourceRegion: String

        /// 数据库实例类型。
        public let metaType: String

        public init(dspaId: String, resourceId: String, resourceRegion: String, metaType: String) {
            self.dspaId = dspaId
            self.resourceId = resourceId
            self.resourceRegion = resourceRegion
            self.metaType = metaType
        }

        enum CodingKeys: String, CodingKey {
            case dspaId = "DspaId"
            case resourceId = "ResourceId"
            case resourceRegion = "ResourceRegion"
            case metaType = "MetaType"
        }
    }

    /// QueryDSPAMetaResourceDbList返回参数结构体
    public struct QueryDSPAMetaResourceDbListResponse: TCResponse {
        /// 数据库实例DB列表的查询结果。
        public let dbRelationStatusItems: [DbRelationStatusItem]

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case dbRelationStatusItems = "DbRelationStatusItems"
            case requestId = "RequestId"
        }
    }

    /// 查询数据库资源实例的DB列表
    ///
    /// 查询DSPA实例的db列表
    @inlinable
    public func queryDSPAMetaResourceDbList(_ input: QueryDSPAMetaResourceDbListRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<QueryDSPAMetaResourceDbListResponse> {
        self.client.execute(action: "QueryDSPAMetaResourceDbList", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 查询数据库资源实例的DB列表
    ///
    /// 查询DSPA实例的db列表
    @inlinable
    public func queryDSPAMetaResourceDbList(_ input: QueryDSPAMetaResourceDbListRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> QueryDSPAMetaResourceDbListResponse {
        try await self.client.execute(action: "QueryDSPAMetaResourceDbList", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 查询数据库资源实例的DB列表
    ///
    /// 查询DSPA实例的db列表
    @inlinable
    public func queryDSPAMetaResourceDbList(dspaId: String, resourceId: String, resourceRegion: String, metaType: String, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<QueryDSPAMetaResourceDbListResponse> {
        self.queryDSPAMetaResourceDbList(.init(dspaId: dspaId, resourceId: resourceId, resourceRegion: resourceRegion, metaType: metaType), region: region, logger: logger, on: eventLoop)
    }

    /// 查询数据库资源实例的DB列表
    ///
    /// 查询DSPA实例的db列表
    @inlinable
    public func queryDSPAMetaResourceDbList(dspaId: String, resourceId: String, resourceRegion: String, metaType: String, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> QueryDSPAMetaResourceDbListResponse {
        try await self.queryDSPAMetaResourceDbList(.init(dspaId: dspaId, resourceId: resourceId, resourceRegion: resourceRegion, metaType: metaType), region: region, logger: logger, on: eventLoop)
    }
}
