//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Dsgc {
    /// DescribeDSPACategoryRuleStatistic请求参数结构体
    public struct DescribeDSPACategoryRuleStatisticRequest: TCRequest {
        /// dspa实例id
        public let dspaId: String

        /// 合规组模板id
        public let complianceId: UInt64

        public init(dspaId: String, complianceId: UInt64) {
            self.dspaId = dspaId
            self.complianceId = complianceId
        }

        enum CodingKeys: String, CodingKey {
            case dspaId = "DspaId"
            case complianceId = "ComplianceId"
        }
    }

    /// DescribeDSPACategoryRuleStatistic返回参数结构体
    public struct DescribeDSPACategoryRuleStatisticResponse: TCResponse {
        /// 分类规则统计信息
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let statisticSet: [CategoryRuleStatistic]?

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case statisticSet = "StatisticSet"
            case requestId = "RequestId"
        }
    }

    /// 获取分类规则统计信息
    @inlinable
    public func describeDSPACategoryRuleStatistic(_ input: DescribeDSPACategoryRuleStatisticRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeDSPACategoryRuleStatisticResponse> {
        self.client.execute(action: "DescribeDSPACategoryRuleStatistic", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 获取分类规则统计信息
    @inlinable
    public func describeDSPACategoryRuleStatistic(_ input: DescribeDSPACategoryRuleStatisticRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeDSPACategoryRuleStatisticResponse {
        try await self.client.execute(action: "DescribeDSPACategoryRuleStatistic", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 获取分类规则统计信息
    @inlinable
    public func describeDSPACategoryRuleStatistic(dspaId: String, complianceId: UInt64, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeDSPACategoryRuleStatisticResponse> {
        self.describeDSPACategoryRuleStatistic(.init(dspaId: dspaId, complianceId: complianceId), region: region, logger: logger, on: eventLoop)
    }

    /// 获取分类规则统计信息
    @inlinable
    public func describeDSPACategoryRuleStatistic(dspaId: String, complianceId: UInt64, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeDSPACategoryRuleStatisticResponse {
        try await self.describeDSPACategoryRuleStatistic(.init(dspaId: dspaId, complianceId: complianceId), region: region, logger: logger, on: eventLoop)
    }
}
