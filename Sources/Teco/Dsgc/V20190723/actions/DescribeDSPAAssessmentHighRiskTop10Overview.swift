//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Dsgc {
    /// DescribeDSPAAssessmentHighRiskTop10Overview请求参数结构体
    public struct DescribeDSPAAssessmentHighRiskTop10OverviewRequest: TCRequest {
        /// dspa实例Id
        public let dspaId: String

        /// 评估模版id
        public let templateId: Int64

        /// 过滤条件， rdb（数据库）cos（对象存储）
        /// 不传就是全部
        public let filter: String?

        public init(dspaId: String, templateId: Int64, filter: String? = nil) {
            self.dspaId = dspaId
            self.templateId = templateId
            self.filter = filter
        }

        enum CodingKeys: String, CodingKey {
            case dspaId = "DspaId"
            case templateId = "TemplateId"
            case filter = "Filter"
        }
    }

    /// DescribeDSPAAssessmentHighRiskTop10Overview返回参数结构体
    public struct DescribeDSPAAssessmentHighRiskTop10OverviewResponse: TCResponse {
        /// 含高风险资产TOP10的列表数据
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let assetsList: [HighRiskAssetsDetail]?

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case assetsList = "AssetsList"
            case requestId = "RequestId"
        }
    }

    /// 查询高风险资产top10
    ///
    /// 查询高风险资产的top10
    @inlinable
    public func describeDSPAAssessmentHighRiskTop10Overview(_ input: DescribeDSPAAssessmentHighRiskTop10OverviewRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeDSPAAssessmentHighRiskTop10OverviewResponse> {
        self.client.execute(action: "DescribeDSPAAssessmentHighRiskTop10Overview", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 查询高风险资产top10
    ///
    /// 查询高风险资产的top10
    @inlinable
    public func describeDSPAAssessmentHighRiskTop10Overview(_ input: DescribeDSPAAssessmentHighRiskTop10OverviewRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeDSPAAssessmentHighRiskTop10OverviewResponse {
        try await self.client.execute(action: "DescribeDSPAAssessmentHighRiskTop10Overview", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 查询高风险资产top10
    ///
    /// 查询高风险资产的top10
    @inlinable
    public func describeDSPAAssessmentHighRiskTop10Overview(dspaId: String, templateId: Int64, filter: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeDSPAAssessmentHighRiskTop10OverviewResponse> {
        self.describeDSPAAssessmentHighRiskTop10Overview(.init(dspaId: dspaId, templateId: templateId, filter: filter), region: region, logger: logger, on: eventLoop)
    }

    /// 查询高风险资产top10
    ///
    /// 查询高风险资产的top10
    @inlinable
    public func describeDSPAAssessmentHighRiskTop10Overview(dspaId: String, templateId: Int64, filter: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeDSPAAssessmentHighRiskTop10OverviewResponse {
        try await self.describeDSPAAssessmentHighRiskTop10Overview(.init(dspaId: dspaId, templateId: templateId, filter: filter), region: region, logger: logger, on: eventLoop)
    }
}
