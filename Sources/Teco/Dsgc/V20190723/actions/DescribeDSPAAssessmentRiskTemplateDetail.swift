//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Dsgc {
    /// DescribeDSPAAssessmentRiskTemplateDetail请求参数结构体
    public struct DescribeDSPAAssessmentRiskTemplateDetailRequest: TCPaginatedRequest {
        /// dspa实例id
        public let dspaId: String

        /// 模版id
        public let templateId: Int64

        /// 限制条数
        public let limit: Int64

        /// 偏移量
        public let offset: Int64

        public init(dspaId: String, templateId: Int64, limit: Int64, offset: Int64) {
            self.dspaId = dspaId
            self.templateId = templateId
            self.limit = limit
            self.offset = offset
        }

        enum CodingKeys: String, CodingKey {
            case dspaId = "DspaId"
            case templateId = "TemplateId"
            case limit = "Limit"
            case offset = "Offset"
        }

        /// Compute the next request based on API response.
        public func makeNextRequest(with response: DescribeDSPAAssessmentRiskTemplateDetailResponse) -> DescribeDSPAAssessmentRiskTemplateDetailRequest? {
            guard case let items = response.getItems(), !items.isEmpty, let totalCount = response.getTotalCount(), self.offset + .init(items.count) >= totalCount else {
                return nil
            }
            return .init(dspaId: self.dspaId, templateId: self.templateId, limit: self.limit, offset: self.offset + .init(response.getItems().count))
        }
    }

    /// DescribeDSPAAssessmentRiskTemplateDetail返回参数结构体
    public struct DescribeDSPAAssessmentRiskTemplateDetailResponse: TCPaginatedResponse {
        /// 模版id
        public let templateId: Int64

        /// 模版名称
        public let templateName: String

        /// 模版的描述
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let templateDescription: String?

        /// 风险等级
        public let riskLevelId: Int64

        /// 风险等级名称
        public let riskLevelName: String

        /// 脆弱项配置列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let riskItemList: [AssessmentRiskItem]?

        /// 脆弱项配置条数
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let totalCount: Int64?

        /// 被任务引用次数
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let taskCitations: Int64?

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case templateId = "TemplateId"
            case templateName = "TemplateName"
            case templateDescription = "TemplateDescription"
            case riskLevelId = "RiskLevelId"
            case riskLevelName = "RiskLevelName"
            case riskItemList = "RiskItemList"
            case totalCount = "TotalCount"
            case taskCitations = "TaskCitations"
            case requestId = "RequestId"
        }

        /// Extract the returned ``AssessmentRiskItem`` list from the paginated response.
        public func getItems() -> [AssessmentRiskItem] {
            self.riskItemList ?? []
        }

        /// Extract the total count from the paginated response.
        public func getTotalCount() -> Int64? {
            self.totalCount
        }
    }

    /// 查看评估模版详情
    ///
    /// 风险项页面--查看评估模版详情
    @inlinable
    public func describeDSPAAssessmentRiskTemplateDetail(_ input: DescribeDSPAAssessmentRiskTemplateDetailRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeDSPAAssessmentRiskTemplateDetailResponse> {
        self.client.execute(action: "DescribeDSPAAssessmentRiskTemplateDetail", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 查看评估模版详情
    ///
    /// 风险项页面--查看评估模版详情
    @inlinable
    public func describeDSPAAssessmentRiskTemplateDetail(_ input: DescribeDSPAAssessmentRiskTemplateDetailRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeDSPAAssessmentRiskTemplateDetailResponse {
        try await self.client.execute(action: "DescribeDSPAAssessmentRiskTemplateDetail", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 查看评估模版详情
    ///
    /// 风险项页面--查看评估模版详情
    @inlinable
    public func describeDSPAAssessmentRiskTemplateDetail(dspaId: String, templateId: Int64, limit: Int64, offset: Int64, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeDSPAAssessmentRiskTemplateDetailResponse> {
        self.describeDSPAAssessmentRiskTemplateDetail(.init(dspaId: dspaId, templateId: templateId, limit: limit, offset: offset), region: region, logger: logger, on: eventLoop)
    }

    /// 查看评估模版详情
    ///
    /// 风险项页面--查看评估模版详情
    @inlinable
    public func describeDSPAAssessmentRiskTemplateDetail(dspaId: String, templateId: Int64, limit: Int64, offset: Int64, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeDSPAAssessmentRiskTemplateDetailResponse {
        try await self.describeDSPAAssessmentRiskTemplateDetail(.init(dspaId: dspaId, templateId: templateId, limit: limit, offset: offset), region: region, logger: logger, on: eventLoop)
    }

    /// 查看评估模版详情
    ///
    /// 风险项页面--查看评估模版详情
    @inlinable
    public func describeDSPAAssessmentRiskTemplateDetailPaginated(_ input: DescribeDSPAAssessmentRiskTemplateDetailRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<(Int64?, [AssessmentRiskItem])> {
        self.client.paginate(input: input, region: region, command: self.describeDSPAAssessmentRiskTemplateDetail, logger: logger, on: eventLoop)
    }

    /// 查看评估模版详情
    ///
    /// 风险项页面--查看评估模版详情
    @inlinable @discardableResult
    public func describeDSPAAssessmentRiskTemplateDetailPaginated(_ input: DescribeDSPAAssessmentRiskTemplateDetailRequest, region: TCRegion? = nil, onResponse: @escaping (DescribeDSPAAssessmentRiskTemplateDetailResponse, EventLoop) -> EventLoopFuture<Bool>, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<Void> {
        self.client.paginate(input: input, region: region, command: self.describeDSPAAssessmentRiskTemplateDetail, callback: onResponse, logger: logger, on: eventLoop)
    }

    /// 查看评估模版详情
    ///
    /// 风险项页面--查看评估模版详情
    ///
    /// - Returns: `AsyncSequence`s of ``AssessmentRiskItem`` and ``DescribeDSPAAssessmentRiskTemplateDetailResponse`` that can be iterated over asynchronously on demand.
    @inlinable
    public func describeDSPAAssessmentRiskTemplateDetailPaginator(_ input: DescribeDSPAAssessmentRiskTemplateDetailRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> TCClient.PaginatorSequences<DescribeDSPAAssessmentRiskTemplateDetailRequest> {
        TCClient.Paginator.makeAsyncSequences(input: input, region: region, command: self.describeDSPAAssessmentRiskTemplateDetail, logger: logger, on: eventLoop)
    }
}
