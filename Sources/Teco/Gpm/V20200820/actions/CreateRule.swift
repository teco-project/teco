//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Gpm {
    /// 创建规则
    ///
    /// 此接口无法使用，游戏玩家匹配GPM已于6.1正式下架，感谢您的支持
    /// 创建规则
    @inlinable
    public func createRule(_ input: CreateRuleRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < CreateRuleResponse > {
        self.client.execute(action: "CreateRule", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 创建规则
    ///
    /// 此接口无法使用，游戏玩家匹配GPM已于6.1正式下架，感谢您的支持
    /// 创建规则
    @inlinable
    public func createRule(_ input: CreateRuleRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> CreateRuleResponse {
        try await self.client.execute(action: "CreateRule", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// CreateRule请求参数结构体
    public struct CreateRuleRequest: TCRequestModel {
        /// 规则名称，[a-zA-Z0-9-\.]* 长度128
        public let ruleName: String
        
        /// 规则脚本，长度65535
        public let ruleScript: String
        
        /// 规则描述，最长1024
        public let ruleDesc: String?
        
        /// 标签，key-value结构的数组，最多关联50组标签
        public let tags: [StringKV]?
        
        public init (ruleName: String, ruleScript: String, ruleDesc: String?, tags: [StringKV]?) {
            self.ruleName = ruleName
            self.ruleScript = ruleScript
            self.ruleDesc = ruleDesc
            self.tags = tags
        }
        
        enum CodingKeys: String, CodingKey {
            case ruleName = "RuleName"
            case ruleScript = "RuleScript"
            case ruleDesc = "RuleDesc"
            case tags = "Tags"
        }
    }
    
    /// CreateRule返回参数结构体
    public struct CreateRuleResponse: TCResponseModel {
        /// 规则信息
        public let ruleInfo: RuleInfo
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case ruleInfo = "RuleInfo"
            case requestId = "RequestId"
        }
    }
}