//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import TecoCore

extension TCTioneError {
    public struct InvalidParameter: TCTioneErrorType {
        enum Code: String {
            case modelFileInvalid = "InvalidParameter.ModelFileInvalid"
            case tgwInvalidInterface = "InvalidParameter.TgwInvalidInterface"
            case tgwInvalidRequestBody = "InvalidParameter.TgwInvalidRequestBody"
            case validateError = "InvalidParameter.ValidateError"
            case other = "InvalidParameter"
        }

        private let error: Code

        public let context: TCErrorContext?

        public var errorCode: String {
            self.error.rawValue
        }

        /// Initializer used by ``TCClient`` to match an error of this type.
        public init?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }

        internal init(_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }

        /// 模型包不符合规范。
        public static var modelFileInvalid: InvalidParameter {
            InvalidParameter(.modelFileInvalid)
        }

        /// 无效的接口。
        public static var tgwInvalidInterface: InvalidParameter {
            InvalidParameter(.tgwInvalidInterface)
        }

        /// 无效的请求包体。
        ///
        /// 检查必填字段是否填写
        public static var tgwInvalidRequestBody: InvalidParameter {
            InvalidParameter(.tgwInvalidRequestBody)
        }

        /// 请求参数校验失败。
        ///
        /// 请确认请求参数
        public static var validateError: InvalidParameter {
            InvalidParameter(.validateError)
        }

        /// 参数错误。
        public static var other: InvalidParameter {
            InvalidParameter(.other)
        }

        public func asTioneError() -> TCTioneError {
            let code: TCTioneError.Code
            switch self.error {
            case .modelFileInvalid:
                code = .invalidParameter_ModelFileInvalid
            case .tgwInvalidInterface:
                code = .invalidParameter_TgwInvalidInterface
            case .tgwInvalidRequestBody:
                code = .invalidParameter_TgwInvalidRequestBody
            case .validateError:
                code = .invalidParameter_ValidateError
            case .other:
                code = .invalidParameter
            }
            return TCTioneError(code, context: self.context)
        }
    }
}
