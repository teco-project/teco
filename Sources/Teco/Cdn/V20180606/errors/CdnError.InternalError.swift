//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension TCCdnError {
    public struct InternalError: TCErrorType {
        enum Code: String {
            case camSystemError = "InternalError.CamSystemError"
            case cdnConfigError = "InternalError.CdnConfigError"
            case cdnDbError = "InternalError.CdnDbError"
            case cdnQueryParamError = "InternalError.CdnQueryParamError"
            case cdnQuerySystemError = "InternalError.CdnQuerySystemError"
            case cdnSystemError = "InternalError.CdnSystemError"
            case clsInternalError = "InternalError.ClsInternalError"
            case costDataSystemError = "InternalError.CostDataSystemError"
            case dataSystemError = "InternalError.DataSystemError"
            case error = "InternalError.Error"
            case invalidErrorCode = "InternalError.InvalidErrorCode"
            case proxyServer = "InternalError.ProxyServer"
            case routeError = "InternalError.RouteError"
            case scdnUserNoPackage = "InternalError.ScdnUserNoPackage"
            case scdnUserSuspend = "InternalError.ScdnUserSuspend"
            case systemDBError = "InternalError.SystemDBError"
            case systemError = "InternalError.SystemError"
            case tagSystemError = "InternalError.TagSystemError"
            case other = "InternalError"
        }
        
        private let error: Code
        
        public let context: TCErrorContext?
        
        public var errorCode: String {
            self.error.rawValue
        }
        
        public init ?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }
        
        internal init (_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }
        
        /// 内部鉴权系统错误。
        public static var camSystemError: InternalError {
            InternalError(.camSystemError)
        }
        
        /// 域名配置更新失败。
        public static var cdnConfigError: InternalError {
            InternalError(.cdnConfigError)
        }
        
        /// 内部数据错误，请联系腾讯云工程师进一步排查。
        public static var cdnDbError: InternalError {
            InternalError(.cdnDbError)
        }
        
        /// 内部查询错误，请重试或联系客服人员解决。
        public static var cdnQueryParamError: InternalError {
            InternalError(.cdnQueryParamError)
        }
        
        /// 内部查询错误，请重试或联系客服人员解决。
        public static var cdnQuerySystemError: InternalError {
            InternalError(.cdnQuerySystemError)
        }
        
        /// 系统错误，请联系腾讯云工程师进一步排查。
        public static var cdnSystemError: InternalError {
            InternalError(.cdnSystemError)
        }
        
        /// 日志服务内部错误。
        public static var clsInternalError: InternalError {
            InternalError(.clsInternalError)
        }
        
        /// 计费数据内部查询错误，请重试或联系客服人员解决。
        public static var costDataSystemError: InternalError {
            InternalError(.costDataSystemError)
        }
        
        /// 数据查询错误，请联系腾讯云工程师进一步排查。
        public static var dataSystemError: InternalError {
            InternalError(.dataSystemError)
        }
        
        /// 内部服务错误，请联系腾讯云工程师进一步排查。
        public static var error: InternalError {
            InternalError(.error)
        }
        
        /// 内部服务错误，请联系腾讯云工程师进一步排查。
        public static var invalidErrorCode: InternalError {
            InternalError(.invalidErrorCode)
        }
        
        /// 内部服务错误，请联系腾讯云工程师进一步排查。
        public static var proxyServer: InternalError {
            InternalError(.proxyServer)
        }
        
        /// 内部服务错误，请联系腾讯云工程师进一步排查。
        public static var routeError: InternalError {
            InternalError(.routeError)
        }
        
        /// SCDN服务未生效，请购买或续费SCDN套餐后重试。
        public static var scdnUserNoPackage: InternalError {
            InternalError(.scdnUserNoPackage)
        }
        
        /// 安全加速服务已停服，请重新购买套餐后开启。
        public static var scdnUserSuspend: InternalError {
            InternalError(.scdnUserSuspend)
        }
        
        /// 内部数据错误，请重试或联系客服人员解决。
        public static var systemDBError: InternalError {
            InternalError(.systemDBError)
        }
        
        /// 内部服务错误，请联系腾讯云工程师进一步排查。
        public static var systemError: InternalError {
            InternalError(.systemError)
        }
        
        /// 标签内部错误，请重试或联系客服人员解决。
        public static var tagSystemError: InternalError {
            InternalError(.tagSystemError)
        }
        
        /// 内部错误。
        public static var other: InternalError {
            InternalError(.other)
        }
    }
}

extension TCCdnError.InternalError: Equatable {
    public static func == (lhs: TCCdnError.InternalError, rhs: TCCdnError.InternalError) -> Bool {
        lhs.error == rhs.error
    }
}

extension TCCdnError.InternalError: CustomStringConvertible {
    public var description: String {
        return "\(self.error.rawValue): \(message ?? "")"
    }
}

extension TCCdnError.InternalError {
    public func toCdnError() -> TCCdnError {
        guard let code = TCCdnError.Code(rawValue: self.error.rawValue) else {
            fatalError("Unexpected internal conversion error!\nPlease file a bug at https://github.com/teco-project/teco to help address the problem.")
        }
        return TCCdnError(code, context: self.context)
    }
}