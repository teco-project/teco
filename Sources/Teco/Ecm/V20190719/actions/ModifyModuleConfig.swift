//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Ecm {
    /// 修改模块配置
    ///
    /// 修改模块配置，已关联实例的模块不支持调整配置。
    @inlinable
    public func modifyModuleConfig(_ input: ModifyModuleConfigRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < ModifyModuleConfigResponse > {
        self.client.execute(action: "ModifyModuleConfig", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 修改模块配置
    ///
    /// 修改模块配置，已关联实例的模块不支持调整配置。
    @inlinable
    public func modifyModuleConfig(_ input: ModifyModuleConfigRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyModuleConfigResponse {
        try await self.client.execute(action: "ModifyModuleConfig", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// ModifyModuleConfig请求参数结构体
    public struct ModifyModuleConfigRequest: TCRequestModel {
        /// 模块ID。
        public let moduleId: String
        
        /// 机型ID。
        public let instanceType: String
        
        /// 默认数据盘大小，单位：G。范围不得超过数据盘范围大小，详看DescribeConfig。
        public let defaultDataDiskSize: Int64
        
        /// 默认系统盘大小，单位：G。范围不得超过数据盘范围大小，详看DescribeConfig。
        public let defaultSystemDiskSize: Int64?
        
        /// 系统盘
        public let systemDisk: SystemDisk
        
        /// 数据盘
        public let dataDisks: [DataDisk]?
        
        public init (moduleId: String, instanceType: String, defaultDataDiskSize: Int64, defaultSystemDiskSize: Int64?, systemDisk: SystemDisk, dataDisks: [DataDisk]?) {
            self.moduleId = moduleId
            self.instanceType = instanceType
            self.defaultDataDiskSize = defaultDataDiskSize
            self.defaultSystemDiskSize = defaultSystemDiskSize
            self.systemDisk = systemDisk
            self.dataDisks = dataDisks
        }
        
        enum CodingKeys: String, CodingKey {
            case moduleId = "ModuleId"
            case instanceType = "InstanceType"
            case defaultDataDiskSize = "DefaultDataDiskSize"
            case defaultSystemDiskSize = "DefaultSystemDiskSize"
            case systemDisk = "SystemDisk"
            case dataDisks = "DataDisks"
        }
    }
    
    /// ModifyModuleConfig返回参数结构体
    public struct ModifyModuleConfigResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }
}