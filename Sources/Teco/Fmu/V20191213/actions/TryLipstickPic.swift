//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Fmu {
    /// TryLipstickPic请求参数结构体
    public struct TryLipstickPicRequest: TCRequestModel {
        /// 唇色信息。
        /// 您可以输入最多3个 LipColorInfo 来实现给一张图中的最多3张人脸试唇色。
        public let lipColorInfos: [LipColorInfo]

        /// 图片 base64 数据，base64 编码后大小不可超过6M。
        /// 支持PNG、JPG、JPEG、BMP，不支持 GIF 图片。
        public let image: String?

        /// 图片的 Url ，对应图片 base64 编码后大小不可超过6M。
        /// 图片的 Url、Image必须提供一个，如果都提供，只使用 Url。
        /// 图片存储于腾讯云的 Url 可保障更高下载速度和稳定性，建议图片存储于腾讯云。
        /// 非腾讯云存储的Url速度和稳定性可能受一定影响。
        /// 支持PNG、JPG、JPEG、BMP，不支持 GIF 图片。
        public let url: String?

        /// 返回图像方式（base64 或 url ) ，二选一。url有效期为1天。
        public let rspImgType: String?

        public init(lipColorInfos: [LipColorInfo], image: String? = nil, url: String? = nil, rspImgType: String? = nil) {
            self.lipColorInfos = lipColorInfos
            self.image = image
            self.url = url
            self.rspImgType = rspImgType
        }

        enum CodingKeys: String, CodingKey {
            case lipColorInfos = "LipColorInfos"
            case image = "Image"
            case url = "Url"
            case rspImgType = "RspImgType"
        }
    }

    /// TryLipstickPic返回参数结构体
    public struct TryLipstickPicResponse: TCResponseModel {
        /// RspImgType 为 base64 时，返回处理后的图片 base64 数据。默认返回base64
        public let resultImage: String

        /// RspImgType 为 url 时，返回处理后的图片 url 数据。
        public let resultUrl: String

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case resultImage = "ResultImage"
            case resultUrl = "ResultUrl"
            case requestId = "RequestId"
        }
    }

    /// 试唇色
    ///
    /// 对图片中的人脸嘴唇进行着色，最多支持同时对一张图中的3张人脸进行试唇色。
    /// 您可以通过事先注册在腾讯云的唇色素材（LUT文件）改变图片中的人脸唇色，也可以输入RGBA模型数值。
    /// 为了更好的效果，建议您使用事先注册在腾讯云的唇色素材（LUT文件）。
    /// >
    /// - 公共参数中的签名方式请使用V3版本，即配置SignatureMethod参数为TC3-HMAC-SHA256。
    @inlinable
    public func tryLipstickPic(_ input: TryLipstickPicRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<TryLipstickPicResponse> {
        self.client.execute(action: "TryLipstickPic", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 试唇色
    ///
    /// 对图片中的人脸嘴唇进行着色，最多支持同时对一张图中的3张人脸进行试唇色。
    /// 您可以通过事先注册在腾讯云的唇色素材（LUT文件）改变图片中的人脸唇色，也可以输入RGBA模型数值。
    /// 为了更好的效果，建议您使用事先注册在腾讯云的唇色素材（LUT文件）。
    /// >
    /// - 公共参数中的签名方式请使用V3版本，即配置SignatureMethod参数为TC3-HMAC-SHA256。
    @inlinable
    public func tryLipstickPic(_ input: TryLipstickPicRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> TryLipstickPicResponse {
        try await self.client.execute(action: "TryLipstickPic", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 试唇色
    ///
    /// 对图片中的人脸嘴唇进行着色，最多支持同时对一张图中的3张人脸进行试唇色。
    /// 您可以通过事先注册在腾讯云的唇色素材（LUT文件）改变图片中的人脸唇色，也可以输入RGBA模型数值。
    /// 为了更好的效果，建议您使用事先注册在腾讯云的唇色素材（LUT文件）。
    /// >
    /// - 公共参数中的签名方式请使用V3版本，即配置SignatureMethod参数为TC3-HMAC-SHA256。
    @inlinable
    public func tryLipstickPic(lipColorInfos: [LipColorInfo], image: String? = nil, url: String? = nil, rspImgType: String? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<TryLipstickPicResponse> {
        self.tryLipstickPic(TryLipstickPicRequest(lipColorInfos: lipColorInfos, image: image, url: url, rspImgType: rspImgType), logger: logger, on: eventLoop)
    }

    /// 试唇色
    ///
    /// 对图片中的人脸嘴唇进行着色，最多支持同时对一张图中的3张人脸进行试唇色。
    /// 您可以通过事先注册在腾讯云的唇色素材（LUT文件）改变图片中的人脸唇色，也可以输入RGBA模型数值。
    /// 为了更好的效果，建议您使用事先注册在腾讯云的唇色素材（LUT文件）。
    /// >
    /// - 公共参数中的签名方式请使用V3版本，即配置SignatureMethod参数为TC3-HMAC-SHA256。
    @inlinable
    public func tryLipstickPic(lipColorInfos: [LipColorInfo], image: String? = nil, url: String? = nil, rspImgType: String? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> TryLipstickPicResponse {
        try await self.tryLipstickPic(TryLipstickPicRequest(lipColorInfos: lipColorInfos, image: image, url: url, rspImgType: rspImgType), logger: logger, on: eventLoop)
    }
}
