//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Ssl {
    /// DescribeCertificateBindResourceTaskResult请求参数结构体
    public struct DescribeCertificateBindResourceTaskResultRequest: TCRequest {
        /// 任务ID，根据任务ID查询绑定云资源结果， 最大支持100个
        public let taskIds: [String]

        public init(taskIds: [String]) {
            self.taskIds = taskIds
        }

        enum CodingKeys: String, CodingKey {
            case taskIds = "TaskIds"
        }
    }

    /// DescribeCertificateBindResourceTaskResult返回参数结构体
    public struct DescribeCertificateBindResourceTaskResultResponse: TCResponse {
        /// 异步任务绑定关联云资源结果列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let syncTaskBindResourceResult: [SyncTaskBindResourceResult]?

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case syncTaskBindResourceResult = "SyncTaskBindResourceResult"
            case requestId = "RequestId"
        }
    }

    /// 查询证书关联云资源任务结果 - 仅返回总数
    ///
    /// 查询CreateCertificateBindResourceSyncTask任务结果， 返回证书关联云资源异步任务结果， 支持以下云资源：clb、cdn、waf、live、vod、ddos、tke、apigateway、tcb、teo（edgeOne）
    @inlinable
    public func describeCertificateBindResourceTaskResult(_ input: DescribeCertificateBindResourceTaskResultRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeCertificateBindResourceTaskResultResponse> {
        self.client.execute(action: "DescribeCertificateBindResourceTaskResult", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 查询证书关联云资源任务结果 - 仅返回总数
    ///
    /// 查询CreateCertificateBindResourceSyncTask任务结果， 返回证书关联云资源异步任务结果， 支持以下云资源：clb、cdn、waf、live、vod、ddos、tke、apigateway、tcb、teo（edgeOne）
    @inlinable
    public func describeCertificateBindResourceTaskResult(_ input: DescribeCertificateBindResourceTaskResultRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeCertificateBindResourceTaskResultResponse {
        try await self.client.execute(action: "DescribeCertificateBindResourceTaskResult", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 查询证书关联云资源任务结果 - 仅返回总数
    ///
    /// 查询CreateCertificateBindResourceSyncTask任务结果， 返回证书关联云资源异步任务结果， 支持以下云资源：clb、cdn、waf、live、vod、ddos、tke、apigateway、tcb、teo（edgeOne）
    @inlinable
    public func describeCertificateBindResourceTaskResult(taskIds: [String], region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeCertificateBindResourceTaskResultResponse> {
        self.describeCertificateBindResourceTaskResult(.init(taskIds: taskIds), region: region, logger: logger, on: eventLoop)
    }

    /// 查询证书关联云资源任务结果 - 仅返回总数
    ///
    /// 查询CreateCertificateBindResourceSyncTask任务结果， 返回证书关联云资源异步任务结果， 支持以下云资源：clb、cdn、waf、live、vod、ddos、tke、apigateway、tcb、teo（edgeOne）
    @inlinable
    public func describeCertificateBindResourceTaskResult(taskIds: [String], region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeCertificateBindResourceTaskResultResponse {
        try await self.describeCertificateBindResourceTaskResult(.init(taskIds: taskIds), region: region, logger: logger, on: eventLoop)
    }
}
