//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Trp {
    /// 修改批次
    ///
    /// 修改批次
    @inlinable
    public func modifyCodeBatch(_ input: ModifyCodeBatchRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < ModifyCodeBatchResponse > {
        self.client.execute(action: "ModifyCodeBatch", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 修改批次
    ///
    /// 修改批次
    @inlinable
    public func modifyCodeBatch(_ input: ModifyCodeBatchRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyCodeBatchResponse {
        try await self.client.execute(action: "ModifyCodeBatch", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// ModifyCodeBatch请求参数结构体
    public struct ModifyCodeBatchRequest: TCRequestModel {
        /// 批次ID
        public let batchId: String
        
        /// 企业ID
        public let corpId: UInt64?
        
        /// 状态 0: 未激活 1: 已激活 -1: 已冻结
        public let status: Int64?
        
        /// 模版ID，或者活动ID
        public let mpTpl: String?
        
        /// 商户ID
        public let merchantId: String?
        
        /// 商品ID
        public let productId: String?
        
        /// 备注
        public let remark: String?
        
        public init (batchId: String, corpId: UInt64?, status: Int64?, mpTpl: String?, merchantId: String?, productId: String?, remark: String?) {
            self.batchId = batchId
            self.corpId = corpId
            self.status = status
            self.mpTpl = mpTpl
            self.merchantId = merchantId
            self.productId = productId
            self.remark = remark
        }
        
        enum CodingKeys: String, CodingKey {
            case batchId = "BatchId"
            case corpId = "CorpId"
            case status = "Status"
            case mpTpl = "MpTpl"
            case merchantId = "MerchantId"
            case productId = "ProductId"
            case remark = "Remark"
        }
    }
    
    /// ModifyCodeBatch返回参数结构体
    public struct ModifyCodeBatchResponse: TCResponseModel {
        /// 批次ID
        public let batchId: String
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case batchId = "BatchId"
            case requestId = "RequestId"
        }
    }
}