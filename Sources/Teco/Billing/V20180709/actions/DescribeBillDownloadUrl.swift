//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Billing {
    /// DescribeBillDownloadUrl请求参数结构体
    public struct DescribeBillDownloadUrlRequest: TCRequest {
        /// 账单类型，枚举值
        /// billOverview=L0-PDF账单
        /// billSummary=L1-汇总账单
        /// billResource=L2-资源账单
        /// billDetail=L3-明细账单
        /// billPack=账单包
        public let fileType: String

        /// 账单月份
        /// 支持的最早开始月份为2021-01
        /// L0-PDF&账单包不支持当月下载，当月账单请在次月1号19:00出账后下载
        public let month: String

        /// 下载的账号 ID列表，默认查询本账号账单，如集团管理账号需下载成员账号自付的账单，该字段需入参成员账号UIN
        public let childUin: [String]?

        public init(fileType: String, month: String, childUin: [String]? = nil) {
            self.fileType = fileType
            self.month = month
            self.childUin = childUin
        }

        enum CodingKeys: String, CodingKey {
            case fileType = "FileType"
            case month = "Month"
            case childUin = "ChildUin"
        }
    }

    /// DescribeBillDownloadUrl返回参数结构体
    public struct DescribeBillDownloadUrlResponse: TCResponse {
        /// 账单文件是否准备就绪，0文件生成中，1文件已生成
        public let ready: Int64

        /// 账单文件下载链接，有效时长为一小时
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let downloadUrl: String?

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case ready = "Ready"
            case downloadUrl = "DownloadUrl"
            case requestId = "RequestId"
        }
    }

    /// 获取账单文件下载链接
    ///
    /// 该接口支持通过传参，获取L0-PDF、L1-汇总、L2-资源、L3-明细、账单包、五类账单文件下载链接
    @inlinable
    public func describeBillDownloadUrl(_ input: DescribeBillDownloadUrlRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeBillDownloadUrlResponse> {
        self.client.execute(action: "DescribeBillDownloadUrl", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 获取账单文件下载链接
    ///
    /// 该接口支持通过传参，获取L0-PDF、L1-汇总、L2-资源、L3-明细、账单包、五类账单文件下载链接
    @inlinable
    public func describeBillDownloadUrl(_ input: DescribeBillDownloadUrlRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeBillDownloadUrlResponse {
        try await self.client.execute(action: "DescribeBillDownloadUrl", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 获取账单文件下载链接
    ///
    /// 该接口支持通过传参，获取L0-PDF、L1-汇总、L2-资源、L3-明细、账单包、五类账单文件下载链接
    @inlinable
    public func describeBillDownloadUrl(fileType: String, month: String, childUin: [String]? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeBillDownloadUrlResponse> {
        self.describeBillDownloadUrl(.init(fileType: fileType, month: month, childUin: childUin), region: region, logger: logger, on: eventLoop)
    }

    /// 获取账单文件下载链接
    ///
    /// 该接口支持通过传参，获取L0-PDF、L1-汇总、L2-资源、L3-明细、账单包、五类账单文件下载链接
    @inlinable
    public func describeBillDownloadUrl(fileType: String, month: String, childUin: [String]? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeBillDownloadUrlResponse {
        try await self.describeBillDownloadUrl(.init(fileType: fileType, month: month, childUin: childUin), region: region, logger: logger, on: eventLoop)
    }
}
