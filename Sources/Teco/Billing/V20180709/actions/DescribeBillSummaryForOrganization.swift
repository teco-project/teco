//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Billing {
    /// DescribeBillSummaryForOrganization请求参数结构体
    public struct DescribeBillSummaryForOrganizationRequest: TCRequest {
        /// 账单月份，格式为2023-04
        public let month: String

        /// 账单维度类型，枚举值如下：business、project、region、payMode、tag
        public let groupType: String

        /// 标签键，GroupType=tag获取标签维度账单时传
        public let tagKey: [String]?

        public init(month: String, groupType: String, tagKey: [String]? = nil) {
            self.month = month
            self.groupType = groupType
            self.tagKey = tagKey
        }

        enum CodingKeys: String, CodingKey {
            case month = "Month"
            case groupType = "GroupType"
            case tagKey = "TagKey"
        }
    }

    /// DescribeBillSummaryForOrganization返回参数结构体
    public struct DescribeBillSummaryForOrganizationResponse: TCResponse {
        /// 数据是否准备好，0准备中，1已就绪。（Ready=0，为当前UIN首次进行初始化出账，预计需要5~10分钟出账，请于10分钟后重试即可）
        public let ready: UInt64

        /// 账单多维度汇总消费详情
        public let summaryDetail: [SummaryDetail]

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case ready = "Ready"
            case summaryDetail = "SummaryDetail"
            case requestId = "RequestId"
        }
    }

    /// 成员账号获取管理账号代付账单（按多维度汇总）
    ///
    /// 该接口支持通过传参，按照产品、项目、地域、计费模式和标签五个维度获取账单费用明细。
    @inlinable
    public func describeBillSummaryForOrganization(_ input: DescribeBillSummaryForOrganizationRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeBillSummaryForOrganizationResponse> {
        self.client.execute(action: "DescribeBillSummaryForOrganization", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 成员账号获取管理账号代付账单（按多维度汇总）
    ///
    /// 该接口支持通过传参，按照产品、项目、地域、计费模式和标签五个维度获取账单费用明细。
    @inlinable
    public func describeBillSummaryForOrganization(_ input: DescribeBillSummaryForOrganizationRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeBillSummaryForOrganizationResponse {
        try await self.client.execute(action: "DescribeBillSummaryForOrganization", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 成员账号获取管理账号代付账单（按多维度汇总）
    ///
    /// 该接口支持通过传参，按照产品、项目、地域、计费模式和标签五个维度获取账单费用明细。
    @inlinable
    public func describeBillSummaryForOrganization(month: String, groupType: String, tagKey: [String]? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeBillSummaryForOrganizationResponse> {
        self.describeBillSummaryForOrganization(.init(month: month, groupType: groupType, tagKey: tagKey), region: region, logger: logger, on: eventLoop)
    }

    /// 成员账号获取管理账号代付账单（按多维度汇总）
    ///
    /// 该接口支持通过传参，按照产品、项目、地域、计费模式和标签五个维度获取账单费用明细。
    @inlinable
    public func describeBillSummaryForOrganization(month: String, groupType: String, tagKey: [String]? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeBillSummaryForOrganizationResponse {
        try await self.describeBillSummaryForOrganization(.init(month: month, groupType: groupType, tagKey: tagKey), region: region, logger: logger, on: eventLoop)
    }
}
