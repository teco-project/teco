//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Tke {
    /// 删除Prometheus配置
    ///
    /// 删除Prometheus配置，如果目标不存在，将返回成功
    @inlinable
    public func deletePrometheusConfig(_ input: DeletePrometheusConfigRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DeletePrometheusConfigResponse > {
        self.client.execute(action: "DeletePrometheusConfig", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 删除Prometheus配置
    ///
    /// 删除Prometheus配置，如果目标不存在，将返回成功
    @inlinable
    public func deletePrometheusConfig(_ input: DeletePrometheusConfigRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DeletePrometheusConfigResponse {
        try await self.client.execute(action: "DeletePrometheusConfig", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DeletePrometheusConfig请求参数结构体
    public struct DeletePrometheusConfigRequest: TCRequestModel {
        /// 实例id
        public let instanceId: String
        
        /// 集群类型
        public let clusterType: String
        
        /// 集群id
        public let clusterId: String
        
        /// 要删除的ServiceMonitor名字列表
        public let serviceMonitors: [String]?
        
        /// 要删除的PodMonitor名字列表
        public let podMonitors: [String]?
        
        /// 要删除的RawJobs名字列表
        public let rawJobs: [String]?
        
        public init (instanceId: String, clusterType: String, clusterId: String, serviceMonitors: [String]?, podMonitors: [String]?, rawJobs: [String]?) {
            self.instanceId = instanceId
            self.clusterType = clusterType
            self.clusterId = clusterId
            self.serviceMonitors = serviceMonitors
            self.podMonitors = podMonitors
            self.rawJobs = rawJobs
        }
        
        enum CodingKeys: String, CodingKey {
            case instanceId = "InstanceId"
            case clusterType = "ClusterType"
            case clusterId = "ClusterId"
            case serviceMonitors = "ServiceMonitors"
            case podMonitors = "PodMonitors"
            case rawJobs = "RawJobs"
        }
    }
    
    /// DeletePrometheusConfig返回参数结构体
    public struct DeletePrometheusConfigResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }
}
