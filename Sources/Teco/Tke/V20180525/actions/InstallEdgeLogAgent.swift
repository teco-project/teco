//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Tke {
    /// 安装边缘日志采集组件
    ///
    /// 在tke@edge集群的边缘节点上安装日志采集组件
    @inlinable
    public func installEdgeLogAgent(_ input: InstallEdgeLogAgentRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < InstallEdgeLogAgentResponse > {
        self.client.execute(action: "InstallEdgeLogAgent", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 安装边缘日志采集组件
    ///
    /// 在tke@edge集群的边缘节点上安装日志采集组件
    @inlinable
    public func installEdgeLogAgent(_ input: InstallEdgeLogAgentRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> InstallEdgeLogAgentResponse {
        try await self.client.execute(action: "InstallEdgeLogAgent", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// InstallEdgeLogAgent请求参数结构体
    public struct InstallEdgeLogAgentRequest: TCRequestModel {
        /// 集群ID
        public let clusterId: String
        
        public init (clusterId: String) {
            self.clusterId = clusterId
        }
        
        enum CodingKeys: String, CodingKey {
            case clusterId = "ClusterId"
        }
    }
    
    /// InstallEdgeLogAgent返回参数结构体
    public struct InstallEdgeLogAgentResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }
}
