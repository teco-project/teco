//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Tdmq {
    /// 更新Amqp集群信息
    ///
    /// 更新Amqp集群信息
    @inlinable
    public func modifyAMQPCluster(_ input: ModifyAMQPClusterRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < ModifyAMQPClusterResponse > {
        self.client.execute(action: "ModifyAMQPCluster", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 更新Amqp集群信息
    ///
    /// 更新Amqp集群信息
    @inlinable
    public func modifyAMQPCluster(_ input: ModifyAMQPClusterRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyAMQPClusterResponse {
        try await self.client.execute(action: "ModifyAMQPCluster", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// ModifyAMQPCluster请求参数结构体
    public struct ModifyAMQPClusterRequest: TCRequestModel {
        /// 集群ID
        public let clusterId: String
        
        /// 3-64个字符，只能包含字母、数字、“-”及“_”
        public let clusterName: String
        
        /// 说明信息，不超过128个字符
        public let remark: String?
        
        public init (clusterId: String, clusterName: String, remark: String?) {
            self.clusterId = clusterId
            self.clusterName = clusterName
            self.remark = remark
        }
        
        enum CodingKeys: String, CodingKey {
            case clusterId = "ClusterId"
            case clusterName = "ClusterName"
            case remark = "Remark"
        }
    }
    
    /// ModifyAMQPCluster返回参数结构体
    public struct ModifyAMQPClusterResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }
}