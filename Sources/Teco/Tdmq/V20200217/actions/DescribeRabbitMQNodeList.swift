//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Tdmq {
    /// RabbitMQ专享版查询节点列表
    @inlinable
    public func describeRabbitMQNodeList(_ input: DescribeRabbitMQNodeListRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeRabbitMQNodeListResponse > {
        self.client.execute(action: "DescribeRabbitMQNodeList", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// RabbitMQ专享版查询节点列表
    @inlinable
    public func describeRabbitMQNodeList(_ input: DescribeRabbitMQNodeListRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeRabbitMQNodeListResponse {
        try await self.client.execute(action: "DescribeRabbitMQNodeList", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribeRabbitMQNodeList请求参数结构体
    public struct DescribeRabbitMQNodeListRequest: TCRequestModel {
        /// rabbitmq集群ID
        public let instanceId: String
        
        /// 偏移量
        public let offset: UInt64?
        
        /// 一页限制
        public let limit: UInt64?
        
        public init (instanceId: String, offset: UInt64?, limit: UInt64?) {
            self.instanceId = instanceId
            self.offset = offset
            self.limit = limit
        }
        
        enum CodingKeys: String, CodingKey {
            case instanceId = "InstanceId"
            case offset = "Offset"
            case limit = "Limit"
        }
    }
    
    /// DescribeRabbitMQNodeList返回参数结构体
    public struct DescribeRabbitMQNodeListResponse: TCResponseModel {
        /// 集群列表数量
        public let totalCount: UInt64
        
        /// 集群列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let nodeList: [RabbitMQPrivateNode]?
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case totalCount = "TotalCount"
            case nodeList = "NodeList"
            case requestId = "RequestId"
        }
    }
}
