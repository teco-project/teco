//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Dlc {
    /// DMS元数据更新库
    ///
    /// DMS元数据更新库
    @inlinable
    public func alterDMSDatabase(_ input: AlterDMSDatabaseRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < AlterDMSDatabaseResponse > {
        self.client.execute(action: "AlterDMSDatabase", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// DMS元数据更新库
    ///
    /// DMS元数据更新库
    @inlinable
    public func alterDMSDatabase(_ input: AlterDMSDatabaseRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> AlterDMSDatabaseResponse {
        try await self.client.execute(action: "AlterDMSDatabase", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// AlterDMSDatabase请求参数结构体
    public struct AlterDMSDatabaseRequest: TCRequestModel {
        /// 当前名称
        public let currentName: String?
        
        /// schema名称
        public let schemaName: String?
        
        /// 路径
        public let location: String?
        
        /// 基础对象
        public let asset: Asset
        
        public init (currentName: String?, schemaName: String?, location: String?, asset: Asset) {
            self.currentName = currentName
            self.schemaName = schemaName
            self.location = location
            self.asset = asset
        }
        
        enum CodingKeys: String, CodingKey {
            case currentName = "CurrentName"
            case schemaName = "SchemaName"
            case location = "Location"
            case asset = "Asset"
        }
    }
    
    /// AlterDMSDatabase返回参数结构体
    public struct AlterDMSDatabaseResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }
}