//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

// Test PR teco-project/teco-code-generator#23.

import TecoCore

extension TCScfError {
    public struct ResourceNotFound: TCScfErrorType {
        enum Code: String {
            case alias = "ResourceNotFound.Alias"
            case asyncEvent = "ResourceNotFound.AsyncEvent"
            case attachedTagKeyNotFound = "ResourceNotFound.AttachedTagKeyNotFound"
            case cdn = "ResourceNotFound.Cdn"
            case cfsMountInsNotMatch = "ResourceNotFound.CfsMountInsNotMatch"
            case cfsProtocolError = "ResourceNotFound.CfsProtocolError"
            case cfsStatusError = "ResourceNotFound.CfsStatusError"
            case cfsVpcNotMatch = "ResourceNotFound.CfsVpcNotMatch"
            case ckafka = "ResourceNotFound.Ckafka"
            case cmq = "ResourceNotFound.Cmq"
            case cos = "ResourceNotFound.Cos"
            case demo = "ResourceNotFound.Demo"
            case function = "ResourceNotFound.Function"
            case functionName = "ResourceNotFound.FunctionName"
            case functionVersion = "ResourceNotFound.FunctionVersion"
            case getCfsMountInsError = "ResourceNotFound.GetCfsMountInsError"
            case getCfsNotMatch = "ResourceNotFound.GetCfsNotMatch"
            case imageConfig = "ResourceNotFound.ImageConfig"
            case layer = "ResourceNotFound.Layer"
            case layerVersion = "ResourceNotFound.LayerVersion"
            case namespace = "ResourceNotFound.Namespace"
            case qualifier = "ResourceNotFound.Qualifier"
            case role = "ResourceNotFound.Role"
            case roleCheck = "ResourceNotFound.RoleCheck"
            case timer = "ResourceNotFound.Timer"
            case totalConcurrencyMemory = "ResourceNotFound.TotalConcurrencyMemory"
            case trigger = "ResourceNotFound.Trigger"
            case version = "ResourceNotFound.Version"
            case vpc = "ResourceNotFound.Vpc"
            case other = "ResourceNotFound"
        }

        private let error: Code

        public let context: TCErrorContext?

        public var errorCode: String {
            self.error.rawValue
        }

        /// Initializer used by ``TCClient`` to match an error of this type.
        public init?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }

        internal init(_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }

        /// 别名不存在。
        public static var alias: ResourceNotFound {
            ResourceNotFound(.alias)
        }

        /// 未找到指定的AsyncEvent，请创建后再试。
        public static var asyncEvent: ResourceNotFound {
            ResourceNotFound(.asyncEvent)
        }

        /// 函数需要关联的标签Key不存在。
        public static var attachedTagKeyNotFound: ResourceNotFound {
            ResourceNotFound(.attachedTagKeyNotFound)
        }

        /// Cdn不存在。
        public static var cdn: ResourceNotFound {
            ResourceNotFound(.cdn)
        }

        /// 指定的cfs下未找到您所指定的挂载点。
        public static var cfsMountInsNotMatch: ResourceNotFound {
            ResourceNotFound(.cfsMountInsNotMatch)
        }

        /// CfsProtocolError 参数异常。
        public static var cfsProtocolError: ResourceNotFound {
            ResourceNotFound(.cfsProtocolError)
        }

        /// 检测cfs状态为不可用。
        public static var cfsStatusError: ResourceNotFound {
            ResourceNotFound(.cfsStatusError)
        }

        /// cfs与云函数所处vpc不一致。
        public static var cfsVpcNotMatch: ResourceNotFound {
            ResourceNotFound(.cfsVpcNotMatch)
        }

        /// Ckafka不存在。
        public static var ckafka: ResourceNotFound {
            ResourceNotFound(.ckafka)
        }

        /// Cmq不存在。
        public static var cmq: ResourceNotFound {
            ResourceNotFound(.cmq)
        }

        /// Cos不存在。
        public static var cos: ResourceNotFound {
            ResourceNotFound(.cos)
        }

        /// 不存在的Demo。
        public static var demo: ResourceNotFound {
            ResourceNotFound(.demo)
        }

        /// 函数不存在。
        public static var function: ResourceNotFound {
            ResourceNotFound(.function)
        }

        /// 函数不存在。
        public static var functionName: ResourceNotFound {
            ResourceNotFound(.functionName)
        }

        /// 函数版本不存在。
        public static var functionVersion: ResourceNotFound {
            ResourceNotFound(.functionVersion)
        }

        /// 获取cfs挂载点信息错误。
        public static var getCfsMountInsError: ResourceNotFound {
            ResourceNotFound(.getCfsMountInsError)
        }

        /// 获取cfs信息错误。
        public static var getCfsNotMatch: ResourceNotFound {
            ResourceNotFound(.getCfsNotMatch)
        }

        /// 未找到指定的ImageConfig，请创建后再试。
        ///
        /// 检查入参Code是否包含ImageConfig成员或ImageConfig是否有效
        public static var imageConfig: ResourceNotFound {
            ResourceNotFound(.imageConfig)
        }

        /// layer不存在。
        public static var layer: ResourceNotFound {
            ResourceNotFound(.layer)
        }

        /// Layer版本不存在。
        public static var layerVersion: ResourceNotFound {
            ResourceNotFound(.layerVersion)
        }

        /// Namespace不存在。
        public static var namespace: ResourceNotFound {
            ResourceNotFound(.namespace)
        }

        /// 版本不存在。
        public static var qualifier: ResourceNotFound {
            ResourceNotFound(.qualifier)
        }

        /// 角色不存在。
        public static var role: ResourceNotFound {
            ResourceNotFound(.role)
        }

        /// Role不存在。
        public static var roleCheck: ResourceNotFound {
            ResourceNotFound(.roleCheck)
        }

        /// Timer不存在。
        public static var timer: ResourceNotFound {
            ResourceNotFound(.timer)
        }

        /// 并发内存配额资源未找到。
        public static var totalConcurrencyMemory: ResourceNotFound {
            ResourceNotFound(.totalConcurrencyMemory)
        }

        /// 触发器不存在。
        public static var trigger: ResourceNotFound {
            ResourceNotFound(.trigger)
        }

        /// 版本不存在。
        public static var version: ResourceNotFound {
            ResourceNotFound(.version)
        }

        /// VPC或子网不存在。
        public static var vpc: ResourceNotFound {
            ResourceNotFound(.vpc)
        }

        /// 资源不存在。
        public static var other: ResourceNotFound {
            ResourceNotFound(.other)
        }

        public func asScfError() -> TCScfError {
            let code: TCScfError.Code
            switch self.error {
            case .alias:
                code = .resourceNotFound_Alias
            case .asyncEvent:
                code = .resourceNotFound_AsyncEvent
            case .attachedTagKeyNotFound:
                code = .resourceNotFound_AttachedTagKeyNotFound
            case .cdn:
                code = .resourceNotFound_Cdn
            case .cfsMountInsNotMatch:
                code = .resourceNotFound_CfsMountInsNotMatch
            case .cfsProtocolError:
                code = .resourceNotFound_CfsProtocolError
            case .cfsStatusError:
                code = .resourceNotFound_CfsStatusError
            case .cfsVpcNotMatch:
                code = .resourceNotFound_CfsVpcNotMatch
            case .ckafka:
                code = .resourceNotFound_Ckafka
            case .cmq:
                code = .resourceNotFound_Cmq
            case .cos:
                code = .resourceNotFound_Cos
            case .demo:
                code = .resourceNotFound_Demo
            case .function:
                code = .resourceNotFound_Function
            case .functionName:
                code = .resourceNotFound_FunctionName
            case .functionVersion:
                code = .resourceNotFound_FunctionVersion
            case .getCfsMountInsError:
                code = .resourceNotFound_GetCfsMountInsError
            case .getCfsNotMatch:
                code = .resourceNotFound_GetCfsNotMatch
            case .imageConfig:
                code = .resourceNotFound_ImageConfig
            case .layer:
                code = .resourceNotFound_Layer
            case .layerVersion:
                code = .resourceNotFound_LayerVersion
            case .namespace:
                code = .resourceNotFound_Namespace
            case .qualifier:
                code = .resourceNotFound_Qualifier
            case .role:
                code = .resourceNotFound_Role
            case .roleCheck:
                code = .resourceNotFound_RoleCheck
            case .timer:
                code = .resourceNotFound_Timer
            case .totalConcurrencyMemory:
                code = .resourceNotFound_TotalConcurrencyMemory
            case .trigger:
                code = .resourceNotFound_Trigger
            case .version:
                code = .resourceNotFound_Version
            case .vpc:
                code = .resourceNotFound_Vpc
            case .other:
                code = .resourceNotFound
            }
            return TCScfError(code, context: self.context)
        }
    }
}
