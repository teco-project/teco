//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension TCScfError {
    public struct InvalidParameterValue: TCErrorType {
        enum Code: String {
            case action = "InvalidParameterValue.Action"
            case additionalVersionWeights = "InvalidParameterValue.AdditionalVersionWeights"
            case alias = "InvalidParameterValue.Alias"
            case apiGateway = "InvalidParameterValue.ApiGateway"
            case apmConfig = "InvalidParameterValue.ApmConfig"
            case apmConfigInstanceId = "InvalidParameterValue.ApmConfigInstanceId"
            case apmConfigRegion = "InvalidParameterValue.ApmConfigRegion"
            case args = "InvalidParameterValue.Args"
            case asyncRunEnable = "InvalidParameterValue.AsyncRunEnable"
            case asyncTriggerConfig = "InvalidParameterValue.AsyncTriggerConfig"
            case cdn = "InvalidParameterValue.Cdn"
            case cfsParameterDuplicate = "InvalidParameterValue.CfsParameterDuplicate"
            case cfsParameterError = "InvalidParameterValue.CfsParameterError"
            case cfsStructionError = "InvalidParameterValue.CfsStructionError"
            case ckafka = "InvalidParameterValue.Ckafka"
            case clientContext = "InvalidParameterValue.ClientContext"
            case cls = "InvalidParameterValue.Cls"
            case clsRole = "InvalidParameterValue.ClsRole"
            case cmq = "InvalidParameterValue.Cmq"
            case code = "InvalidParameterValue.Code"
            case codeSecret = "InvalidParameterValue.CodeSecret"
            case codeSource = "InvalidParameterValue.CodeSource"
            case command = "InvalidParameterValue.Command"
            case compatibleRuntimes = "InvalidParameterValue.CompatibleRuntimes"
            case content = "InvalidParameterValue.Content"
            case cos = "InvalidParameterValue.Cos"
            case cosBucketName = "InvalidParameterValue.CosBucketName"
            case cosBucketRegion = "InvalidParameterValue.CosBucketRegion"
            case cosNotifyRuleConflict = "InvalidParameterValue.CosNotifyRuleConflict"
            case cosObjectName = "InvalidParameterValue.CosObjectName"
            case customArgument = "InvalidParameterValue.CustomArgument"
            case dateTime = "InvalidParameterValue.DateTime"
            case deadLetterConfig = "InvalidParameterValue.DeadLetterConfig"
            case defaultNamespace = "InvalidParameterValue.DefaultNamespace"
            case demo = "InvalidParameterValue.Demo"
            case demoId = "InvalidParameterValue.DemoId"
            case description = "InvalidParameterValue.Description"
            case dnsInfo = "InvalidParameterValue.DnsInfo"
            case dynamicEnabled = "InvalidParameterValue.DynamicEnabled"
            case eipConfig = "InvalidParameterValue.EipConfig"
            case enable = "InvalidParameterValue.Enable"
            case environment = "InvalidParameterValue.Environment"
            case environmentExceededLimit = "InvalidParameterValue.EnvironmentExceededLimit"
            case environmentSystemProtect = "InvalidParameterValue.EnvironmentSystemProtect"
            case filters = "InvalidParameterValue.Filters"
            case function = "InvalidParameterValue.Function"
            case functionName = "InvalidParameterValue.FunctionName"
            case functionRequestId = "InvalidParameterValue.FunctionRequestId"
            case functionType = "InvalidParameterValue.FunctionType"
            case gitBranch = "InvalidParameterValue.GitBranch"
            case gitCommitId = "InvalidParameterValue.GitCommitId"
            case gitDirectory = "InvalidParameterValue.GitDirectory"
            case gitPassword = "InvalidParameterValue.GitPassword"
            case gitPasswordSecret = "InvalidParameterValue.GitPasswordSecret"
            case gitUrl = "InvalidParameterValue.GitUrl"
            case gitUserName = "InvalidParameterValue.GitUserName"
            case gitUserNameSecret = "InvalidParameterValue.GitUserNameSecret"
            case handler = "InvalidParameterValue.Handler"
            case idleTimeOut = "InvalidParameterValue.IdleTimeOut"
            case imageType = "InvalidParameterValue.ImageType"
            case imageUri = "InvalidParameterValue.ImageUri"
            case inlineZipFile = "InvalidParameterValue.InlineZipFile"
            case instanceConcurrencyConfig = "InvalidParameterValue.InstanceConcurrencyConfig"
            case invokeType = "InvalidParameterValue.InvokeType"
            case l5Enable = "InvalidParameterValue.L5Enable"
            case layerName = "InvalidParameterValue.LayerName"
            case layers = "InvalidParameterValue.Layers"
            case limit = "InvalidParameterValue.Limit"
            case limitExceeded = "InvalidParameterValue.LimitExceeded"
            case maxConcurrency = "InvalidParameterValue.MaxConcurrency"
            case memory = "InvalidParameterValue.Memory"
            case memorySize = "InvalidParameterValue.MemorySize"
            case minCapacity = "InvalidParameterValue.MinCapacity"
            case name = "InvalidParameterValue.Name"
            case namespace = "InvalidParameterValue.Namespace"
            case namespaceInvalid = "InvalidParameterValue.NamespaceInvalid"
            case nodeSpec = "InvalidParameterValue.NodeSpec"
            case nodeType = "InvalidParameterValue.NodeType"
            case offset = "InvalidParameterValue.Offset"
            case order = "InvalidParameterValue.Order"
            case orderBy = "InvalidParameterValue.OrderBy"
            case orderby = "InvalidParameterValue.Orderby"
            case param = "InvalidParameterValue.Param"
            case protocolType = "InvalidParameterValue.ProtocolType"
            case provisionTriggerCronConfigDuplicate = "InvalidParameterValue.ProvisionTriggerCronConfigDuplicate"
            case provisionTriggerName = "InvalidParameterValue.ProvisionTriggerName"
            case provisionTriggerNameDuplicate = "InvalidParameterValue.ProvisionTriggerNameDuplicate"
            case provisionType = "InvalidParameterValue.ProvisionType"
            case publicNetConfig = "InvalidParameterValue.PublicNetConfig"
            case qualifier = "InvalidParameterValue.Qualifier"
            case queryVersion = "InvalidParameterValue.QueryVersion"
            case registryId = "InvalidParameterValue.RegistryId"
            case retCode = "InvalidParameterValue.RetCode"
            case routingConfig = "InvalidParameterValue.RoutingConfig"
            case runtime = "InvalidParameterValue.Runtime"
            case searchKey = "InvalidParameterValue.SearchKey"
            case secretInfo = "InvalidParameterValue.SecretInfo"
            case serviceName = "InvalidParameterValue.ServiceName"
            case stamp = "InvalidParameterValue.Stamp"
            case startTime = "InvalidParameterValue.StartTime"
            case startTimeOrEndTime = "InvalidParameterValue.StartTimeOrEndTime"
            case status = "InvalidParameterValue.Status"
            case systemEnvironment = "InvalidParameterValue.SystemEnvironment"
            case tempCosObjectName = "InvalidParameterValue.TempCosObjectName"
            case traceEnable = "InvalidParameterValue.TraceEnable"
            case trackingTarget = "InvalidParameterValue.TrackingTarget"
            case triggerCronConfig = "InvalidParameterValue.TriggerCronConfig"
            case triggerCronConfigTimeInterval = "InvalidParameterValue.TriggerCronConfigTimeInterval"
            case triggerDesc = "InvalidParameterValue.TriggerDesc"
            case triggerName = "InvalidParameterValue.TriggerName"
            case triggerProvisionedConcurrencyNum = "InvalidParameterValue.TriggerProvisionedConcurrencyNum"
            case type = "InvalidParameterValue.Type"
            case vpcNotSetWhenOpenCfs = "InvalidParameterValue.VpcNotSetWhenOpenCfs"
            case webSocketsParams = "InvalidParameterValue.WebSocketsParams"
            case zipFile = "InvalidParameterValue.ZipFile"
            case zipFileBase64BinasciiError = "InvalidParameterValue.ZipFileBase64BinasciiError"
            case other = "InvalidParameterValue"
        }
        
        private let error: Code
        
        public let context: TCErrorContext?
        
        public var errorCode: String {
            self.error.rawValue
        }
        
        public init ?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }
        
        internal init (_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }
        
        /// Action取值与规范不符，请修正后再试。可参考：https://tencentcs.com/5jXKFnBW。
        public static var action: InvalidParameterValue {
            InvalidParameterValue(.action)
        }
        
        /// AdditionalVersionWeights参数传入错误。
        public static var additionalVersionWeights: InvalidParameterValue {
            InvalidParameterValue(.additionalVersionWeights)
        }
        
        /// 不支持删除默认别名，请修正后重试。
        public static var alias: InvalidParameterValue {
            InvalidParameterValue(.alias)
        }
        
        /// ApiGateway参数错误。
        public static var apiGateway: InvalidParameterValue {
            InvalidParameterValue(.apiGateway)
        }
        
        /// ApmConfig参数传入错误。
        public static var apmConfig: InvalidParameterValue {
            InvalidParameterValue(.apmConfig)
        }
        
        /// ApmConfigInstanceId参数传入错误。
        public static var apmConfigInstanceId: InvalidParameterValue {
            InvalidParameterValue(.apmConfigInstanceId)
        }
        
        /// ApmConfigRegion参数传入错误。
        public static var apmConfigRegion: InvalidParameterValue {
            InvalidParameterValue(.apmConfigRegion)
        }
        
        /// Args 参数值有误。
        public static var args: InvalidParameterValue {
            InvalidParameterValue(.args)
        }
        
        /// AsyncRunEnable 取值不正确。
        public static var asyncRunEnable: InvalidParameterValue {
            InvalidParameterValue(.asyncRunEnable)
        }
        
        /// 函数异步重试配置参数无效。
        public static var asyncTriggerConfig: InvalidParameterValue {
            InvalidParameterValue(.asyncTriggerConfig)
        }
        
        /// Cdn传入错误。
        public static var cdn: InvalidParameterValue {
            InvalidParameterValue(.cdn)
        }
        
        /// cfs配置项重复。
        public static var cfsParameterDuplicate: InvalidParameterValue {
            InvalidParameterValue(.cfsParameterDuplicate)
        }
        
        /// cfs配置项取值与规范不符。
        public static var cfsParameterError: InvalidParameterValue {
            InvalidParameterValue(.cfsParameterError)
        }
        
        /// cfs参数格式与规范不符。
        public static var cfsStructionError: InvalidParameterValue {
            InvalidParameterValue(.cfsStructionError)
        }
        
        /// Ckafka传入错误。
        public static var ckafka: InvalidParameterValue {
            InvalidParameterValue(.ckafka)
        }
        
        /// 运行函数时的参数传入有误。
        public static var clientContext: InvalidParameterValue {
            InvalidParameterValue(.clientContext)
        }
        
        /// Cls传入错误。
        public static var cls: InvalidParameterValue {
            InvalidParameterValue(.cls)
        }
        
        /// 修改Cls配置需要传入Role参数，请修正后重试。
        public static var clsRole: InvalidParameterValue {
            InvalidParameterValue(.clsRole)
        }
        
        /// Cmq传入错误。
        public static var cmq: InvalidParameterValue {
            InvalidParameterValue(.cmq)
        }
        
        /// Code传入错误。
        public static var code: InvalidParameterValue {
            InvalidParameterValue(.code)
        }
        
        /// CodeSecret传入错误。
        public static var codeSecret: InvalidParameterValue {
            InvalidParameterValue(.codeSecret)
        }
        
        /// CodeSource传入错误。
        public static var codeSource: InvalidParameterValue {
            InvalidParameterValue(.codeSource)
        }
        
        /// Command[Entrypoint] 参数值有误。
        public static var command: InvalidParameterValue {
            InvalidParameterValue(.command)
        }
        
        /// CompatibleRuntimes参数传入错误。
        public static var compatibleRuntimes: InvalidParameterValue {
            InvalidParameterValue(.compatibleRuntimes)
        }
        
        /// Content参数传入错误。
        public static var content: InvalidParameterValue {
            InvalidParameterValue(.content)
        }
        
        /// Cos传入错误。
        public static var cos: InvalidParameterValue {
            InvalidParameterValue(.cos)
        }
        
        /// CosBucketName不符合规范。
        public static var cosBucketName: InvalidParameterValue {
            InvalidParameterValue(.cosBucketName)
        }
        
        /// CosBucketRegion取值与规范不符，请修正后再试。可参考：https://tencentcs.com/5jXKFnBW。
        public static var cosBucketRegion: InvalidParameterValue {
            InvalidParameterValue(.cosBucketRegion)
        }
        
        public static var cosNotifyRuleConflict: InvalidParameterValue {
            InvalidParameterValue(.cosNotifyRuleConflict)
        }
        
        /// CosObjectName不符合规范。
        public static var cosObjectName: InvalidParameterValue {
            InvalidParameterValue(.cosObjectName)
        }
        
        /// CustomArgument参数长度超限。
        public static var customArgument: InvalidParameterValue {
            InvalidParameterValue(.customArgument)
        }
        
        /// DateTime传入错误。
        public static var dateTime: InvalidParameterValue {
            InvalidParameterValue(.dateTime)
        }
        
        /// DeadLetterConfig取值与规范不符，请修正后再试。可参考：https://tencentcs.com/5jXKFnBW。
        public static var deadLetterConfig: InvalidParameterValue {
            InvalidParameterValue(.deadLetterConfig)
        }
        
        /// 默认Namespace无法创建。
        public static var defaultNamespace: InvalidParameterValue {
            InvalidParameterValue(.defaultNamespace)
        }
        
        /// DemoID  对应的函数模板 ，code 参数值有误，请确认后重试。
        public static var demo: InvalidParameterValue {
            InvalidParameterValue(.demo)
        }
        
        /// DemoId 不存在。
        public static var demoId: InvalidParameterValue {
            InvalidParameterValue(.demoId)
        }
        
        /// Description传入错误。
        public static var description: InvalidParameterValue {
            InvalidParameterValue(.description)
        }
        
        /// 环境变量DNS[OS_NAMESERVER]配置有误。
        public static var dnsInfo: InvalidParameterValue {
            InvalidParameterValue(.dnsInfo)
        }
        
        /// DynamicEnabled 参数传入错误。
        public static var dynamicEnabled: InvalidParameterValue {
            InvalidParameterValue(.dynamicEnabled)
        }
        
        /// EipConfig参数错误。
        public static var eipConfig: InvalidParameterValue {
            InvalidParameterValue(.eipConfig)
        }
        
        /// Enable取值与规范不符，请修正后再试。可参考：https://tencentcs.com/5jXKFnBW。
        public static var enable: InvalidParameterValue {
            InvalidParameterValue(.enable)
        }
        
        /// Environment传入错误。
        public static var environment: InvalidParameterValue {
            InvalidParameterValue(.environment)
        }
        
        /// 环境变量大小超限，请保持在 4KB 以内。
        public static var environmentExceededLimit: InvalidParameterValue {
            InvalidParameterValue(.environmentExceededLimit)
        }
        
        /// 不支持修改函数系统环境变量和运行环境变量。
        public static var environmentSystemProtect: InvalidParameterValue {
            InvalidParameterValue(.environmentSystemProtect)
        }
        
        /// Filters参数错误。
        public static var filters: InvalidParameterValue {
            InvalidParameterValue(.filters)
        }
        
        /// Function取值与规范不符，请修正后再试。可参考：https://tencentcs.com/5jXKFnBW。
        public static var function: InvalidParameterValue {
            InvalidParameterValue(.function)
        }
        
        /// 函数不存在。
        public static var functionName: InvalidParameterValue {
            InvalidParameterValue(.functionName)
        }
        
        /// 请求 id 传参错误。
        public static var functionRequestId: InvalidParameterValue {
            InvalidParameterValue(.functionRequestId)
        }
        
        /// FunctionType参数错误。
        public static var functionType: InvalidParameterValue {
            InvalidParameterValue(.functionType)
        }
        
        /// GitBranch不符合规范。
        public static var gitBranch: InvalidParameterValue {
            InvalidParameterValue(.gitBranch)
        }
        
        /// GitCommitId取值与规范不符，请修正后再试。可参考：https://tencentcs.com/5jXKFnBW。
        public static var gitCommitId: InvalidParameterValue {
            InvalidParameterValue(.gitCommitId)
        }
        
        /// GitDirectory不符合规范。
        public static var gitDirectory: InvalidParameterValue {
            InvalidParameterValue(.gitDirectory)
        }
        
        /// GitPassword不符合规范。
        public static var gitPassword: InvalidParameterValue {
            InvalidParameterValue(.gitPassword)
        }
        
        /// GitPasswordSecret 传参有误。
        public static var gitPasswordSecret: InvalidParameterValue {
            InvalidParameterValue(.gitPasswordSecret)
        }
        
        /// GitUrl不符合规范。
        public static var gitUrl: InvalidParameterValue {
            InvalidParameterValue(.gitUrl)
        }
        
        /// GitUserName不符合规范。
        public static var gitUserName: InvalidParameterValue {
            InvalidParameterValue(.gitUserName)
        }
        
        /// GitUserNameSecret 传参有误。
        public static var gitUserNameSecret: InvalidParameterValue {
            InvalidParameterValue(.gitUserNameSecret)
        }
        
        /// Handler传入错误。
        public static var handler: InvalidParameterValue {
            InvalidParameterValue(.handler)
        }
        
        /// IdleTimeOut参数传入错误。
        public static var idleTimeOut: InvalidParameterValue {
            InvalidParameterValue(.idleTimeOut)
        }
        
        /// ImageType 参数值有误。
        public static var imageType: InvalidParameterValue {
            InvalidParameterValue(.imageType)
        }
        
        /// imageUri 传入有误。
        public static var imageUri: InvalidParameterValue {
            InvalidParameterValue(.imageUri)
        }
        
        /// InlineZipFile非法。
        public static var inlineZipFile: InvalidParameterValue {
            InvalidParameterValue(.inlineZipFile)
        }
        
        /// InstanceConcurrencyConfig 参数传入错误。
        public static var instanceConcurrencyConfig: InvalidParameterValue {
            InvalidParameterValue(.instanceConcurrencyConfig)
        }
        
        /// InvokeType取值与规范不符，请修正后再试。
        public static var invokeType: InvalidParameterValue {
            InvalidParameterValue(.invokeType)
        }
        
        /// L5Enable取值与规范不符，请修正后再试。
        public static var l5Enable: InvalidParameterValue {
            InvalidParameterValue(.l5Enable)
        }
        
        /// LayerName参数传入错误。
        public static var layerName: InvalidParameterValue {
            InvalidParameterValue(.layerName)
        }
        
        /// Layers参数传入错误。
        public static var layers: InvalidParameterValue {
            InvalidParameterValue(.layers)
        }
        
        /// Limit传入错误。
        public static var limit: InvalidParameterValue {
            InvalidParameterValue(.limit)
        }
        
        /// 参数超出长度限制。
        public static var limitExceeded: InvalidParameterValue {
            InvalidParameterValue(.limitExceeded)
        }
        
        /// MaxConcurrency 参数传入错误。
        public static var maxConcurrency: InvalidParameterValue {
            InvalidParameterValue(.maxConcurrency)
        }
        
        /// Memory取值与规范不符，请修正后再试。可参考：https://tencentcs.com/5jXKFnBW。
        public static var memory: InvalidParameterValue {
            InvalidParameterValue(.memory)
        }
        
        /// MemorySize错误。
        public static var memorySize: InvalidParameterValue {
            InvalidParameterValue(.memorySize)
        }
        
        /// MinCapacity 参数传入错误。
        public static var minCapacity: InvalidParameterValue {
            InvalidParameterValue(.minCapacity)
        }
        
        /// Name参数传入错误。
        public static var name: InvalidParameterValue {
            InvalidParameterValue(.name)
        }
        
        /// Namespace参数传入错误。
        public static var namespace: InvalidParameterValue {
            InvalidParameterValue(.namespace)
        }
        
        /// 规则不正确，Namespace为英文字母、数字、-_ 符号组成，长度30。
        public static var namespaceInvalid: InvalidParameterValue {
            InvalidParameterValue(.namespaceInvalid)
        }
        
        /// NodeSpec 参数传入错误。
        public static var nodeSpec: InvalidParameterValue {
            InvalidParameterValue(.nodeSpec)
        }
        
        /// NodeType 参数传入错误。
        public static var nodeType: InvalidParameterValue {
            InvalidParameterValue(.nodeType)
        }
        
        /// 偏移量不合法。
        public static var offset: InvalidParameterValue {
            InvalidParameterValue(.offset)
        }
        
        /// Order传入错误。
        public static var order: InvalidParameterValue {
            InvalidParameterValue(.order)
        }
        
        /// OrderBy取值与规范不符，请修正后再试。可参考：https://tencentcs.com/5jXKFnBW。
        public static var orderBy: InvalidParameterValue {
            InvalidParameterValue(.orderBy)
        }
        
        /// Orderby传入错误。
        public static var orderby: InvalidParameterValue {
            InvalidParameterValue(.orderby)
        }
        
        /// 入参不是标准的json。
        public static var param: InvalidParameterValue {
            InvalidParameterValue(.param)
        }
        
        /// ProtocolType参数传入错误。
        public static var protocolType: InvalidParameterValue {
            InvalidParameterValue(.protocolType)
        }
        
        /// 定时预置的cron配置重复。
        public static var provisionTriggerCronConfigDuplicate: InvalidParameterValue {
            InvalidParameterValue(.provisionTriggerCronConfigDuplicate)
        }
        
        /// TriggerName参数传入错误。
        public static var provisionTriggerName: InvalidParameterValue {
            InvalidParameterValue(.provisionTriggerName)
        }
        
        /// TriggerName重复。
        public static var provisionTriggerNameDuplicate: InvalidParameterValue {
            InvalidParameterValue(.provisionTriggerNameDuplicate)
        }
        
        /// ProvisionType 参数传入错误。
        public static var provisionType: InvalidParameterValue {
            InvalidParameterValue(.provisionType)
        }
        
        /// PublicNetConfig参数错误。
        public static var publicNetConfig: InvalidParameterValue {
            InvalidParameterValue(.publicNetConfig)
        }
        
        /// 不支持的函数版本。
        public static var qualifier: InvalidParameterValue {
            InvalidParameterValue(.qualifier)
        }
        
        /// 查询版本详情，版本参数传入错误。
        public static var queryVersion: InvalidParameterValue {
            InvalidParameterValue(.queryVersion)
        }
        
        /// 企业版镜像实例ID[RegistryId]传值错误。
        public static var registryId: InvalidParameterValue {
            InvalidParameterValue(.registryId)
        }
        
        /// RetCode不合法。
        public static var retCode: InvalidParameterValue {
            InvalidParameterValue(.retCode)
        }
        
        /// RoutingConfig取值与规范不符，请修正后再试。可参考：https://tencentcs.com/5jXKFnBW。
        public static var routingConfig: InvalidParameterValue {
            InvalidParameterValue(.routingConfig)
        }
        
        /// Runtime传入错误。
        public static var runtime: InvalidParameterValue {
            InvalidParameterValue(.runtime)
        }
        
        /// searchkey 不是 Keyword,Tag 或者 Runtime。
        public static var searchKey: InvalidParameterValue {
            InvalidParameterValue(.searchKey)
        }
        
        /// SecretInfo错误。
        public static var secretInfo: InvalidParameterValue {
            InvalidParameterValue(.secretInfo)
        }
        
        /// ServiceName命名不规范。
        public static var serviceName: InvalidParameterValue {
            InvalidParameterValue(.serviceName)
        }
        
        /// Stamp取值与规范不符，请修正后再试。
        public static var stamp: InvalidParameterValue {
            InvalidParameterValue(.stamp)
        }
        
        /// 起始时间传入错误。
        public static var startTime: InvalidParameterValue {
            InvalidParameterValue(.startTime)
        }
        
        /// 需要同时指定开始日期与结束日期。
        public static var startTimeOrEndTime: InvalidParameterValue {
            InvalidParameterValue(.startTimeOrEndTime)
        }
        
        /// Status取值与规范不符，请修正后再试。
        public static var status: InvalidParameterValue {
            InvalidParameterValue(.status)
        }
        
        /// 系统环境变量错误。
        public static var systemEnvironment: InvalidParameterValue {
            InvalidParameterValue(.systemEnvironment)
        }
        
        /// 非法的TempCosObjectName。
        public static var tempCosObjectName: InvalidParameterValue {
            InvalidParameterValue(.tempCosObjectName)
        }
        
        /// TraceEnable取值与规范不符，请修正后再试。
        public static var traceEnable: InvalidParameterValue {
            InvalidParameterValue(.traceEnable)
        }
        
        /// TrackingTarget 参数输入错误。
        public static var trackingTarget: InvalidParameterValue {
            InvalidParameterValue(.trackingTarget)
        }
        
        /// TriggerCronConfig参数传入错误。
        public static var triggerCronConfig: InvalidParameterValue {
            InvalidParameterValue(.triggerCronConfig)
        }
        
        /// TriggerCronConfig参数定时触发间隔小于指定值。
        public static var triggerCronConfigTimeInterval: InvalidParameterValue {
            InvalidParameterValue(.triggerCronConfigTimeInterval)
        }
        
        /// TriggerDesc传入参数错误。
        public static var triggerDesc: InvalidParameterValue {
            InvalidParameterValue(.triggerDesc)
        }
        
        /// TriggerName传入错误。
        public static var triggerName: InvalidParameterValue {
            InvalidParameterValue(.triggerName)
        }
        
        /// TriggerProvisionedConcurrencyNum参数传入错误。
        public static var triggerProvisionedConcurrencyNum: InvalidParameterValue {
            InvalidParameterValue(.triggerProvisionedConcurrencyNum)
        }
        
        /// Type传入错误。
        public static var type: InvalidParameterValue {
            InvalidParameterValue(.type)
        }
        
        /// 开启cfs配置的同时必须开启vpc。
        public static var vpcNotSetWhenOpenCfs: InvalidParameterValue {
            InvalidParameterValue(.vpcNotSetWhenOpenCfs)
        }
        
        /// WebSocketsParams参数传入错误。
        public static var webSocketsParams: InvalidParameterValue {
            InvalidParameterValue(.webSocketsParams)
        }
        
        /// 检测到不是标准的zip文件，请重新压缩后再试。
        public static var zipFile: InvalidParameterValue {
            InvalidParameterValue(.zipFile)
        }
        
        /// 压缩文件base64解码失败: <code>Incorrect padding</code>，请修正后再试。
        public static var zipFileBase64BinasciiError: InvalidParameterValue {
            InvalidParameterValue(.zipFileBase64BinasciiError)
        }
        
        /// 参数取值错误。
        public static var other: InvalidParameterValue {
            InvalidParameterValue(.other)
        }
    }
}

extension TCScfError.InvalidParameterValue: Equatable {
    public static func == (lhs: TCScfError.InvalidParameterValue, rhs: TCScfError.InvalidParameterValue) -> Bool {
        lhs.error == rhs.error
    }
}

extension TCScfError.InvalidParameterValue: CustomStringConvertible {
    public var description: String {
        return "\(self.error.rawValue): \(message ?? "")"
    }
}

extension TCScfError.InvalidParameterValue {
    public func toScfError() -> TCScfError {
        guard let code = TCScfError.Code(rawValue: self.error.rawValue) else {
            fatalError("Unexpected internal conversion error!\nPlease file a bug at https://github.com/teco-project/teco to help address the problem.")
        }
        return TCScfError(code, context: self.context)
    }
}