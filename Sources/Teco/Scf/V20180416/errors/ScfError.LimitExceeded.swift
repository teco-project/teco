//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension TCScfError {
    public struct LimitExceeded: TCScfErrorType {
        enum Code: String {
            case alias = "LimitExceeded.Alias"
            case cdn = "LimitExceeded.Cdn"
            case containerImageAccelerateQuota = "LimitExceeded.ContainerImageAccelerateQuota"
            case eip = "LimitExceeded.Eip"
            case function = "LimitExceeded.Function"
            case functionOnTopic = "LimitExceeded.FunctionOnTopic"
            case functionProvisionedConcurrencyMemory = "LimitExceeded.FunctionProvisionedConcurrencyMemory"
            case functionReservedConcurrencyMemory = "LimitExceeded.FunctionReservedConcurrencyMemory"
            case functionTotalProvisionedConcurrencyMemory = "LimitExceeded.FunctionTotalProvisionedConcurrencyMemory"
            case functionTotalProvisionedConcurrencyNum = "LimitExceeded.FunctionTotalProvisionedConcurrencyNum"
            case initTimeout = "LimitExceeded.InitTimeout"
            case layerVersions = "LimitExceeded.LayerVersions"
            case layers = "LimitExceeded.Layers"
            case maxCapacity = "LimitExceeded.MaxCapacity"
            case memory = "LimitExceeded.Memory"
            case msgTTL = "LimitExceeded.MsgTTL"
            case namespace = "LimitExceeded.Namespace"
            case offset = "LimitExceeded.Offset"
            case provisionTriggerAction = "LimitExceeded.ProvisionTriggerAction"
            case provisionTriggerInterval = "LimitExceeded.ProvisionTriggerInterval"
            case quota = "LimitExceeded.Quota"
            case retryNum = "LimitExceeded.RetryNum"
            case timeout = "LimitExceeded.Timeout"
            case totalConcurrencyMemory = "LimitExceeded.TotalConcurrencyMemory"
            case trigger = "LimitExceeded.Trigger"
            case userTotalConcurrencyMemory = "LimitExceeded.UserTotalConcurrencyMemory"
        }

        private let error: Code

        public let context: TCErrorContext?

        public var errorCode: String {
            self.error.rawValue
        }

        /// Initializer used by ``TCClient`` to match an error of this type.
        public init?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }

        internal init(_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }

        /// 别名个数超过最大限制。
        public static var alias: LimitExceeded {
            LimitExceeded(.alias)
        }

        /// Cdn使用超过最大限制。
        public static var cdn: LimitExceeded {
            LimitExceeded(.cdn)
        }

        public static var containerImageAccelerateQuota: LimitExceeded {
            LimitExceeded(.containerImageAccelerateQuota)
        }

        /// eip资源超限。
        public static var eip: LimitExceeded {
            LimitExceeded(.eip)
        }

        /// 函数数量超出最大限制 ，可通过<a href="https://cloud.tencent.com/act/event/Online_service?from=scf%7Cindex">提交工单</a>申请提升限制。
        public static var function: LimitExceeded {
            LimitExceeded(.function)
        }

        /// 同一个主题下的函数超过最大限制。
        public static var functionOnTopic: LimitExceeded {
            LimitExceeded(.functionOnTopic)
        }

        /// FunctionProvisionedConcurrencyMemory数量达到限制，可提交工单申请提升限制：https://tencentcs.com/7Fixwt63。
        public static var functionProvisionedConcurrencyMemory: LimitExceeded {
            LimitExceeded(.functionProvisionedConcurrencyMemory)
        }

        /// 函数保留并发内存超限。
        public static var functionReservedConcurrencyMemory: LimitExceeded {
            LimitExceeded(.functionReservedConcurrencyMemory)
        }

        /// FunctionTotalProvisionedConcurrencyMemory达到限制，可提交工单申请提升限制：https://tencentcs.com/7Fixwt63。
        public static var functionTotalProvisionedConcurrencyMemory: LimitExceeded {
            LimitExceeded(.functionTotalProvisionedConcurrencyMemory)
        }

        /// 函数预置并发总数达到限制。
        public static var functionTotalProvisionedConcurrencyNum: LimitExceeded {
            LimitExceeded(.functionTotalProvisionedConcurrencyNum)
        }

        /// InitTimeout达到限制，可提交工单申请提升限制：https://tencentcs.com/7Fixwt63。
        public static var initTimeout: LimitExceeded {
            LimitExceeded(.initTimeout)
        }

        /// layer版本数量超出最大限制。
        public static var layerVersions: LimitExceeded {
            LimitExceeded(.layerVersions)
        }

        /// layer数量超出最大限制。
        public static var layers: LimitExceeded {
            LimitExceeded(.layers)
        }

        /// 动态扩容最大值超限。
        public static var maxCapacity: LimitExceeded {
            LimitExceeded(.maxCapacity)
        }

        /// 内存超出最大限制。
        public static var memory: LimitExceeded {
            LimitExceeded(.memory)
        }

        /// 函数异步重试配置消息保留时间超过限制。
        public static var msgTTL: LimitExceeded {
            LimitExceeded(.msgTTL)
        }

        /// 命名空间数量超过最大限制，可通过<a href="https://cloud.tencent.com/act/event/Online_service?from=scf%7Cindex">提交工单</a>申请提升限制。
        public static var namespace: LimitExceeded {
            LimitExceeded(.namespace)
        }

        /// Offset超出限制。
        public static var offset: LimitExceeded {
            LimitExceeded(.offset)
        }

        /// 定时预置数量超过最大限制。
        public static var provisionTriggerAction: LimitExceeded {
            LimitExceeded(.provisionTriggerAction)
        }

        /// 定时触发间隔小于最大限制。
        public static var provisionTriggerInterval: LimitExceeded {
            LimitExceeded(.provisionTriggerInterval)
        }

        /// 配额超限。
        public static var quota: LimitExceeded {
            LimitExceeded(.quota)
        }

        /// 函数异步重试配置异步重试次数超过限制。
        public static var retryNum: LimitExceeded {
            LimitExceeded(.retryNum)
        }

        /// Timeout超出最大限制。
        public static var timeout: LimitExceeded {
            LimitExceeded(.timeout)
        }

        /// 用户并发内存配额超限。
        public static var totalConcurrencyMemory: LimitExceeded {
            LimitExceeded(.totalConcurrencyMemory)
        }

        /// 触发器数量超出最大限制，可通过<a href="https://cloud.tencent.com/act/event/Online_service?from=scf%7Cindex">提交工单</a>申请提升限制。
        public static var trigger: LimitExceeded {
            LimitExceeded(.trigger)
        }

        /// UserTotalConcurrencyMemory达到限制，可提交工单申请提升限制：https://tencentcs.com/7Fixwt63。
        public static var userTotalConcurrencyMemory: LimitExceeded {
            LimitExceeded(.userTotalConcurrencyMemory)
        }

        public func asScfError() -> TCScfError {
            let code: TCScfError.Code
            switch self.error {
            case .alias:
                code = .limitExceeded_Alias
            case .cdn:
                code = .limitExceeded_Cdn
            case .containerImageAccelerateQuota:
                code = .limitExceeded_ContainerImageAccelerateQuota
            case .eip:
                code = .limitExceeded_Eip
            case .function:
                code = .limitExceeded_Function
            case .functionOnTopic:
                code = .limitExceeded_FunctionOnTopic
            case .functionProvisionedConcurrencyMemory:
                code = .limitExceeded_FunctionProvisionedConcurrencyMemory
            case .functionReservedConcurrencyMemory:
                code = .limitExceeded_FunctionReservedConcurrencyMemory
            case .functionTotalProvisionedConcurrencyMemory:
                code = .limitExceeded_FunctionTotalProvisionedConcurrencyMemory
            case .functionTotalProvisionedConcurrencyNum:
                code = .limitExceeded_FunctionTotalProvisionedConcurrencyNum
            case .initTimeout:
                code = .limitExceeded_InitTimeout
            case .layerVersions:
                code = .limitExceeded_LayerVersions
            case .layers:
                code = .limitExceeded_Layers
            case .maxCapacity:
                code = .limitExceeded_MaxCapacity
            case .memory:
                code = .limitExceeded_Memory
            case .msgTTL:
                code = .limitExceeded_MsgTTL
            case .namespace:
                code = .limitExceeded_Namespace
            case .offset:
                code = .limitExceeded_Offset
            case .provisionTriggerAction:
                code = .limitExceeded_ProvisionTriggerAction
            case .provisionTriggerInterval:
                code = .limitExceeded_ProvisionTriggerInterval
            case .quota:
                code = .limitExceeded_Quota
            case .retryNum:
                code = .limitExceeded_RetryNum
            case .timeout:
                code = .limitExceeded_Timeout
            case .totalConcurrencyMemory:
                code = .limitExceeded_TotalConcurrencyMemory
            case .trigger:
                code = .limitExceeded_Trigger
            case .userTotalConcurrencyMemory:
                code = .limitExceeded_UserTotalConcurrencyMemory
            }
            return TCScfError(code, context: self.context)
        }
    }
}
