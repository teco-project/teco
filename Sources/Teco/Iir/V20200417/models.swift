//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Iir {
    /// 检测到的主体在图片中的矩形框位置（四个顶点坐标）
    public struct Location: TCOutputModel {
        /// 位置矩形框的左上角横坐标
        public let xMin: Int64
        
        /// 位置矩形框的左上角纵坐标
        public let yMin: Int64
        
        /// 位置矩形框的右下角横坐标
        public let xMax: Int64
        
        /// 位置矩形框的右下角纵坐标
        public let yMax: Int64
        
        enum CodingKeys: String, CodingKey {
            case xMin = "XMin"
            case yMin = "YMin"
            case xMax = "XMax"
            case yMax = "YMax"
        }
    }
    
    /// 图像识别出的商品的详细信息。 
    /// 当图像中检测到多个物品时，会对显著性最高的物品进行识别。
    public struct ProductInfo: TCOutputModel {
        /// 1表示找到同款商品，以下字段为同款商品信息； 
        /// 0表示未找到同款商品， 具体商品信息为空（参考价格、名称、品牌等），仅提供商品类目。  
        /// 是否找到同款的判断依据为Score分值，分值越大则同款的可能性越大。
        public let findSKU: Int64
        
        /// 本商品在图片中的坐标，表示为矩形框的四个顶点坐标。
        public let location: Location
        
        /// 商品名称
        public let name: String
        
        /// 商品品牌
        public let brand: String
        
        /// 参考价格，综合多个信息源，仅供参考。
        public let price: String
        
        /// 识别结果的商品类目。 
        /// 包含：鞋、图书音像、箱包、美妆个护、服饰、家电数码、玩具乐器、食品饮料、珠宝、家居家装、药品、酒水、绿植园艺、其他商品、非商品等。 
        /// 当类别为“非商品”时，除Location、Score和本字段之外的商品信息为空。
        public let productCategory: String
        
        /// 输入图片中的主体物品和输出结果的相似度。分值越大，输出结果与输入图片是同款的可能性越高。
        public let score: Float
        
        /// 搜索到的商品配图URL
        public let image: String
        
        enum CodingKeys: String, CodingKey {
            case findSKU = "FindSKU"
            case location = "Location"
            case name = "Name"
            case brand = "Brand"
            case price = "Price"
            case productCategory = "ProductCategory"
            case score = "Score"
            case image = "Image"
        }
    }
    
    /// 检测到的图片中的商品位置和品类预测。 
    /// 当图片中存在多个商品时，输出多组坐标，按照__显著性__排序（综合考虑面积、是否在中心、检测算法置信度）。 
    /// 最多可以输出__3组__检测结果。
    public struct RegionDetected: TCOutputModel {
        /// 商品的品类预测结果。 
        /// 包含：鞋、图书音像、箱包、美妆个护、服饰、家电数码、玩具乐器、食品饮料、珠宝、家居家装、药品、酒水、绿植园艺、其他商品、非商品等。
        public let category: String
        
        /// 商品品类预测的置信度
        public let categoryScore: Float
        
        /// 检测到的主体在图片中的坐标，表示为矩形框的四个顶点坐标
        public let location: Location
        
        enum CodingKeys: String, CodingKey {
            case category = "Category"
            case categoryScore = "CategoryScore"
            case location = "Location"
        }
    }
}
