//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Mps {
    /// ModifyStreamLinkOutputInfo请求参数结构体
    public struct ModifyStreamLinkOutputInfoRequest: TCRequestModel {
        /// 流Id。
        public let flowId: String
        
        /// 需要修改的Output配置。
        public let output: ModifyOutputInfo
        
        public init (flowId: String, output: ModifyOutputInfo) {
            self.flowId = flowId
            self.output = output
        }
        
        enum CodingKeys: String, CodingKey {
            case flowId = "FlowId"
            case output = "Output"
        }
    }
    
    /// ModifyStreamLinkOutputInfo返回参数结构体
    public struct ModifyStreamLinkOutputInfoResponse: TCResponseModel {
        /// 修改后的Output配置。
        public let info: DescribeOutput
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case info = "Info"
            case requestId = "RequestId"
        }
    }
    
    /// 修改媒体传输的输出信息
    ///
    /// 修改媒体传输流的输出配置。
    @inlinable
    public func modifyStreamLinkOutputInfo(_ input: ModifyStreamLinkOutputInfoRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < ModifyStreamLinkOutputInfoResponse > {
        self.client.execute(action: "ModifyStreamLinkOutputInfo", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 修改媒体传输的输出信息
    ///
    /// 修改媒体传输流的输出配置。
    @inlinable
    public func modifyStreamLinkOutputInfo(_ input: ModifyStreamLinkOutputInfoRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyStreamLinkOutputInfoResponse {
        try await self.client.execute(action: "ModifyStreamLinkOutputInfo", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
}
