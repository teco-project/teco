//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Mps {
    /// DeleteSampleSnapshotTemplate请求参数结构体
    public struct DeleteSampleSnapshotTemplateRequest: TCRequestModel {
        /// 采样截图模板唯一标识。
        public let definition: UInt64

        public init(definition: UInt64) {
            self.definition = definition
        }

        enum CodingKeys: String, CodingKey {
            case definition = "Definition"
        }
    }

    /// DeleteSampleSnapshotTemplate返回参数结构体
    public struct DeleteSampleSnapshotTemplateResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }

    /// 删除采样截图模板
    ///
    /// 删除用户自定义采样截图模板。
    @inlinable @discardableResult
    public func deleteSampleSnapshotTemplate(_ input: DeleteSampleSnapshotTemplateRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DeleteSampleSnapshotTemplateResponse> {
        self.client.execute(action: "DeleteSampleSnapshotTemplate", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 删除采样截图模板
    ///
    /// 删除用户自定义采样截图模板。
    @inlinable @discardableResult
    public func deleteSampleSnapshotTemplate(_ input: DeleteSampleSnapshotTemplateRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DeleteSampleSnapshotTemplateResponse {
        try await self.client.execute(action: "DeleteSampleSnapshotTemplate", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 删除采样截图模板
    ///
    /// 删除用户自定义采样截图模板。
    @inlinable @discardableResult
    public func deleteSampleSnapshotTemplate(definition: UInt64, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DeleteSampleSnapshotTemplateResponse> {
        self.deleteSampleSnapshotTemplate(DeleteSampleSnapshotTemplateRequest(definition: definition), region: region, logger: logger, on: eventLoop)
    }

    /// 删除采样截图模板
    ///
    /// 删除用户自定义采样截图模板。
    @inlinable @discardableResult
    public func deleteSampleSnapshotTemplate(definition: UInt64, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DeleteSampleSnapshotTemplateResponse {
        try await self.deleteSampleSnapshotTemplate(DeleteSampleSnapshotTemplateRequest(definition: definition), region: region, logger: logger, on: eventLoop)
    }
}
