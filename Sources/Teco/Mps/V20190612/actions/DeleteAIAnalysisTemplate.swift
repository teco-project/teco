//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Mps {
    /// DeleteAIAnalysisTemplate请求参数结构体
    public struct DeleteAIAnalysisTemplateRequest: TCRequestModel {
        /// 视频内容分析模板唯一标识。
        public let definition: Int64

        public init(definition: Int64) {
            self.definition = definition
        }

        enum CodingKeys: String, CodingKey {
            case definition = "Definition"
        }
    }

    /// DeleteAIAnalysisTemplate返回参数结构体
    public struct DeleteAIAnalysisTemplateResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }

    /// 删除内容分析模板
    ///
    /// 删除用户自定义内容分析模板。
    /// 注意：模板 ID 为 10000 以下的为系统预置模板，不允许删除。
    @inlinable @discardableResult
    public func deleteAIAnalysisTemplate(_ input: DeleteAIAnalysisTemplateRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DeleteAIAnalysisTemplateResponse> {
        self.client.execute(action: "DeleteAIAnalysisTemplate", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 删除内容分析模板
    ///
    /// 删除用户自定义内容分析模板。
    /// 注意：模板 ID 为 10000 以下的为系统预置模板，不允许删除。
    @inlinable @discardableResult
    public func deleteAIAnalysisTemplate(_ input: DeleteAIAnalysisTemplateRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DeleteAIAnalysisTemplateResponse {
        try await self.client.execute(action: "DeleteAIAnalysisTemplate", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 删除内容分析模板
    ///
    /// 删除用户自定义内容分析模板。
    /// 注意：模板 ID 为 10000 以下的为系统预置模板，不允许删除。
    @inlinable @discardableResult
    public func deleteAIAnalysisTemplate(definition: Int64, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DeleteAIAnalysisTemplateResponse> {
        self.deleteAIAnalysisTemplate(DeleteAIAnalysisTemplateRequest(definition: definition), region: region, logger: logger, on: eventLoop)
    }

    /// 删除内容分析模板
    ///
    /// 删除用户自定义内容分析模板。
    /// 注意：模板 ID 为 10000 以下的为系统预置模板，不允许删除。
    @inlinable @discardableResult
    public func deleteAIAnalysisTemplate(definition: Int64, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DeleteAIAnalysisTemplateResponse {
        try await self.deleteAIAnalysisTemplate(DeleteAIAnalysisTemplateRequest(definition: definition), region: region, logger: logger, on: eventLoop)
    }
}
