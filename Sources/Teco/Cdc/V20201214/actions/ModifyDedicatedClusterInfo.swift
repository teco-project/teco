//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Cdc {
    /// 修改本地专用集群信息
    ///
    /// 修改本地专用集群信息
    @inlinable
    public func modifyDedicatedClusterInfo(_ input: ModifyDedicatedClusterInfoRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < ModifyDedicatedClusterInfoResponse > {
        self.client.execute(action: "ModifyDedicatedClusterInfo", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 修改本地专用集群信息
    ///
    /// 修改本地专用集群信息
    @inlinable
    public func modifyDedicatedClusterInfo(_ input: ModifyDedicatedClusterInfoRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyDedicatedClusterInfoResponse {
        try await self.client.execute(action: "ModifyDedicatedClusterInfo", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// ModifyDedicatedClusterInfo请求参数结构体
    public struct ModifyDedicatedClusterInfoRequest: TCRequestModel {
        /// 本地专用集群ID
        public let dedicatedClusterId: String
        
        /// 集群的新名称
        public let name: String?
        
        /// 集群的新可用区
        public let zone: String?
        
        /// 集群的新描述信息
        public let description: String?
        
        /// 集群所在站点
        public let siteId: String?
        
        public init (dedicatedClusterId: String, name: String?, zone: String?, description: String?, siteId: String?) {
            self.dedicatedClusterId = dedicatedClusterId
            self.name = name
            self.zone = zone
            self.description = description
            self.siteId = siteId
        }
        
        enum CodingKeys: String, CodingKey {
            case dedicatedClusterId = "DedicatedClusterId"
            case name = "Name"
            case zone = "Zone"
            case description = "Description"
            case siteId = "SiteId"
        }
    }
    
    /// ModifyDedicatedClusterInfo返回参数结构体
    public struct ModifyDedicatedClusterInfoResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }
}