//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

// Test PR teco-project/teco-code-generator#23.

import TecoCore

extension TCTemError {
    public struct InternalError: TCTemErrorType {
        enum Code: String {
            case actionReadTimeout = "InternalError.ActionReadTimeout"
            case addNewNodeError = "InternalError.AddNewNodeError"
            case createApmResourceError = "InternalError.CreateApmResourceError"
            case createConfigDataError = "InternalError.CreateConfigDataError"
            case createEksClusterError = "InternalError.CreateEksClusterError"
            case createLogConfigError = "InternalError.CreateLogConfigError"
            case createServiceError = "InternalError.CreateServiceError"
            case defaultInternalError = "InternalError.DefaultInternalError"
            case deleteIngressError = "InternalError.DeleteIngressError"
            case deleteLogConfigError = "InternalError.DeleteLogConfigError"
            case deleteServiceError = "InternalError.DeleteServiceError"
            case deployVersionError = "InternalError.DeployVersionError"
            case describeConfigDataError = "InternalError.DescribeConfigDataError"
            case describeConfigDataListError = "InternalError.DescribeConfigDataListError"
            case describeIngressError = "InternalError.DescribeIngressError"
            case describeIngressListError = "InternalError.DescribeIngressListError"
            case describeLogConfigError = "InternalError.DescribeLogConfigError"
            case describeLogConfigListError = "InternalError.DescribeLogConfigListError"
            case describeRunPodListError = "InternalError.DescribeRunPodListError"
            case describeServiceError = "InternalError.DescribeServiceError"
            case describeServiceIngressError = "InternalError.DescribeServiceIngressError"
            case describeServiceListError = "InternalError.DescribeServiceListError"
            case modifyConfigDataError = "InternalError.ModifyConfigDataError"
            case modifyLogConfigError = "InternalError.ModifyLogConfigError"
            case restartApplicationError = "InternalError.RestartApplicationError"
            case stopApplicationError = "InternalError.StopApplicationError"
            case tagInterfaceError = "InternalError.TagInterfaceError"
            case updateIngressError = "InternalError.UpdateIngressError"
        }

        private let error: Code

        public let context: TCErrorContext?

        public var errorCode: String {
            self.error.rawValue
        }

        /// Initializer used by ``TCClient`` to match an error of this type.
        public init?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }

        internal init(_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }

        /// 请求响应超时。
        public static var actionReadTimeout: InternalError {
            InternalError(.actionReadTimeout)
        }

        /// 添加子网/虚拟节点异常。
        public static var addNewNodeError: InternalError {
            InternalError(.addNewNodeError)
        }

        /// 创建apm资源失败。
        public static var createApmResourceError: InternalError {
            InternalError(.createApmResourceError)
        }

        /// 创建配置失败。
        public static var createConfigDataError: InternalError {
            InternalError(.createConfigDataError)
        }

        /// 底层集群创建失败。
        public static var createEksClusterError: InternalError {
            InternalError(.createEksClusterError)
        }

        /// 创建 LogConfig 错误。
        public static var createLogConfigError: InternalError {
            InternalError(.createLogConfigError)
        }

        /// 创建服务失败。
        public static var createServiceError: InternalError {
            InternalError(.createServiceError)
        }

        /// 服务器繁忙,请稍后再试。
        public static var defaultInternalError: InternalError {
            InternalError(.defaultInternalError)
        }

        /// 删除 ingress 失败。
        public static var deleteIngressError: InternalError {
            InternalError(.deleteIngressError)
        }

        /// 删除 LogConfig 错误。
        public static var deleteLogConfigError: InternalError {
            InternalError(.deleteLogConfigError)
        }

        /// 删除应用失败。
        public static var deleteServiceError: InternalError {
            InternalError(.deleteServiceError)
        }

        /// 版本部署调用失败。
        public static var deployVersionError: InternalError {
            InternalError(.deployVersionError)
        }

        /// 查询配置详情失败。
        public static var describeConfigDataError: InternalError {
            InternalError(.describeConfigDataError)
        }

        /// 查询配置列表失败。
        public static var describeConfigDataListError: InternalError {
            InternalError(.describeConfigDataListError)
        }

        /// 查询 ingress 失败。
        public static var describeIngressError: InternalError {
            InternalError(.describeIngressError)
        }

        /// 查询 ingress 列表失败。
        public static var describeIngressListError: InternalError {
            InternalError(.describeIngressListError)
        }

        /// 查询 LogConfig 错误。
        public static var describeLogConfigError: InternalError {
            InternalError(.describeLogConfigError)
        }

        /// 查询 LogConfig 列表错误。
        public static var describeLogConfigListError: InternalError {
            InternalError(.describeLogConfigListError)
        }

        /// 查询实例信息失败。
        public static var describeRunPodListError: InternalError {
            InternalError(.describeRunPodListError)
        }

        /// 查询service失败。
        public static var describeServiceError: InternalError {
            InternalError(.describeServiceError)
        }

        /// 查询服务关联的 ingress 失败。
        public static var describeServiceIngressError: InternalError {
            InternalError(.describeServiceIngressError)
        }

        /// 查询service列表失败。
        public static var describeServiceListError: InternalError {
            InternalError(.describeServiceListError)
        }

        /// 修改配置失败。
        public static var modifyConfigDataError: InternalError {
            InternalError(.modifyConfigDataError)
        }

        /// 修改 LogConfig 错误。
        public static var modifyLogConfigError: InternalError {
            InternalError(.modifyLogConfigError)
        }

        /// 重启失败。
        public static var restartApplicationError: InternalError {
            InternalError(.restartApplicationError)
        }

        /// 停止应用失败。
        public static var stopApplicationError: InternalError {
            InternalError(.stopApplicationError)
        }

        /// 调用标签接口异常。
        public static var tagInterfaceError: InternalError {
            InternalError(.tagInterfaceError)
        }

        /// 更新 ingress 失败。
        public static var updateIngressError: InternalError {
            InternalError(.updateIngressError)
        }

        public func asTemError() -> TCTemError {
            let code: TCTemError.Code
            switch self.error {
            case .actionReadTimeout:
                code = .internalError_ActionReadTimeout
            case .addNewNodeError:
                code = .internalError_AddNewNodeError
            case .createApmResourceError:
                code = .internalError_CreateApmResourceError
            case .createConfigDataError:
                code = .internalError_CreateConfigDataError
            case .createEksClusterError:
                code = .internalError_CreateEksClusterError
            case .createLogConfigError:
                code = .internalError_CreateLogConfigError
            case .createServiceError:
                code = .internalError_CreateServiceError
            case .defaultInternalError:
                code = .internalError_DefaultInternalError
            case .deleteIngressError:
                code = .internalError_DeleteIngressError
            case .deleteLogConfigError:
                code = .internalError_DeleteLogConfigError
            case .deleteServiceError:
                code = .internalError_DeleteServiceError
            case .deployVersionError:
                code = .internalError_DeployVersionError
            case .describeConfigDataError:
                code = .internalError_DescribeConfigDataError
            case .describeConfigDataListError:
                code = .internalError_DescribeConfigDataListError
            case .describeIngressError:
                code = .internalError_DescribeIngressError
            case .describeIngressListError:
                code = .internalError_DescribeIngressListError
            case .describeLogConfigError:
                code = .internalError_DescribeLogConfigError
            case .describeLogConfigListError:
                code = .internalError_DescribeLogConfigListError
            case .describeRunPodListError:
                code = .internalError_DescribeRunPodListError
            case .describeServiceError:
                code = .internalError_DescribeServiceError
            case .describeServiceIngressError:
                code = .internalError_DescribeServiceIngressError
            case .describeServiceListError:
                code = .internalError_DescribeServiceListError
            case .modifyConfigDataError:
                code = .internalError_ModifyConfigDataError
            case .modifyLogConfigError:
                code = .internalError_ModifyLogConfigError
            case .restartApplicationError:
                code = .internalError_RestartApplicationError
            case .stopApplicationError:
                code = .internalError_StopApplicationError
            case .tagInterfaceError:
                code = .internalError_TagInterfaceError
            case .updateIngressError:
                code = .internalError_UpdateIngressError
            }
            return TCTemError(code, context: self.context)
        }
    }
}
