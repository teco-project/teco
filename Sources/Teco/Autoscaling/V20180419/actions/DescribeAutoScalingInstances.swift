//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension As {
    /// 查询实例
    ///
    /// 本接口（DescribeAutoScalingInstances）用于查询弹性伸缩关联实例的信息。
    /// * 可以根据实例ID、伸缩组ID等信息来查询实例的详细信息。过滤信息详细请见过滤器`Filter`。
    /// * 如果参数为空，返回当前用户一定数量（`Limit`所指定的数量，默认为20）的实例。
    @inlinable
    public func describeAutoScalingInstances(_ input: DescribeAutoScalingInstancesRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeAutoScalingInstancesResponse > {
        self.client.execute(action: "DescribeAutoScalingInstances", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 查询实例
    ///
    /// 本接口（DescribeAutoScalingInstances）用于查询弹性伸缩关联实例的信息。
    /// * 可以根据实例ID、伸缩组ID等信息来查询实例的详细信息。过滤信息详细请见过滤器`Filter`。
    /// * 如果参数为空，返回当前用户一定数量（`Limit`所指定的数量，默认为20）的实例。
    @inlinable
    public func describeAutoScalingInstances(_ input: DescribeAutoScalingInstancesRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeAutoScalingInstancesResponse {
        try await self.client.execute(action: "DescribeAutoScalingInstances", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribeAutoScalingInstances请求参数结构体
    public struct DescribeAutoScalingInstancesRequest: TCRequestModel {
        /// 待查询云服务器（CVM）的实例ID。每次请求的上限为100。参数不支持同时指定InstanceIds和Filters。
        public let instanceIds: [String]?
        
        /// 过滤条件。
        /// <li> instance-id - String - 是否必填：否 -（过滤条件）按照实例ID过滤。</li>
        /// <li> auto-scaling-group-id - String - 是否必填：否 -（过滤条件）按照伸缩组ID过滤。</li>
        /// 每次请求的`Filters`的上限为10，`Filter.Values`的上限为5。参数不支持同时指定`InstanceIds`和`Filters`。
        public let filters: [Filter]?
        
        /// 偏移量，默认为0。关于`Offset`的更进一步介绍请参考 API [简介](https://cloud.tencent.com/document/api/213/15688)中的相关小节。
        public let offset: Int64?
        
        /// 返回数量，默认为20，最大值为100。关于`Limit`的更进一步介绍请参考 API [简介](https://cloud.tencent.com/document/api/213/15688)中的相关小节。
        public let limit: Int64?
        
        public init (instanceIds: [String]?, filters: [Filter]?, offset: Int64?, limit: Int64?) {
            self.instanceIds = instanceIds
            self.filters = filters
            self.offset = offset
            self.limit = limit
        }
        
        enum CodingKeys: String, CodingKey {
            case instanceIds = "InstanceIds"
            case filters = "Filters"
            case offset = "Offset"
            case limit = "Limit"
        }
    }
    
    /// DescribeAutoScalingInstances返回参数结构体
    public struct DescribeAutoScalingInstancesResponse: TCResponseModel {
        /// 实例详细信息列表。
        public let autoScalingInstanceSet: [Instance]
        
        /// 符合条件的实例数量。
        public let totalCount: UInt64
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case autoScalingInstanceSet = "AutoScalingInstanceSet"
            case totalCount = "TotalCount"
            case requestId = "RequestId"
        }
    }
}
