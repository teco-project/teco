//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension As {
    /// 修改期望实例数
    ///
    /// 本接口（ModifyDesiredCapacity）用于修改指定伸缩组的期望实例数
    @inlinable
    public func modifyDesiredCapacity(_ input: ModifyDesiredCapacityRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < ModifyDesiredCapacityResponse > {
        self.client.execute(action: "ModifyDesiredCapacity", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 修改期望实例数
    ///
    /// 本接口（ModifyDesiredCapacity）用于修改指定伸缩组的期望实例数
    @inlinable
    public func modifyDesiredCapacity(_ input: ModifyDesiredCapacityRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyDesiredCapacityResponse {
        try await self.client.execute(action: "ModifyDesiredCapacity", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// ModifyDesiredCapacity请求参数结构体
    public struct ModifyDesiredCapacityRequest: TCRequestModel {
        /// 伸缩组ID
        public let autoScalingGroupId: String
        
        /// 期望实例数
        public let desiredCapacity: UInt64
        
        /// 最小实例数，取值范围为0-2000。
        public let minSize: UInt64?
        
        /// 最大实例数，取值范围为0-2000。
        public let maxSize: UInt64?
        
        public init (autoScalingGroupId: String, desiredCapacity: UInt64, minSize: UInt64?, maxSize: UInt64?) {
            self.autoScalingGroupId = autoScalingGroupId
            self.desiredCapacity = desiredCapacity
            self.minSize = minSize
            self.maxSize = maxSize
        }
        
        enum CodingKeys: String, CodingKey {
            case autoScalingGroupId = "AutoScalingGroupId"
            case desiredCapacity = "DesiredCapacity"
            case minSize = "MinSize"
            case maxSize = "MaxSize"
        }
    }
    
    /// ModifyDesiredCapacity返回参数结构体
    public struct ModifyDesiredCapacityResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }
}