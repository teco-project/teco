//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension TCAaiError {
    public struct InvalidParameterValue: TCErrorType {
        enum Code: String {
            case appIdNotRegistered = "InvalidParameterValue.AppIdNotRegistered"
            case errorInvalidAppid = "InvalidParameterValue.ErrorInvalidAppid"
            case errorInvalidClientip = "InvalidParameterValue.ErrorInvalidClientip"
            case errorInvalidEngservice = "InvalidParameterValue.ErrorInvalidEngservice"
            case errorInvalidOpenTranslate = "InvalidParameterValue.ErrorInvalidOpenTranslate"
            case errorInvalidProjectid = "InvalidParameterValue.ErrorInvalidProjectid"
            case errorInvalidRequestid = "InvalidParameterValue.ErrorInvalidRequestid"
            case errorInvalidSourceLanguage = "InvalidParameterValue.ErrorInvalidSourceLanguage"
            case errorInvalidSourcetype = "InvalidParameterValue.ErrorInvalidSourcetype"
            case errorInvalidSubservicetype = "InvalidParameterValue.ErrorInvalidSubservicetype"
            case errorInvalidTargetLanguage = "InvalidParameterValue.ErrorInvalidTargetLanguage"
            case errorInvalidUrl = "InvalidParameterValue.ErrorInvalidUrl"
            case errorInvalidUseraudiokey = "InvalidParameterValue.ErrorInvalidUseraudiokey"
            case errorInvalidVoiceFormat = "InvalidParameterValue.ErrorInvalidVoiceFormat"
            case errorInvalidVoicedata = "InvalidParameterValue.ErrorInvalidVoicedata"
            case errorVoicedataTooLong = "InvalidParameterValue.ErrorVoicedataTooLong"
            case primaryLanguage = "InvalidParameterValue.PrimaryLanguage"
            case sampleRate = "InvalidParameterValue.SampleRate"
            case speed = "InvalidParameterValue.Speed"
            case voiceType = "InvalidParameterValue.VoiceType"
            case volume = "InvalidParameterValue.Volume"
            case other = "InvalidParameterValue"
        }
        
        private let error: Code
        
        public let context: TCErrorContext?
        
        public var errorCode: String {
            self.error.rawValue
        }
        
        public init ?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }
        
        internal init (_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }
        
        /// appid未注册。
        public static var appIdNotRegistered: InvalidParameterValue {
            InvalidParameterValue(.appIdNotRegistered)
        }
        
        /// AppId无效。
        public static var errorInvalidAppid: InvalidParameterValue {
            InvalidParameterValue(.errorInvalidAppid)
        }
        
        /// ClientIp无效。
        public static var errorInvalidClientip: InvalidParameterValue {
            InvalidParameterValue(.errorInvalidClientip)
        }
        
        /// EngSerViceType无效。
        public static var errorInvalidEngservice: InvalidParameterValue {
            InvalidParameterValue(.errorInvalidEngservice)
        }
        
        /// 是否进行翻译。
        public static var errorInvalidOpenTranslate: InvalidParameterValue {
            InvalidParameterValue(.errorInvalidOpenTranslate)
        }
        
        /// ProjectId无效。
        public static var errorInvalidProjectid: InvalidParameterValue {
            InvalidParameterValue(.errorInvalidProjectid)
        }
        
        /// RequestId无效。
        public static var errorInvalidRequestid: InvalidParameterValue {
            InvalidParameterValue(.errorInvalidRequestid)
        }
        
        /// 翻译的源语言类型不支持。
        public static var errorInvalidSourceLanguage: InvalidParameterValue {
            InvalidParameterValue(.errorInvalidSourceLanguage)
        }
        
        /// SourceType无效。
        public static var errorInvalidSourcetype: InvalidParameterValue {
            InvalidParameterValue(.errorInvalidSourcetype)
        }
        
        /// SubserviceType无效。
        public static var errorInvalidSubservicetype: InvalidParameterValue {
            InvalidParameterValue(.errorInvalidSubservicetype)
        }
        
        /// 翻译的目标语言类型不支持。
        public static var errorInvalidTargetLanguage: InvalidParameterValue {
            InvalidParameterValue(.errorInvalidTargetLanguage)
        }
        
        /// Url无效。
        public static var errorInvalidUrl: InvalidParameterValue {
            InvalidParameterValue(.errorInvalidUrl)
        }
        
        /// UsrAudioKey无效。
        public static var errorInvalidUseraudiokey: InvalidParameterValue {
            InvalidParameterValue(.errorInvalidUseraudiokey)
        }
        
        /// 音频编码格式不支持。
        public static var errorInvalidVoiceFormat: InvalidParameterValue {
            InvalidParameterValue(.errorInvalidVoiceFormat)
        }
        
        /// 音频数据无效。
        public static var errorInvalidVoicedata: InvalidParameterValue {
            InvalidParameterValue(.errorInvalidVoicedata)
        }
        
        /// 数据过长。
        public static var errorVoicedataTooLong: InvalidParameterValue {
            InvalidParameterValue(.errorVoicedataTooLong)
        }
        
        /// PrimaryLanguage非法。
        public static var primaryLanguage: InvalidParameterValue {
            InvalidParameterValue(.primaryLanguage)
        }
        
        public static var sampleRate: InvalidParameterValue {
            InvalidParameterValue(.sampleRate)
        }
        
        /// Speed参数非法。
        public static var speed: InvalidParameterValue {
            InvalidParameterValue(.speed)
        }
        
        /// 声音类型错误。
        public static var voiceType: InvalidParameterValue {
            InvalidParameterValue(.voiceType)
        }
        
        /// Volume参数非法。
        public static var volume: InvalidParameterValue {
            InvalidParameterValue(.volume)
        }
        
        /// 参数取值错误。
        public static var other: InvalidParameterValue {
            InvalidParameterValue(.other)
        }
    }
}

extension TCAaiError.InvalidParameterValue: Equatable {
    public static func == (lhs: TCAaiError.InvalidParameterValue, rhs: TCAaiError.InvalidParameterValue) -> Bool {
        lhs.error == rhs.error
    }
}

extension TCAaiError.InvalidParameterValue: CustomStringConvertible {
    public var description: String {
        return "\(self.error.rawValue): \(message ?? "")"
    }
}

extension TCAaiError.InvalidParameterValue {
    public func toAaiError() -> TCAaiError {
        guard let code = TCAaiError.Code(rawValue: self.error.rawValue) else {
            fatalError("Unexpected internal conversion error!\nPlease file a bug at https://github.com/teco-project/teco to help address the problem.")
        }
        return TCAaiError(code, context: self.context)
    }
}