//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

// Test PR teco-project/teco-code-generator#23.

import TecoCore

extension Iotvideoindustry {
    /// 异动事件走势列表
    public struct AbnormalEvents: TCOutputModel {
        /// 对应查询日期
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let date: String?

        /// 列表信息
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let info: [AbnormalEventsInfo]?

        enum CodingKeys: String, CodingKey {
            case date = "Date"
            case info = "Info"
        }
    }

    /// 异动事件走势元素
    public struct AbnormalEventsInfo: TCOutputModel {
        /// 类型值
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let key: Int64?

        /// 类型总数
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let count: Int64?

        enum CodingKeys: String, CodingKey {
            case key = "Key"
            case count = "Count"
        }
    }

    /// 查询全部设备出参
    public struct AllDeviceInfo: TCInputModel, TCOutputModel {
        /// 设备唯一标识
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceId: String?

        /// 设备类型；2：IPC
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceType: Int64?

        /// 设备状态；0：设备不在线；1：设备在线；2：设备隔离中；3：设备未注册
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let status: Int64?

        /// 创建时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let createTime: Int64?

        /// 设备扩展属性
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let extraInformation: String?

        /// 设备名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let nickName: String?

        /// 设备绑定分组路径
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let groupPath: String?

        /// 设备编码
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceCode: String?

        /// 是否存在录像,，0:不存在；1：存在
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let isRecord: Int64?

        /// 该设备是否可录制
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let recordable: Int64?

        /// 设备接入协议
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let `protocol`: String?

        /// 组Id
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let groupId: String?

        /// 组名
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let groupName: String?

        public init(deviceId: String, deviceType: Int64, status: Int64? = nil, createTime: Int64? = nil, extraInformation: String? = nil, nickName: String? = nil, groupPath: String? = nil, deviceCode: String? = nil, isRecord: Int64? = nil, recordable: Int64? = nil, protocol: String? = nil, groupId: String? = nil, groupName: String? = nil) {
            self.deviceId = deviceId
            self.deviceType = deviceType
            self.status = status
            self.createTime = createTime
            self.extraInformation = extraInformation
            self.nickName = nickName
            self.groupPath = groupPath
            self.deviceCode = deviceCode
            self.isRecord = isRecord
            self.recordable = recordable
            self.protocol = `protocol`
            self.groupId = groupId
            self.groupName = groupName
        }

        enum CodingKeys: String, CodingKey {
            case deviceId = "DeviceId"
            case deviceType = "DeviceType"
            case status = "Status"
            case createTime = "CreateTime"
            case extraInformation = "ExtraInformation"
            case nickName = "NickName"
            case groupPath = "GroupPath"
            case deviceCode = "DeviceCode"
            case isRecord = "IsRecord"
            case recordable = "Recordable"
            case `protocol` = "Protocol"
            case groupId = "GroupId"
            case groupName = "GroupName"
        }
    }

    /// 国标通道详细信息
    public struct ChannelDetail: TCOutputModel {
        /// 通道名称
        public let channelName: String

        /// 通道唯一标识
        public let channelId: String

        /// 通道类型 0：未知；1：视频通道；2：音频通道；3：告警通道
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let channelType: Int64?

        /// 20位国标通道编码
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let channelCode: String?

        /// 通道扩展信息
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let extraInformation: String?

        /// 通道在线状态
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let status: Int64?

        /// 通道是否存在录像标识 0：无录像；1：有录像
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let isRecord: Int64?

        /// 通道所属设备唯一标识
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceId: String?

        /// 通道所属虚拟组织的ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let businessGroupId: String?

        enum CodingKeys: String, CodingKey {
            case channelName = "ChannelName"
            case channelId = "ChannelId"
            case channelType = "ChannelType"
            case channelCode = "ChannelCode"
            case extraInformation = "ExtraInformation"
            case status = "Status"
            case isRecord = "IsRecord"
            case deviceId = "DeviceId"
            case businessGroupId = "BusinessGroupId"
        }
    }

    /// GB28181通道
    public struct ChannelItem: TCInputModel, TCOutputModel {
        /// 设备唯一标识
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceId: String?

        /// 通道唯一标识
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let channelId: String?

        public init(deviceId: String, channelId: String) {
            self.deviceId = deviceId
            self.channelId = channelId
        }

        enum CodingKeys: String, CodingKey {
            case deviceId = "DeviceId"
            case channelId = "ChannelId"
        }
    }

    /// DescribeDeviceStreams的出参复杂类型
    public struct DescribeDeviceStreamsData: TCOutputModel {
        /// rtsp地址
        public let rtspAddr: String

        /// rtmp地址
        public let rtmpAddr: String

        /// hls地址
        public let hlsAddr: String

        /// flv地址
        public let flvAddr: String

        enum CodingKeys: String, CodingKey {
            case rtspAddr = "RtspAddr"
            case rtmpAddr = "RtmpAddr"
            case hlsAddr = "HlsAddr"
            case flvAddr = "FlvAddr"
        }
    }

    /// DescribeRecordStreamData 复杂类型
    public struct DescribeRecordStreamData: TCOutputModel {
        /// Rtsp地址
        public let rtspAddr: String

        /// Rtmp地址
        public let rtmpAddr: String

        /// Hls地址
        public let hlsAddr: String

        /// Flv地址
        public let flvAddr: String

        /// 流Id
        public let streamId: String

        enum CodingKeys: String, CodingKey {
            case rtspAddr = "RtspAddr"
            case rtmpAddr = "RtmpAddr"
            case hlsAddr = "HlsAddr"
            case flvAddr = "FlvAddr"
            case streamId = "StreamId"
        }
    }

    /// 设备所在分组信息
    public struct DevGroupInfo: TCInputModel, TCOutputModel {
        /// 设备唯一标识
        public let deviceId: String?

        /// 分组ID
        public let groupId: String?

        /// 分组路径
        public let groupPath: String?

        /// 父分组ID
        public let parentId: String?

        /// 设备错误，仅在用户没权限或者设备已删除时返回具体结果
        public let error: String?

        public init(deviceId: String? = nil, groupId: String? = nil, groupPath: String? = nil, parentId: String? = nil, error: String? = nil) {
            self.deviceId = deviceId
            self.groupId = groupId
            self.groupPath = groupPath
            self.parentId = parentId
            self.error = error
        }

        enum CodingKeys: String, CodingKey {
            case deviceId = "DeviceId"
            case groupId = "GroupId"
            case groupPath = "GroupPath"
            case parentId = "ParentId"
            case error = "Error"
        }
    }

    /// 用于描述唯一一个设备
    public struct DeviceItem: TCInputModel, TCOutputModel {
        /// 设备唯一标识
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceId: String?

        /// 通道唯一标识
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let channelId: String?

        public init(deviceId: String? = nil, channelId: String? = nil) {
            self.deviceId = deviceId
            self.channelId = channelId
        }

        enum CodingKeys: String, CodingKey {
            case deviceId = "DeviceId"
            case channelId = "ChannelId"
        }
    }

    /// 查询设备统计返回值
    public struct DeviceMonitorValue: TCOutputModel {
        /// 统计值
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let value: Float?

        /// 统计时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let time: Int64?

        enum CodingKeys: String, CodingKey {
            case value = "Value"
            case time = "Time"
        }
    }

    /// 设备事件列表
    public struct Events: TCOutputModel {
        /// 开始时间，秒级时间戳
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let eventTime: Int64?

        /// 事件类型 1:注册 2:心跳 4:录制异常 5:播放异常 6:流中断
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let eventType: Int64?

        /// 事件描述
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let eventDesc: String?

        /// 设备类型
        public let deviceType: Int64

        /// 设备地址
        public let deviceAddress: String

        /// 设备Id
        public let deviceId: String

        /// 通道Id
        public let channelId: String

        /// 事件日志
        public let eventLog: String

        /// 设备备注名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceName: String?

        enum CodingKeys: String, CodingKey {
            case eventTime = "EventTime"
            case eventType = "EventType"
            case eventDesc = "EventDesc"
            case deviceType = "DeviceType"
            case deviceAddress = "DeviceAddress"
            case deviceId = "DeviceId"
            case channelId = "ChannelId"
            case eventLog = "EventLog"
            case deviceName = "DeviceName"
        }
    }

    /// 分组下设备信息
    public struct GroupDeviceItem: TCInputModel, TCOutputModel {
        /// 设备唯一标识
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceId: String?

        /// 设备名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let nickName: String?

        /// 设备状态
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let status: Int64?

        /// 扩展信息
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let extraInformation: String?

        /// 设备类型
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceType: Int64?

        /// rtsp地址
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let rtspUrl: String?

        /// 设备编码
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceCode: String?

        /// 是否存在录像
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let isRecord: Int64?

        /// 该设备是否可录制
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let recordable: Int64?

        /// 设备接入协议
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let `protocol`: String?

        /// 设备创建时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let createTime: Int64?

        /// 设备通道总数
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let channelNum: Int64?

        /// 设备视频通道总数
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let videoChannelNum: Int64?

        public init(deviceId: String, nickName: String? = nil, status: Int64? = nil, extraInformation: String? = nil, deviceType: Int64? = nil, rtspUrl: String? = nil, deviceCode: String? = nil, isRecord: Int64? = nil, recordable: Int64? = nil, protocol: String? = nil, createTime: Int64? = nil, channelNum: Int64? = nil, videoChannelNum: Int64? = nil) {
            self.deviceId = deviceId
            self.nickName = nickName
            self.status = status
            self.extraInformation = extraInformation
            self.deviceType = deviceType
            self.rtspUrl = rtspUrl
            self.deviceCode = deviceCode
            self.isRecord = isRecord
            self.recordable = recordable
            self.protocol = `protocol`
            self.createTime = createTime
            self.channelNum = channelNum
            self.videoChannelNum = videoChannelNum
        }

        enum CodingKeys: String, CodingKey {
            case deviceId = "DeviceId"
            case nickName = "NickName"
            case status = "Status"
            case extraInformation = "ExtraInformation"
            case deviceType = "DeviceType"
            case rtspUrl = "RTSPUrl"
            case deviceCode = "DeviceCode"
            case isRecord = "IsRecord"
            case recordable = "Recordable"
            case `protocol` = "Protocol"
            case createTime = "CreateTime"
            case channelNum = "ChannelNum"
            case videoChannelNum = "VideoChannelNum"
        }
    }

    /// 分组信息详情
    public struct GroupInfo: TCInputModel, TCOutputModel {
        /// 分组ID
        public let groupId: String?

        /// 分组名称
        public let groupName: String?

        /// 分组类型
        public let groupType: String?

        /// 分组路径
        public let groupPath: String?

        /// 父分组ID
        public let parentId: String?

        /// 分组描述
        public let groupDescribe: String?

        /// 扩展信息
        public let extraInformation: String?

        /// 创建时间
        public let createTime: Int64?

        /// 分组状态
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let groupStatus: Int64?

        /// 设备不存在时产生的错误
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let error: String?

        public init(groupId: String? = nil, groupName: String? = nil, groupType: String? = nil, groupPath: String? = nil, parentId: String? = nil, groupDescribe: String? = nil, extraInformation: String? = nil, createTime: Int64? = nil, groupStatus: Int64? = nil, error: String? = nil) {
            self.groupId = groupId
            self.groupName = groupName
            self.groupType = groupType
            self.groupPath = groupPath
            self.parentId = parentId
            self.groupDescribe = groupDescribe
            self.extraInformation = extraInformation
            self.createTime = createTime
            self.groupStatus = groupStatus
            self.error = error
        }

        enum CodingKeys: String, CodingKey {
            case groupId = "GroupId"
            case groupName = "GroupName"
            case groupType = "GroupType"
            case groupPath = "GroupPath"
            case parentId = "ParentId"
            case groupDescribe = "GroupDescribe"
            case extraInformation = "ExtraInformation"
            case createTime = "CreateTime"
            case groupStatus = "GroupStatus"
            case error = "Error"
        }
    }

    /// 分组信息
    public struct GroupItem: TCInputModel, TCOutputModel {
        /// 分组名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let groupName: String?

        /// 父分组ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let parentId: String?

        /// 分组ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let groupId: String?

        /// 分组路径
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let groupPath: String?

        /// 分组描述
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let groupDescribe: String?

        /// 分组绑定设备数
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceNum: Int64?

        /// 子分组数量
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let subGroupNum: Int64?

        /// 分组附加信息
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let extraInformation: String?

        /// 分组类型
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let groupType: String?

        /// 创建时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let createTime: Int64?

        /// 分组状态
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let groupStatus: Int64?

        public init(groupName: String, parentId: String, groupId: String, groupPath: String? = nil, groupDescribe: String? = nil, deviceNum: Int64? = nil, subGroupNum: Int64? = nil, extraInformation: String? = nil, groupType: String? = nil, createTime: Int64? = nil, groupStatus: Int64? = nil) {
            self.groupName = groupName
            self.parentId = parentId
            self.groupId = groupId
            self.groupPath = groupPath
            self.groupDescribe = groupDescribe
            self.deviceNum = deviceNum
            self.subGroupNum = subGroupNum
            self.extraInformation = extraInformation
            self.groupType = groupType
            self.createTime = createTime
            self.groupStatus = groupStatus
        }

        enum CodingKeys: String, CodingKey {
            case groupName = "GroupName"
            case parentId = "ParentId"
            case groupId = "GroupId"
            case groupPath = "GroupPath"
            case groupDescribe = "GroupDescribe"
            case deviceNum = "DeviceNum"
            case subGroupNum = "SubGroupNum"
            case extraInformation = "ExtraInformation"
            case groupType = "GroupType"
            case createTime = "CreateTime"
            case groupStatus = "GroupStatus"
        }
    }

    /// 频道信息
    public struct LiveChannelInfo: TCOutputModel {
        /// 频道ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let liveChannelId: String?

        /// 频道名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let liveChannelName: String?

        /// 频道类型
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let liveChannelType: Int64?

        /// 通道直播状态：1: 未推流，2: 推流中
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let liveStatus: Int64?

        /// 推流地址
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let pushStreamAddress: String?

        /// 创建时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let createTime: String?

        /// 修改时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let updateTime: String?

        enum CodingKeys: String, CodingKey {
            case liveChannelId = "LiveChannelId"
            case liveChannelName = "LiveChannelName"
            case liveChannelType = "LiveChannelType"
            case liveStatus = "LiveStatus"
            case pushStreamAddress = "PushStreamAddress"
            case createTime = "CreateTime"
            case updateTime = "UpdateTime"
        }
    }

    /// 直播频道详情
    public struct LiveChannelItem: TCOutputModel {
        /// 频道ID
        public let channelId: String

        /// 频道名称
        public let channelName: String

        enum CodingKeys: String, CodingKey {
            case channelId = "ChannelId"
            case channelName = "ChannelName"
        }
    }

    /// 直播录制详情item
    public struct LiveRecordItem: TCOutputModel {
        /// 录制文件自增ID
        public let intID: Int64

        /// 直播频道ID
        public let liveChannelId: String

        /// 过期时间
        public let expectDeleteTime: Int64

        /// 录制时长
        public let recordTimeLen: Int64

        /// 文件大小
        public let fileSize: Int64

        /// 录制文件url
        public let videoUrl: String

        /// 录制计划ID
        public let recordPlanId: String

        /// 录制开始时间
        public let startTime: Int64

        /// 录制结束时间
        public let endTime: Int64

        enum CodingKeys: String, CodingKey {
            case intID = "IntID"
            case liveChannelId = "LiveChannelId"
            case expectDeleteTime = "ExpectDeleteTime"
            case recordTimeLen = "RecordTimeLen"
            case fileSize = "FileSize"
            case videoUrl = "VideoUrl"
            case recordPlanId = "RecordPlanId"
            case startTime = "StartTime"
            case endTime = "EndTime"
        }
    }

    /// 直播录制计划详情
    public struct LiveRecordPlanItem: TCOutputModel {
        /// 计划ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let planId: String?

        /// 计划名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let planName: String?

        enum CodingKeys: String, CodingKey {
            case planId = "PlanId"
            case planName = "PlanName"
        }
    }

    /// 消息转发配置信息
    public struct MessageForward: TCOutputModel {
        /// 配置ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let intId: Int64?

        /// 用户Uin
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let uin: String?

        /// json数组， 转发类型 1: 告警 2:GPS
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let messageType: String?

        /// 区域ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let regionId: String?

        /// 区域名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let regionName: String?

        /// 实例ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let instance: String?

        /// 实例名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let instanceName: String?

        /// kafka topic id
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let topicId: String?

        /// 创建时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let createTime: String?

        /// 更新时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let updateTime: String?

        /// topic 名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let topicName: String?

        enum CodingKeys: String, CodingKey {
            case intId = "IntId"
            case uin = "Uin"
            case messageType = "MessageType"
            case regionId = "RegionId"
            case regionName = "RegionName"
            case instance = "Instance"
            case instanceName = "InstanceName"
            case topicId = "TopicId"
            case createTime = "CreateTime"
            case updateTime = "UpdateTime"
            case topicName = "TopicName"
        }
    }

    /// 预置位结构出参
    public struct PresetItem: TCOutputModel {
        /// 预置位ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let presetId: Int64?

        /// 预置位名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let presetName: String?

        /// 预置位状态 0:未设置预置位 1:已设置预置位 2:已设置预置位&看守位
        public let status: Int64

        /// 预置位启用时的自动归位时间
        public let resetTime: Int64

        enum CodingKeys: String, CodingKey {
            case presetId = "PresetId"
            case presetName = "PresetName"
            case status = "Status"
            case resetTime = "ResetTime"
        }
    }

    /// 录制计划详情
    public struct RecordPlanDetail: TCOutputModel {
        /// 计划ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let planId: String?

        /// 计划名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let name: String?

        /// 时间模板ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let timeTemplateId: String?

        /// 时间模板名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let timeTemplateName: String?

        /// 绑定的通道列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let channels: [ChannelItem]?

        /// 存储周期（天）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let recordStorageTime: Int64?

        enum CodingKeys: String, CodingKey {
            case planId = "PlanId"
            case name = "Name"
            case timeTemplateId = "TimeTemplateId"
            case timeTemplateName = "TimeTemplateName"
            case channels = "Channels"
            case recordStorageTime = "RecordStorageTime"
        }
    }

    /// 录制计划详情
    public struct RecordPlanItem: TCOutputModel {
        /// 计划ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let planId: String?

        /// 计划名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let name: String?

        /// 时间模板ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let timeTemplateId: String?

        /// 时间模板名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let timeTemplateName: String?

        /// 录制类型
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let eventId: Int64?

        /// 绑定的设备列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let devices: [DeviceItem]?

        enum CodingKeys: String, CodingKey {
            case planId = "PlanId"
            case name = "Name"
            case timeTemplateId = "TimeTemplateId"
            case timeTemplateName = "TimeTemplateName"
            case eventId = "EventId"
            case devices = "Devices"
        }
    }

    /// 大盘统计-录像存储统计 出参RecordStatistic
    public struct RecordStatistic: TCOutputModel {
        /// 时间戳
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let time: Int64?

        /// 统计结果
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let value: RecordStatisticValue?

        enum CodingKeys: String, CodingKey {
            case time = "Time"
            case value = "Value"
        }
    }

    /// 大盘统计-录像存储统计 出参Value
    public struct RecordStatisticValue: TCOutputModel {
        /// 期望执行时间 秒
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let expectTimeLen: Int64?

        /// 实际执行时间 秒
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let recordTimeLen: Int64?

        /// 存储大小 G
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let fileSize: Float?

        enum CodingKeys: String, CodingKey {
            case expectTimeLen = "ExpectTimeLen"
            case recordTimeLen = "RecordTimeLen"
            case fileSize = "FileSize"
        }
    }

    /// 普通设备的录像详情
    public struct RecordTaskItem: TCOutputModel {
        /// 录像任务ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let recordTaskId: String?

        /// 录制计划ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let recordPlanId: String?

        /// 本录制片段开始时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let startTime: Int64?

        /// 本录制片段结束时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let endTime: Int64?

        /// 录制模式
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let eventId: Int64?

        /// 本录制片段对应的录制文件URL
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let videoUrl: String?

        /// 本录制片段当前的录制状态
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let recordStatus: Int64?

        /// 场景ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let sceneId: Int64?

        /// 告警ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let warnId: Int64?

        /// 录制id，NVR下属设备有效
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let recordId: String?

        enum CodingKeys: String, CodingKey {
            case recordTaskId = "RecordTaskId"
            case recordPlanId = "RecordPlanId"
            case startTime = "StartTime"
            case endTime = "EndTime"
            case eventId = "EventId"
            case videoUrl = "VideoUrl"
            case recordStatus = "RecordStatus"
            case sceneId = "SceneId"
            case warnId = "WarnId"
            case recordId = "RecordId"
        }
    }

    /// 场景列表元素
    public struct SceneItem: TCOutputModel {
        /// 场景ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let intId: Int64?

        /// 用户UIN
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let uin: String?

        /// 场景名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let sceneName: String?

        /// 触发规则
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let sceneTrigger: String?

        /// 录制时长 秒
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let recordDuration: Int64?

        /// 存储时长 天
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let storeDuration: Int64?

        /// 创建时间
        public let createTime: String

        /// 修改时间
        public let updateTime: String

        enum CodingKeys: String, CodingKey {
            case intId = "IntId"
            case uin = "Uin"
            case sceneName = "SceneName"
            case sceneTrigger = "SceneTrigger"
            case recordDuration = "RecordDuration"
            case storeDuration = "StoreDuration"
            case createTime = "CreateTime"
            case updateTime = "UpdateTime"
        }
    }

    /// SIIP服务器相关配置项
    public struct ServerConfiguration: TCOutputModel {
        /// SIP服务器地址
        public let host: String

        /// SIP服务器端口
        public let port: UInt64

        /// SIP服务器编码
        public let serial: String

        /// SIP服务器域
        public let realm: String

        enum CodingKeys: String, CodingKey {
            case host = "Host"
            case port = "Port"
            case serial = "Serial"
            case realm = "Realm"
        }
    }

    /// 某天的统计数额
    public struct StatisticItem: TCOutputModel {
        /// 日期。格式【YYYY-MM-DD】
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let date: String?

        /// 统计数额
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let sum: Float?

        enum CodingKeys: String, CodingKey {
            case date = "Date"
            case sum = "Sum"
        }
    }

    /// 拉流地址，只有在推流情况下才有
    public struct StreamAddress: TCOutputModel {
        /// 流ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let streamId: String?

        /// rtsp流地址
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let rtspAddr: String?

        /// rtmp流地址
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let rtmpAddr: String?

        /// hls流地址
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let hlsAddr: String?

        /// flv流地址
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let flvAddr: String?

        enum CodingKeys: String, CodingKey {
            case streamId = "StreamId"
            case rtspAddr = "RtspAddr"
            case rtmpAddr = "RtmpAddr"
            case hlsAddr = "HlsAddr"
            case flvAddr = "FlvAddr"
        }
    }

    /// 时间模板详情
    public struct TimeTemplateItem: TCInputModel, TCOutputModel {
        /// 时间模板ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let templateId: String?

        /// 模板名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let name: String?

        /// 是否全时录制，即7*24小时录制 0-否 1-是
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let isAllWeek: Int64?

        /// 是否为自定义模板 0-否 1-是
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let type: Int64?

        /// 时间片段详情
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let timeTemplateSpecs: [TimeTemplateSpec]?

        public init(templateId: String, name: String, isAllWeek: Int64, type: Int64? = nil, timeTemplateSpecs: [TimeTemplateSpec]? = nil) {
            self.templateId = templateId
            self.name = name
            self.isAllWeek = isAllWeek
            self.type = type
            self.timeTemplateSpecs = timeTemplateSpecs
        }

        enum CodingKeys: String, CodingKey {
            case templateId = "TemplateId"
            case name = "Name"
            case isAllWeek = "IsAllWeek"
            case type = "Type"
            case timeTemplateSpecs = "TimeTemplateSpecs"
        }
    }

    /// 在操作时间模板时，用于描述各个时间片段
    public struct TimeTemplateSpec: TCInputModel, TCOutputModel {
        /// 一周中的周几
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let dayofWeek: Int64?

        /// 时间片段的开始时分。格式【HH:MM】
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let beginTime: String?

        /// 时间片段的结束时分。格式【HH:MM】
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let endTime: String?

        public init(dayofWeek: Int64, beginTime: String, endTime: String) {
            self.dayofWeek = dayofWeek
            self.beginTime = beginTime
            self.endTime = endTime
        }

        enum CodingKeys: String, CodingKey {
            case dayofWeek = "DayofWeek"
            case beginTime = "BeginTime"
            case endTime = "EndTime"
        }
    }

    /// 告警列表出参
    public struct WarningsData: TCOutputModel {
        /// 唯一ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let id: Int64?

        /// 设备ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceId: String?

        /// 设备名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceName: String?

        /// 告警通道
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let warnChannel: String?

        /// 告警级别 1: "一级警情", 2: "二级警情", 3: "三级警情", 4: "四级警情",
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let warnLevel: Int64?

        /// 告警级别名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let warnLevelName: String?

        /// 告警方式 2 设备报警 5 视频报警 6 设备故障报警
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let warnMode: Int64?

        /// 告警方式名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let warnModeName: String?

        /// 告警类型  2: {
        /// 			Name: "设备报警",
        /// 			WarnType: map[int]string{
        /// 				1: "视频丢失报警",
        /// 				2: "设备防拆报警",
        /// 				3: "存储设备磁盘满报警",
        /// 				4: "设备高温报警",
        /// 				5: "设备低温报警",
        /// 			},
        /// 		},
        /// 		5: {
        /// 			Name: "视频报警",
        /// 			WarnType: map[int]string{
        /// 				1:  "人工视频报警",
        /// 				2:  "运动目标检测报警",
        /// 				3:  "遗留物检测报警",
        /// 				4:  "物体移除检测报警",
        /// 				5:  "绊线检测报警",
        /// 				6:  "入侵检测报警",
        /// 				7:  "逆行检测报警",
        /// 				8:  "徘徊检测报警",
        /// 				9:  "流量统计报警",
        /// 				10: "密度检测报警",
        /// 				11: "视频异常检测报警",
        /// 				12: "快速移动报警",
        /// 			},
        /// 		},
        /// 		6: {
        /// 			Name: "设备故障报警",
        /// 			WarnType: map[int]string{
        /// 				1: "存储设备磁盘故障报警",
        /// 				2: "存储设备风扇故障报警",
        /// 			},
        /// 		}
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let warnType: Int64?

        /// 是否删除
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let del: Int64?

        /// 创建时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let createTime: String?

        /// 更新时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let updateTime: String?

        enum CodingKeys: String, CodingKey {
            case id = "Id"
            case deviceId = "DeviceId"
            case deviceName = "DeviceName"
            case warnChannel = "WarnChannel"
            case warnLevel = "WarnLevel"
            case warnLevelName = "WarnLevelName"
            case warnMode = "WarnMode"
            case warnModeName = "WarnModeName"
            case warnType = "WarnType"
            case del = "Del"
            case createTime = "CreateTime"
            case updateTime = "UpdateTime"
        }
    }
}
