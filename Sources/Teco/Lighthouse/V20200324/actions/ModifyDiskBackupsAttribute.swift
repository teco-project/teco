//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Lighthouse {
    /// ModifyDiskBackupsAttribute请求参数结构体
    public struct ModifyDiskBackupsAttributeRequest: TCRequestModel {
        /// 云硬盘备份点ID列表。
        public let diskBackupIds: [String]

        /// 云硬盘备份点名称，最大长度90。
        public let diskBackupName: String?

        public init(diskBackupIds: [String], diskBackupName: String? = nil) {
            self.diskBackupIds = diskBackupIds
            self.diskBackupName = diskBackupName
        }

        enum CodingKeys: String, CodingKey {
            case diskBackupIds = "DiskBackupIds"
            case diskBackupName = "DiskBackupName"
        }
    }

    /// ModifyDiskBackupsAttribute返回参数结构体
    public struct ModifyDiskBackupsAttributeResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }

    /// 修改云硬盘备份点属性
    ///
    /// 本接口 (ModifyDiskBackupsAttribute) 用于修改云硬盘备份点属性。
    @inlinable @discardableResult
    public func modifyDiskBackupsAttribute(_ input: ModifyDiskBackupsAttributeRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<ModifyDiskBackupsAttributeResponse> {
        self.client.execute(action: "ModifyDiskBackupsAttribute", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 修改云硬盘备份点属性
    ///
    /// 本接口 (ModifyDiskBackupsAttribute) 用于修改云硬盘备份点属性。
    @inlinable @discardableResult
    public func modifyDiskBackupsAttribute(_ input: ModifyDiskBackupsAttributeRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyDiskBackupsAttributeResponse {
        try await self.client.execute(action: "ModifyDiskBackupsAttribute", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 修改云硬盘备份点属性
    ///
    /// 本接口 (ModifyDiskBackupsAttribute) 用于修改云硬盘备份点属性。
    @inlinable @discardableResult
    public func modifyDiskBackupsAttribute(diskBackupIds: [String], diskBackupName: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<ModifyDiskBackupsAttributeResponse> {
        let input = ModifyDiskBackupsAttributeRequest(diskBackupIds: diskBackupIds, diskBackupName: diskBackupName)
        return self.client.execute(action: "ModifyDiskBackupsAttribute", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 修改云硬盘备份点属性
    ///
    /// 本接口 (ModifyDiskBackupsAttribute) 用于修改云硬盘备份点属性。
    @inlinable @discardableResult
    public func modifyDiskBackupsAttribute(diskBackupIds: [String], diskBackupName: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyDiskBackupsAttributeResponse {
        let input = ModifyDiskBackupsAttributeRequest(diskBackupIds: diskBackupIds, diskBackupName: diskBackupName)
        return try await self.client.execute(action: "ModifyDiskBackupsAttribute", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
}
