//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

// Test PR teco-project/teco-code-generator#23.

import Logging
import NIOCore
import TecoCore

extension Lighthouse {
    /// ApplyDiskBackup请求参数结构体
    public struct ApplyDiskBackupRequest: TCRequestModel {
        /// 云硬盘ID，可通过[DescribeDisks](https://cloud.tencent.com/document/api/1207/66093)接口查询。
        public let diskId: String

        /// 云硬盘备份点ID，可通过[DescribeDiskBackups](https://cloud.tencent.com/document/api/1207/84379)接口查询。
        public let diskBackupId: String

        public init(diskId: String, diskBackupId: String) {
            self.diskId = diskId
            self.diskBackupId = diskBackupId
        }

        enum CodingKeys: String, CodingKey {
            case diskId = "DiskId"
            case diskBackupId = "DiskBackupId"
        }
    }

    /// ApplyDiskBackup返回参数结构体
    public struct ApplyDiskBackupResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }

    /// 回滚云硬盘备份点
    ///
    /// 本接口（ApplyDiskBackup）用于回滚指定云硬盘的备份点。
    /// * 仅支持回滚到原云硬盘。
    /// * 用于回滚的云硬盘备份点必须处于 NORMAL 状态。
    ///   云硬盘备份点状态可以通过  [DescribeDiskBackups](https://cloud.tencent.com/document/api/1207/84379) 接口查询。
    /// * 回滚云硬盘备份点时，云硬盘的状态必须为 UNATTACHED或ATTACHED。
    ///   云硬盘状态可通过 [DescribeDisks](https://cloud.tencent.com/document/api/1207/66093) 接口查询。
    /// * 如果云硬盘处于 ATTACHED状态，相关RUNNING 状态的实例会强制关机，然后回滚云硬盘备份点。
    @inlinable @discardableResult
    public func applyDiskBackup(_ input: ApplyDiskBackupRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<ApplyDiskBackupResponse> {
        self.client.execute(action: "ApplyDiskBackup", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 回滚云硬盘备份点
    ///
    /// 本接口（ApplyDiskBackup）用于回滚指定云硬盘的备份点。
    /// * 仅支持回滚到原云硬盘。
    /// * 用于回滚的云硬盘备份点必须处于 NORMAL 状态。
    ///   云硬盘备份点状态可以通过  [DescribeDiskBackups](https://cloud.tencent.com/document/api/1207/84379) 接口查询。
    /// * 回滚云硬盘备份点时，云硬盘的状态必须为 UNATTACHED或ATTACHED。
    ///   云硬盘状态可通过 [DescribeDisks](https://cloud.tencent.com/document/api/1207/66093) 接口查询。
    /// * 如果云硬盘处于 ATTACHED状态，相关RUNNING 状态的实例会强制关机，然后回滚云硬盘备份点。
    @inlinable @discardableResult
    public func applyDiskBackup(_ input: ApplyDiskBackupRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ApplyDiskBackupResponse {
        try await self.client.execute(action: "ApplyDiskBackup", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 回滚云硬盘备份点
    ///
    /// 本接口（ApplyDiskBackup）用于回滚指定云硬盘的备份点。
    /// * 仅支持回滚到原云硬盘。
    /// * 用于回滚的云硬盘备份点必须处于 NORMAL 状态。
    ///   云硬盘备份点状态可以通过  [DescribeDiskBackups](https://cloud.tencent.com/document/api/1207/84379) 接口查询。
    /// * 回滚云硬盘备份点时，云硬盘的状态必须为 UNATTACHED或ATTACHED。
    ///   云硬盘状态可通过 [DescribeDisks](https://cloud.tencent.com/document/api/1207/66093) 接口查询。
    /// * 如果云硬盘处于 ATTACHED状态，相关RUNNING 状态的实例会强制关机，然后回滚云硬盘备份点。
    @inlinable @discardableResult
    public func applyDiskBackup(diskId: String, diskBackupId: String, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<ApplyDiskBackupResponse> {
        self.applyDiskBackup(.init(diskId: diskId, diskBackupId: diskBackupId), region: region, logger: logger, on: eventLoop)
    }

    /// 回滚云硬盘备份点
    ///
    /// 本接口（ApplyDiskBackup）用于回滚指定云硬盘的备份点。
    /// * 仅支持回滚到原云硬盘。
    /// * 用于回滚的云硬盘备份点必须处于 NORMAL 状态。
    ///   云硬盘备份点状态可以通过  [DescribeDiskBackups](https://cloud.tencent.com/document/api/1207/84379) 接口查询。
    /// * 回滚云硬盘备份点时，云硬盘的状态必须为 UNATTACHED或ATTACHED。
    ///   云硬盘状态可通过 [DescribeDisks](https://cloud.tencent.com/document/api/1207/66093) 接口查询。
    /// * 如果云硬盘处于 ATTACHED状态，相关RUNNING 状态的实例会强制关机，然后回滚云硬盘备份点。
    @inlinable @discardableResult
    public func applyDiskBackup(diskId: String, diskBackupId: String, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ApplyDiskBackupResponse {
        try await self.applyDiskBackup(.init(diskId: diskId, diskBackupId: diskBackupId), region: region, logger: logger, on: eventLoop)
    }
}
