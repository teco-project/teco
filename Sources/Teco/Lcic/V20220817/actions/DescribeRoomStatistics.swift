//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Lcic {
    /// 获取房间统计信息
    ///
    /// 获取房间统计信息，仅可在房间结束后调用。
    @inlinable
    public func describeRoomStatistics(_ input: DescribeRoomStatisticsRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeRoomStatisticsResponse > {
        self.client.execute(action: "DescribeRoomStatistics", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 获取房间统计信息
    ///
    /// 获取房间统计信息，仅可在房间结束后调用。
    @inlinable
    public func describeRoomStatistics(_ input: DescribeRoomStatisticsRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeRoomStatisticsResponse {
        try await self.client.execute(action: "DescribeRoomStatistics", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribeRoomStatistics请求参数结构体
    public struct DescribeRoomStatisticsRequest: TCRequestModel {
        /// 房间Id。
        public let roomId: UInt64
        
        /// 分页查询当前页数，从1开始递增。
        public let page: UInt64
        
        /// 每页数据量，最大1000。
        public let limit: UInt64
        
        public init (roomId: UInt64, page: UInt64, limit: UInt64) {
            self.roomId = roomId
            self.page = page
            self.limit = limit
        }
        
        enum CodingKeys: String, CodingKey {
            case roomId = "RoomId"
            case page = "Page"
            case limit = "Limit"
        }
    }
    
    /// DescribeRoomStatistics返回参数结构体
    public struct DescribeRoomStatisticsResponse: TCResponseModel {
        /// 峰值在线成员人数。
        public let peakMemberNumber: UInt64
        
        /// 累计在线人数。
        public let memberNumber: UInt64
        
        /// 记录总数。包含进入房间或者应到未到的。
        public let total: UInt64
        
        /// 成员记录列表。
        public let memberRecords: [MemberRecord]
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case peakMemberNumber = "PeakMemberNumber"
            case memberNumber = "MemberNumber"
            case total = "Total"
            case memberRecords = "MemberRecords"
            case requestId = "RequestId"
        }
    }
}
