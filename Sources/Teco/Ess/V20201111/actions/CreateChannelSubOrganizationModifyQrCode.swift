//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Ess {
    /// CreateChannelSubOrganizationModifyQrCode请求参数结构体
    public struct CreateChannelSubOrganizationModifyQrCodeRequest: TCRequestModel {
        /// 操作人信息，userId必填
        public let `operator`: UserInfo

        /// 应用编号
        public let applicationId: String

        public init(operator: UserInfo, applicationId: String) {
            self.operator = `operator`
            self.applicationId = applicationId
        }

        enum CodingKeys: String, CodingKey {
            case `operator` = "Operator"
            case applicationId = "ApplicationId"
        }
    }

    /// CreateChannelSubOrganizationModifyQrCode返回参数结构体
    public struct CreateChannelSubOrganizationModifyQrCodeResponse: TCResponseModel {
        /// 二维码下载链接
        public let qrCodeUrl: String

        /// 二维码失效时间 UNIX 时间戳 精确到秒
        public let expiredTime: Int64

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case qrCodeUrl = "QrCodeUrl"
            case expiredTime = "ExpiredTime"
            case requestId = "RequestId"
        }
    }

    /// 生成子客编辑企业信息二维码
    ///
    /// 新接口：ChannelCreateOrganizationModifyQrCode
    ///
    /// 老接口目前无线上流量，测试用例已下线处理
    ///
    /// 生成子客编辑企业信息二维码
    @available(*, unavailable, message: "根据产品要求，调整接口目录")
    @inlinable
    public func createChannelSubOrganizationModifyQrCode(_ input: CreateChannelSubOrganizationModifyQrCodeRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<CreateChannelSubOrganizationModifyQrCodeResponse> {
        fatalError("CreateChannelSubOrganizationModifyQrCode is no longer available.")
    }

    /// 生成子客编辑企业信息二维码
    ///
    /// 新接口：ChannelCreateOrganizationModifyQrCode
    ///
    /// 老接口目前无线上流量，测试用例已下线处理
    ///
    /// 生成子客编辑企业信息二维码
    @available(*, unavailable, message: "根据产品要求，调整接口目录")
    @inlinable
    public func createChannelSubOrganizationModifyQrCode(_ input: CreateChannelSubOrganizationModifyQrCodeRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> CreateChannelSubOrganizationModifyQrCodeResponse {
        fatalError("CreateChannelSubOrganizationModifyQrCode is no longer available.")
    }

    /// 生成子客编辑企业信息二维码
    ///
    /// 新接口：ChannelCreateOrganizationModifyQrCode
    ///
    /// 老接口目前无线上流量，测试用例已下线处理
    ///
    /// 生成子客编辑企业信息二维码
    @available(*, unavailable, message: "根据产品要求，调整接口目录")
    @inlinable
    public func createChannelSubOrganizationModifyQrCode(operator: UserInfo, applicationId: String, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<CreateChannelSubOrganizationModifyQrCodeResponse> {
        fatalError("CreateChannelSubOrganizationModifyQrCode is no longer available.")
    }

    /// 生成子客编辑企业信息二维码
    ///
    /// 新接口：ChannelCreateOrganizationModifyQrCode
    ///
    /// 老接口目前无线上流量，测试用例已下线处理
    ///
    /// 生成子客编辑企业信息二维码
    @available(*, unavailable, message: "根据产品要求，调整接口目录")
    @inlinable
    public func createChannelSubOrganizationModifyQrCode(operator: UserInfo, applicationId: String, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> CreateChannelSubOrganizationModifyQrCodeResponse {
        fatalError("CreateChannelSubOrganizationModifyQrCode is no longer available.")
    }
}
