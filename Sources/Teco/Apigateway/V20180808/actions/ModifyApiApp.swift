//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Apigateway {
    /// 修改应用
    ///
    /// 本接口（ModifyApiApp）用于修改已经创建的应用。
    @inlinable
    public func modifyApiApp(_ input: ModifyApiAppRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < ModifyApiAppResponse > {
        self.client.execute(action: "ModifyApiApp", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 修改应用
    ///
    /// 本接口（ModifyApiApp）用于修改已经创建的应用。
    @inlinable
    public func modifyApiApp(_ input: ModifyApiAppRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyApiAppResponse {
        try await self.client.execute(action: "ModifyApiApp", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// ModifyApiApp请求参数结构体
    public struct ModifyApiAppRequest: TCRequestModel {
        /// 应用唯一 ID。
        public let apiAppId: String
        
        /// 修改的应用名称
        public let apiAppName: String?
        
        /// 修改的应用描述
        public let apiAppDesc: String?
        
        public init (apiAppId: String, apiAppName: String?, apiAppDesc: String?) {
            self.apiAppId = apiAppId
            self.apiAppName = apiAppName
            self.apiAppDesc = apiAppDesc
        }
        
        enum CodingKeys: String, CodingKey {
            case apiAppId = "ApiAppId"
            case apiAppName = "ApiAppName"
            case apiAppDesc = "ApiAppDesc"
        }
    }
    
    /// ModifyApiApp返回参数结构体
    public struct ModifyApiAppResponse: TCResponseModel {
        /// 修改操作是否成功。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let result: Bool?
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case result = "Result"
            case requestId = "RequestId"
        }
    }
}