//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Iotvideo {
    /// 删除自定义物模型数据类型
    ///
    /// 本接口（DeleteIotDataType）用于删除自定义物模型数据类型。
    @inlinable
    public func deleteIotDataType(_ input: DeleteIotDataTypeRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DeleteIotDataTypeResponse > {
        self.client.execute(action: "DeleteIotDataType", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 删除自定义物模型数据类型
    ///
    /// 本接口（DeleteIotDataType）用于删除自定义物模型数据类型。
    @inlinable
    public func deleteIotDataType(_ input: DeleteIotDataTypeRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DeleteIotDataTypeResponse {
        try await self.client.execute(action: "DeleteIotDataType", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DeleteIotDataType请求参数结构体
    public struct DeleteIotDataTypeRequest: TCRequestModel {
        /// 自定义数据类型的标识符
        public let typeId: String
        
        public init (typeId: String) {
            self.typeId = typeId
        }
        
        enum CodingKeys: String, CodingKey {
            case typeId = "TypeId"
        }
    }
    
    /// DeleteIotDataType返回参数结构体
    public struct DeleteIotDataTypeResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }
}