//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Es {
    /// 更新管道描述
    ///
    /// 用于更新管道描述信息
    @inlinable
    public func updateLogstashPipelineDesc(_ input: UpdateLogstashPipelineDescRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < UpdateLogstashPipelineDescResponse > {
        self.client.execute(action: "UpdateLogstashPipelineDesc", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 更新管道描述
    ///
    /// 用于更新管道描述信息
    @inlinable
    public func updateLogstashPipelineDesc(_ input: UpdateLogstashPipelineDescRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> UpdateLogstashPipelineDescResponse {
        try await self.client.execute(action: "UpdateLogstashPipelineDesc", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// UpdateLogstashPipelineDesc请求参数结构体
    public struct UpdateLogstashPipelineDescRequest: TCRequestModel {
        /// 实例ID
        public let instanceId: String
        
        /// 实例管道ID
        public let pipelineId: String
        
        /// 管道描述信息
        public let pipelineDesc: String
        
        public init (instanceId: String, pipelineId: String, pipelineDesc: String) {
            self.instanceId = instanceId
            self.pipelineId = pipelineId
            self.pipelineDesc = pipelineDesc
        }
        
        enum CodingKeys: String, CodingKey {
            case instanceId = "InstanceId"
            case pipelineId = "PipelineId"
            case pipelineDesc = "PipelineDesc"
        }
    }
    
    /// UpdateLogstashPipelineDesc返回参数结构体
    public struct UpdateLogstashPipelineDescResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }
}
