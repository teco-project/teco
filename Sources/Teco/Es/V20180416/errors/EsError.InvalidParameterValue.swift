//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import TecoCore

extension TCEsError {
    public struct InvalidParameterValue: TCEsErrorType {
        enum Code: String {
            case chargeType = "InvalidParameterValue.ChargeType"
            case configInfo = "InvalidParameterValue.ConfigInfo"
            case esConfigType = "InvalidParameterValue.EsConfigType"
            case installPluginList = "InvalidParameterValue.InstallPluginList"
            case instanceName = "InvalidParameterValue.InstanceName"
            case invalidDeadline = "InvalidParameterValue.InvalidDeadline"
            case invalidJDK = "InvalidParameterValue.InvalidJDK"
            case password = "InvalidParameterValue.Password"
            case pluginType = "InvalidParameterValue.PluginType"
            case renewFlag = "InvalidParameterValue.RenewFlag"
            case upgradeMode = "InvalidParameterValue.UpgradeMode"
            case other = "InvalidParameterValue"
        }

        private let error: Code

        public let context: TCErrorContext?

        public var errorCode: String {
            self.error.rawValue
        }

        /// Initializer used by ``TCClient`` to match an error of this type.
        public init?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }

        internal init(_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }

        public static var chargeType: InvalidParameterValue {
            InvalidParameterValue(.chargeType)
        }

        public static var configInfo: InvalidParameterValue {
            InvalidParameterValue(.configInfo)
        }

        public static var esConfigType: InvalidParameterValue {
            InvalidParameterValue(.esConfigType)
        }

        public static var installPluginList: InvalidParameterValue {
            InvalidParameterValue(.installPluginList)
        }

        public static var instanceName: InvalidParameterValue {
            InvalidParameterValue(.instanceName)
        }

        public static var invalidDeadline: InvalidParameterValue {
            InvalidParameterValue(.invalidDeadline)
        }

        public static var invalidJDK: InvalidParameterValue {
            InvalidParameterValue(.invalidJDK)
        }

        public static var password: InvalidParameterValue {
            InvalidParameterValue(.password)
        }

        public static var pluginType: InvalidParameterValue {
            InvalidParameterValue(.pluginType)
        }

        public static var renewFlag: InvalidParameterValue {
            InvalidParameterValue(.renewFlag)
        }

        public static var upgradeMode: InvalidParameterValue {
            InvalidParameterValue(.upgradeMode)
        }

        /// 参数取值错误。
        public static var other: InvalidParameterValue {
            InvalidParameterValue(.other)
        }

        public func asEsError() -> TCEsError {
            let code: TCEsError.Code
            switch self.error {
            case .chargeType:
                code = .invalidParameterValue_ChargeType
            case .configInfo:
                code = .invalidParameterValue_ConfigInfo
            case .esConfigType:
                code = .invalidParameterValue_EsConfigType
            case .installPluginList:
                code = .invalidParameterValue_InstallPluginList
            case .instanceName:
                code = .invalidParameterValue_InstanceName
            case .invalidDeadline:
                code = .invalidParameterValue_InvalidDeadline
            case .invalidJDK:
                code = .invalidParameterValue_InvalidJDK
            case .password:
                code = .invalidParameterValue_Password
            case .pluginType:
                code = .invalidParameterValue_PluginType
            case .renewFlag:
                code = .invalidParameterValue_RenewFlag
            case .upgradeMode:
                code = .invalidParameterValue_UpgradeMode
            case .other:
                code = .invalidParameterValue
            }
            return TCEsError(code, context: self.context)
        }
    }
}
