//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Organization {
    /// 获取企业组织成员列表
    @inlinable
    public func describeOrganizationMembers(_ input: DescribeOrganizationMembersRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeOrganizationMembersResponse > {
        self.client.execute(action: "DescribeOrganizationMembers", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 获取企业组织成员列表
    @inlinable
    public func describeOrganizationMembers(_ input: DescribeOrganizationMembersRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeOrganizationMembersResponse {
        try await self.client.execute(action: "DescribeOrganizationMembers", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribeOrganizationMembers请求参数结构体
    public struct DescribeOrganizationMembersRequest: TCRequestModel {
        /// 偏移量。
        public let offset: UInt64
        
        /// 限制数目。最大50
        public let limit: UInt64
        
        /// 国际站：en，国内站：zh
        public let lang: String?
        
        /// 成员名称或者成员ID搜索。
        public let searchKey: String?
        
        /// 主体名称搜索。
        public let authName: String?
        
        /// 可信服务产品简称。可信服务管理员查询时必须指定
        public let product: String?
        
        public init (offset: UInt64, limit: UInt64, lang: String?, searchKey: String?, authName: String?, product: String?) {
            self.offset = offset
            self.limit = limit
            self.lang = lang
            self.searchKey = searchKey
            self.authName = authName
            self.product = product
        }
        
        enum CodingKeys: String, CodingKey {
            case offset = "Offset"
            case limit = "Limit"
            case lang = "Lang"
            case searchKey = "SearchKey"
            case authName = "AuthName"
            case product = "Product"
        }
    }
    
    /// DescribeOrganizationMembers返回参数结构体
    public struct DescribeOrganizationMembersResponse: TCResponseModel {
        /// 成员列表。
        public let items: [OrgMember]
        
        /// 总数目。
        public let total: UInt64
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case items = "Items"
            case total = "Total"
            case requestId = "RequestId"
        }
    }
}
