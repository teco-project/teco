//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension TCTagError {
    public struct InvalidParameter: TCErrorType {
        enum Code: String {
            case paginationTokenInvalid = "InvalidParameter.PaginationTokenInvalid"
            case projectNameExisted = "InvalidParameter.ProjectNameExisted"
            case reservedTagKey = "InvalidParameter.ReservedTagKey"
            case tag = "InvalidParameter.Tag"
            case unsupportedService = "InvalidParameter.UnsupportedService"
            case other = "InvalidParameter"
        }
        
        private let error: Code
        
        public let context: TCErrorContext?
        
        public var errorCode: String {
            self.error.rawValue
        }
        
        public init ?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }
        
        internal init (_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }
        
        /// PaginationToken参数非法。
        public static var paginationTokenInvalid: InvalidParameter {
            InvalidParameter(.paginationTokenInvalid)
        }
        
        /// 项目名称已存在。
        public static var projectNameExisted: InvalidParameter {
            InvalidParameter(.projectNameExisted)
        }
        
        /// 系统预留标签键 qcloud、tencent和project 禁止创建。
        public static var reservedTagKey: InvalidParameter {
            InvalidParameter(.reservedTagKey)
        }
        
        /// Tag参数错误。
        public static var tag: InvalidParameter {
            InvalidParameter(.tag)
        }
        
        /// 当前业务不支持标签操作。
        public static var unsupportedService: InvalidParameter {
            InvalidParameter(.unsupportedService)
        }
        
        /// 参数错误。
        public static var other: InvalidParameter {
            InvalidParameter(.other)
        }
    }
}

extension TCTagError.InvalidParameter: Equatable {
    public static func == (lhs: TCTagError.InvalidParameter, rhs: TCTagError.InvalidParameter) -> Bool {
        lhs.error == rhs.error
    }
}

extension TCTagError.InvalidParameter: CustomStringConvertible {
    public var description: String {
        return "\(self.error.rawValue): \(message ?? "")"
    }
}

extension TCTagError.InvalidParameter {
    public func toTagError() -> TCTagError {
        guard let code = TCTagError.Code(rawValue: self.error.rawValue) else {
            fatalError("Unexpected internal conversion error!\nPlease file a bug at https://github.com/teco-project/teco to help address the problem.")
        }
        return TCTagError(code, context: self.context)
    }
}