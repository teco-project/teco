//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension TCMrsError {
    public struct InvalidParameter: TCErrorType {
        enum Code: String {
            case autoFitDirection = "InvalidParameter.AutoFitDirection"
            case imageInfoList = "InvalidParameter.ImageInfoList"
            case imageOriginalSize = "InvalidParameter.ImageOriginalSize"
            case invalidAction = "InvalidParameter.InvalidAction"
            case ocrEngineType = "InvalidParameter.OcrEngineType"
            case rotateTheAngle = "InvalidParameter.RotateTheAngle"
            case text = "InvalidParameter.Text"
            case other = "InvalidParameter"
        }
        
        private let error: Code
        
        public let context: TCErrorContext?
        
        public var errorCode: String {
            self.error.rawValue
        }
        
        public init ?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }
        
        internal init (_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }
        
        /// 参数AutoFitDirection无效。
        public static var autoFitDirection: InvalidParameter {
            InvalidParameter(.autoFitDirection)
        }
        
        /// 参数ImageInfoList无效。
        public static var imageInfoList: InvalidParameter {
            InvalidParameter(.imageInfoList)
        }
        
        /// 参数ImageOriginalSize无效。
        public static var imageOriginalSize: InvalidParameter {
            InvalidParameter(.imageOriginalSize)
        }
        
        /// 请求Action无效。
        public static var invalidAction: InvalidParameter {
            InvalidParameter(.invalidAction)
        }
        
        /// 参数OcrEngineType无效。
        public static var ocrEngineType: InvalidParameter {
            InvalidParameter(.ocrEngineType)
        }
        
        /// 参数RotateTheAngle无效。
        public static var rotateTheAngle: InvalidParameter {
            InvalidParameter(.rotateTheAngle)
        }
        
        /// 参数Text无效。
        public static var text: InvalidParameter {
            InvalidParameter(.text)
        }
        
        /// 参数错误。
        public static var other: InvalidParameter {
            InvalidParameter(.other)
        }
    }
}

extension TCMrsError.InvalidParameter: Equatable {
    public static func == (lhs: TCMrsError.InvalidParameter, rhs: TCMrsError.InvalidParameter) -> Bool {
        lhs.error == rhs.error
    }
}

extension TCMrsError.InvalidParameter: CustomStringConvertible {
    public var description: String {
        return "\(self.error.rawValue): \(message ?? "")"
    }
}

extension TCMrsError.InvalidParameter {
    public func toMrsError() -> TCMrsError {
        guard let code = TCMrsError.Code(rawValue: self.error.rawValue) else {
            fatalError("Unexpected internal conversion error!\nPlease file a bug at https://github.com/teco-project/teco to help address the problem.")
        }
        return TCMrsError(code, context: self.context)
    }
}