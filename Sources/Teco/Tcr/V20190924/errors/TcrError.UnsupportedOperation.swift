//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import TecoCore

extension TCTcrError {
    public struct UnsupportedOperation: TCTcrErrorType {
        enum Code: String {
            case createPrivateZone = "UnsupportedOperation.CreatePrivateZone"
            case createPrivateZoneRecord = "UnsupportedOperation.CreatePrivateZoneRecord"
            case deletePrivateZoneRecord = "UnsupportedOperation.DeletePrivateZoneRecord"
            case describePrivateZoneList = "UnsupportedOperation.DescribePrivateZoneList"
            case describePrivateZoneRecordList = "UnsupportedOperation.DescribePrivateZoneRecordList"
            case errNoUserInitialized = "UnsupportedOperation.ErrNoUserInitialized"
            case modifyPrivateZoneRecord = "UnsupportedOperation.ModifyPrivateZoneRecord"
            case modifyPrivateZoneVpc = "UnsupportedOperation.ModifyPrivateZoneVpc"
            case other = "UnsupportedOperation"
        }

        private let error: Code

        public let context: TCErrorContext?

        public var errorCode: String {
            self.error.rawValue
        }

        /// Initializer used by ``TCClient`` to match an error of this type.
        public init?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }

        internal init(_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }

        /// 创建私有域失败。
        public static var createPrivateZone: UnsupportedOperation {
            UnsupportedOperation(.createPrivateZone)
        }

        /// 创建私有域记录失败。
        public static var createPrivateZoneRecord: UnsupportedOperation {
            UnsupportedOperation(.createPrivateZoneRecord)
        }

        /// 删除私有域记录失败。
        public static var deletePrivateZoneRecord: UnsupportedOperation {
            UnsupportedOperation(.deletePrivateZoneRecord)
        }

        /// 查询私有域列表失败。
        public static var describePrivateZoneList: UnsupportedOperation {
            UnsupportedOperation(.describePrivateZoneList)
        }

        /// 查询私有域记录列表失败。
        public static var describePrivateZoneRecordList: UnsupportedOperation {
            UnsupportedOperation(.describePrivateZoneRecordList)
        }

        /// 个人版实例用户未初始化。
        public static var errNoUserInitialized: UnsupportedOperation {
            UnsupportedOperation(.errNoUserInitialized)
        }

        /// 修改私有域记录失败。
        public static var modifyPrivateZoneRecord: UnsupportedOperation {
            UnsupportedOperation(.modifyPrivateZoneRecord)
        }

        /// 修改vpc与私有域关联关系失败。
        public static var modifyPrivateZoneVpc: UnsupportedOperation {
            UnsupportedOperation(.modifyPrivateZoneVpc)
        }

        /// 操作不支持。
        public static var other: UnsupportedOperation {
            UnsupportedOperation(.other)
        }

        public func asTcrError() -> TCTcrError {
            let code: TCTcrError.Code
            switch self.error {
            case .createPrivateZone:
                code = .unsupportedOperation_CreatePrivateZone
            case .createPrivateZoneRecord:
                code = .unsupportedOperation_CreatePrivateZoneRecord
            case .deletePrivateZoneRecord:
                code = .unsupportedOperation_DeletePrivateZoneRecord
            case .describePrivateZoneList:
                code = .unsupportedOperation_DescribePrivateZoneList
            case .describePrivateZoneRecordList:
                code = .unsupportedOperation_DescribePrivateZoneRecordList
            case .errNoUserInitialized:
                code = .unsupportedOperation_ErrNoUserInitialized
            case .modifyPrivateZoneRecord:
                code = .unsupportedOperation_ModifyPrivateZoneRecord
            case .modifyPrivateZoneVpc:
                code = .unsupportedOperation_ModifyPrivateZoneVpc
            case .other:
                code = .unsupportedOperation
            }
            return TCTcrError(code, context: self.context)
        }
    }
}
