//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import TecoCore

extension Vm {
    /// 音频输出参数
    public struct AudioResult: TCOutputModel {
        /// 该字段用于返回审核内容是否命中审核模型；取值：0（**未命中**）、1（**命中**）。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let hitFlag: Int64?

        /// 该字段用于返回检测结果所对应的恶意标签。<br>返回值：**Normal**：正常，**Porn**：色情，**Abuse**：谩骂，**Ad**：广告，**Custom**：自定义违规；以及其他令人反感、不安全或不适宜的内容类型。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let label: String?

        /// 该字段用于返回后续操作建议。当您获取到判定结果后，返回值表示具体的后续建议操作。<br>
        /// 返回值：**Block**：建议屏蔽，**Review** ：建议人工复审，**Pass**：建议通过
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let suggestion: String?

        /// 该字段用于返回当前标签下的置信度，取值范围：0（**置信度最低**）-100（**置信度最高** ），越高代表文本越有可能属于当前返回的标签；如：*色情 99*，则表明该文本非常有可能属于色情内容。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let score: Int64?

        /// 该字段用于返回音频文件经ASR识别后的文本信息。最长可识别**5小时**的音频文件，若超出时长限制，接口将会报错。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let text: String?

        /// 该字段用于返回音频片段存储的链接地址，该地址有效期为1天。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let url: String?

        /// 该字段用于返回音频文件的时长，单位为毫秒。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let duration: String?

        /// 该字段用于返回输入参数中的额外附加信息（Extra），如未配置则默认返回值为空。<br>备注：不同客户或Biztype下返回信息不同，如需配置该字段请提交工单咨询或联系售后专员处理。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let extra: String?

        /// 该字段用于返回音频文件经ASR识别后产生的文本的详细审核结果。具体结果内容请参见AudioResultDetailLanguageResult数据结构的细节描述。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let textResults: [AudioResultDetailTextResult]?

        /// 该字段用于返回音频文件呻吟检测的详细审核结果。具体结果内容请参见AudioResultDetailMoanResult数据结构的细节描述。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let moanResults: [AudioResultDetailMoanResult]?

        /// 该字段用于返回音频小语种检测的详细审核结果。具体结果内容请参见AudioResultDetailLanguageResult数据结构的细节描述。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let languageResults: [AudioResultDetailLanguageResult]?

        /// 该字段用于返回当前标签（Lable）下的二级标签。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let subLabel: String?

        /// 识别类标签结果信息列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let recognitionResults: [RecognitionResult]?

        enum CodingKeys: String, CodingKey {
            case hitFlag = "HitFlag"
            case label = "Label"
            case suggestion = "Suggestion"
            case score = "Score"
            case text = "Text"
            case url = "Url"
            case duration = "Duration"
            case extra = "Extra"
            case textResults = "TextResults"
            case moanResults = "MoanResults"
            case languageResults = "LanguageResults"
            case subLabel = "SubLabel"
            case recognitionResults = "RecognitionResults"
        }
    }

    /// 音频小语种检测结果
    public struct AudioResultDetailLanguageResult: TCOutputModel {
        /// 语种
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let label: String?

        /// 得分
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let score: Int64?

        /// 开始时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let startTime: Float?

        /// 结束时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let endTime: Float?

        /// 子标签码
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let subLabelCode: String?

        enum CodingKeys: String, CodingKey {
            case label = "Label"
            case score = "Score"
            case startTime = "StartTime"
            case endTime = "EndTime"
            case subLabelCode = "SubLabelCode"
        }
    }

    /// 音频呻吟审核结果
    public struct AudioResultDetailMoanResult: TCOutputModel {
        /// 该字段用于返回检测结果需要检测的内容类型，此处固定为**Moan**（呻吟）以调用呻吟检测功能。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let label: String?

        /// 该字段用于返回呻吟检测的置信度，取值范围：0（**置信度最低**）-100（**置信度最高**），越高代表音频越有可能属于呻吟内容。
        public let score: Int64

        /// 该字段用于返回对应呻吟标签的片段在音频文件内的开始时间，单位为毫秒。
        public let startTime: Float

        /// 该字段用于返回对应呻吟标签的片段在音频文件内的结束时间，单位为毫秒。
        public let endTime: Float

        /// *内测中，敬请期待*
        public let subLabelCode: String

        /// 该字段用于返回当前标签（Lable）下的二级标签。
        public let subLabel: String

        /// 该字段用于返回基于恶意标签的后续操作建议。当您获取到判定结果后，返回值表示系统推荐的后续操作；建议您按照业务所需，对不同违规类型与建议值进行处理。<br>返回值：**Block**：建议屏蔽，**Review** ：建议人工复审，**Pass**：建议通过
        public let suggestion: String

        enum CodingKeys: String, CodingKey {
            case label = "Label"
            case score = "Score"
            case startTime = "StartTime"
            case endTime = "EndTime"
            case subLabelCode = "SubLabelCode"
            case subLabel = "SubLabel"
            case suggestion = "Suggestion"
        }
    }

    /// 音频ASR文本审核结果
    public struct AudioResultDetailTextResult: TCOutputModel {
        /// 该字段用于返回检测结果所对应的恶意标签。<br>返回值：**Normal**：正常，**Porn**：色情，**Abuse**：谩骂，**Ad**：广告，**Custom**：自定义违规；以及其他令人反感、不安全或不适宜的内容类型。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let label: String?

        /// 该字段用于返回ASR识别出的文本内容命中的关键词信息，用于标注内容违规的具体原因（如：加我微信）。该参数可能会有多个返回值，代表命中的多个关键词；若返回值为空，Score不为空，则代表识别结果所对应的恶意标签（Label）来自于语义模型判断的返回值。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let keywords: [String]?

        /// 该字段**仅当Label为Custom：自定义关键词时该参数有效**,用于返回自定义库的ID，以方便自定义库管理和配置。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let libId: String?

        /// 该字段**仅当Label为Custom：自定义关键词时该参数有效**,用于返回自定义库的名称,以方便自定义库管理和配置。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let libName: String?

        /// 该字段用于返回当前标签下的置信度，取值范围：0（**置信度最低**）-100（**置信度最高**），越高代表文本越有可能属于当前返回的标签；如：*色情 99*，则表明该文本非常有可能属于色情内容。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let score: Int64?

        /// 该字段用于返回自定义关键词对应的词库类型，取值为**1**（黑白库）和**2**（自定义关键词库），若未配置自定义关键词库,则默认值为1（黑白库匹配）。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let libType: Int64?

        /// 该字段用于返回后续操作建议。当您获取到判定结果后，返回值表示具体的后续建议操作。<br>
        /// 返回值：**Block**：建议屏蔽，**Review** ：建议人工复审，**Pass**：建议通过
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let suggestion: String?

        /// 该字段用于返回当前标签（Lable）下的二级标签。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let subLabel: String?

        enum CodingKeys: String, CodingKey {
            case label = "Label"
            case keywords = "Keywords"
            case libId = "LibId"
            case libName = "LibName"
            case score = "Score"
            case libType = "LibType"
            case suggestion = "Suggestion"
            case subLabel = "SubLabel"
        }
    }

    /// 声音段信息
    public struct AudioSegments: TCOutputModel {
        /// 截帧时间。
        /// 点播文件：该值为相对于视频偏移时间，单位为秒，例如：0，5，10
        /// 直播流：该值为时间戳，例如：1594650717
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let offsetTime: String?

        /// 结果集
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let result: AudioResult?

        enum CodingKeys: String, CodingKey {
            case offsetTime = "OffsetTime"
            case result = "Result"
        }
    }

    /// 文件桶信息
    /// 参考腾讯云存储相关说明 https://cloud.tencent.com/document/product/436/44352
    public struct BucketInfo: TCInputModel {
        /// 腾讯云对象存储，存储桶名称
        public let bucket: String

        /// 地域
        public let region: String

        /// 对象Key
        public let object: String

        public init(bucket: String, region: String, object: String) {
            self.bucket = bucket
            self.region = region
            self.object = object
        }

        enum CodingKeys: String, CodingKey {
            case bucket = "Bucket"
            case region = "Region"
            case object = "Object"
        }
    }

    /// Result结果详情
    public struct ImageResult: TCOutputModel {
        /// 违规标志
        /// 0 未命中
        /// 1 命中
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let hitFlag: Int64?

        /// 命中的标签
        /// Porn 色情
        /// Sexy 性感
        /// Polity 政治
        /// Illegal 违法
        /// Abuse 谩骂
        /// Terror 暴恐
        /// Ad 广告
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let label: String?

        /// 审核建议，可选值：
        /// Pass 通过，
        /// Review 建议人审，
        /// Block 确认违规
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let suggestion: String?

        /// 得分
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let score: Int64?

        /// 画面截帧图片结果集
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let results: [ImageResultResult]?

        /// 图片URL地址
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let url: String?

        /// 附加字段
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let extra: String?

        enum CodingKeys: String, CodingKey {
            case hitFlag = "HitFlag"
            case label = "Label"
            case suggestion = "Suggestion"
            case score = "Score"
            case results = "Results"
            case url = "Url"
            case extra = "Extra"
        }
    }

    /// 图片输出结果的子结果
    public struct ImageResultResult: TCOutputModel {
        /// 场景
        /// Porn 色情
        /// Sexy 性感
        /// Polity 政治
        /// Illegal 违法
        /// Abuse 谩骂
        /// Terror 暴恐
        /// Ad 广告
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let scene: String?

        /// 是否命中
        /// 0 未命中
        /// 1 命中
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let hitFlag: Int64?

        /// 审核建议，可选值：
        /// Pass 通过，
        /// Review 建议人审，
        /// Block 确认违规
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let suggestion: String?

        /// 标签
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let label: String?

        /// 子标签
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let subLabel: String?

        /// 分数
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let score: Int64?

        /// 如果命中场景为涉政，则该数据为人物姓名列表，否则null
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let names: [String]?

        /// 图片OCR文本
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let text: String?

        /// 其他详情
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let details: [ImageResultsResultDetail]?

        enum CodingKeys: String, CodingKey {
            case scene = "Scene"
            case hitFlag = "HitFlag"
            case suggestion = "Suggestion"
            case label = "Label"
            case subLabel = "SubLabel"
            case score = "Score"
            case names = "Names"
            case text = "Text"
            case details = "Details"
        }
    }

    /// 具体场景下的图片识别结果
    public struct ImageResultsResultDetail: TCOutputModel {
        /// 任务名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let name: String?

        /// OCR识别文本
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let text: String?

        /// 位置信息
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let location: ImageResultsResultDetailLocation?

        /// 标签
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let label: String?

        /// 库ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let libId: String?

        /// 库名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let libName: String?

        /// 命中的关键词
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let keywords: [String]?

        /// 建议
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let suggestion: String?

        /// 得分
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let score: Int64?

        /// 子标签码
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let subLabelCode: String?

        enum CodingKeys: String, CodingKey {
            case name = "Name"
            case text = "Text"
            case location = "Location"
            case label = "Label"
            case libId = "LibId"
            case libName = "LibName"
            case keywords = "Keywords"
            case suggestion = "Suggestion"
            case score = "Score"
            case subLabelCode = "SubLabelCode"
        }
    }

    /// 图片详情位置信息
    public struct ImageResultsResultDetailLocation: TCOutputModel {
        /// x坐标
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let x: Float?

        /// y坐标
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let y: Float?

        /// 宽度
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let width: Int64?

        /// 高度
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let height: Int64?

        /// 旋转角度
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let rotate: Float?

        enum CodingKeys: String, CodingKey {
            case x = "X"
            case y = "Y"
            case width = "Width"
            case height = "Height"
            case rotate = "Rotate"
        }
    }

    /// 图片段信息
    public struct ImageSegments: TCOutputModel {
        /// 截帧时间。
        /// 点播文件：该值为相对于视频偏移时间，单位为秒，例如：0，5，10
        /// 直播流：该值为时间戳，例如：1594650717
        public let offsetTime: String

        /// 画面截帧结果详情
        public let result: ImageResult

        enum CodingKeys: String, CodingKey {
            case offsetTime = "OffsetTime"
            case result = "Result"
        }
    }

    /// 输入信息详情
    public struct InputInfo: TCOutputModel {
        /// 传入的类型可选：URL，COS
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let type: String?

        /// Url地址
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let url: String?

        /// 桶信息。当输入当时COS时，该字段不为空
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let bucketInfo: String?

        enum CodingKeys: String, CodingKey {
            case type = "Type"
            case url = "Url"
            case bucketInfo = "BucketInfo"
        }
    }

    /// 媒体类型
    public struct MediaInfo: TCOutputModel {
        /// 编码格式
        public let codecs: String

        /// 流检测时分片时长
        /// 注意：此字段可能返回 0，表示取不到有效值。
        public let duration: Int64

        /// 宽，单位为像素
        public let width: Int64

        /// 高，单位为像素
        public let height: Int64

        /// 封面
        public let thumbnail: String

        enum CodingKeys: String, CodingKey {
            case codecs = "Codecs"
            case duration = "Duration"
            case width = "Width"
            case height = "Height"
            case thumbnail = "Thumbnail"
        }
    }

    /// 审核切片asr文本信息
    public struct RcbAsr: TCOutputModel {
        /// 该字段用于返回音频文件识别出的对应文本内容，最大支持**前1000个字符**。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let text: String?

        /// 该字段用于返回被查询任务创建的时间，格式采用 ISO 8601标准。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let createdAt: String?

        enum CodingKeys: String, CodingKey {
            case text = "Text"
            case createdAt = "CreatedAt"
        }
    }

    /// 识别类标签结果信息
    public struct RecognitionResult: TCOutputModel {
        /// 可能的取值有：Teenager 、Gender
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let label: String?

        /// 识别标签列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let tags: [Tag]?

        enum CodingKeys: String, CodingKey {
            case label = "Label"
            case tags = "Tags"
        }
    }

    /// 数据存储信息
    public struct StorageInfo: TCInputModel {
        /// 类型 可选：
        /// URL 资源链接类型
        /// COS 腾讯云对象存储类型
        public let type: String?

        /// 资源链接
        public let url: String?

        /// 腾讯云存储桶信息
        public let bucketInfo: BucketInfo?

        public init(type: String? = nil, url: String? = nil, bucketInfo: BucketInfo? = nil) {
            self.type = type
            self.url = url
            self.bucketInfo = bucketInfo
        }

        enum CodingKeys: String, CodingKey {
            case type = "Type"
            case url = "Url"
            case bucketInfo = "BucketInfo"
        }
    }

    /// 音频切片识别标签
    public struct Tag: TCOutputModel {
        /// 根据Label字段确定具体名称：
        /// 当Label 为Teenager 时 Name可能取值有：Teenager
        /// 当Label 为Gender 时 Name可能取值有：Male 、Female
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let name: String?

        /// 置信分：0～100，数值越大表示置信度越高
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let score: Int64?

        /// 识别开始偏移时间，单位：毫秒
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let startTime: Float?

        /// 识别结束偏移时间，单位：毫秒
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let endTime: Float?

        enum CodingKeys: String, CodingKey {
            case name = "Name"
            case score = "Score"
            case startTime = "StartTime"
            case endTime = "EndTime"
        }
    }

    /// 任务数据
    public struct TaskData: TCOutputModel {
        /// 任务ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let taskId: String?

        /// 输入的数据ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let dataId: String?

        /// 业务类型
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let bizType: String?

        /// 任务名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let name: String?

        /// 状态，可选：PENDING，RUNNING，ERROR，FINISH，CANCELLED
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let status: String?

        /// 任务类型
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let type: String?

        /// 处理建议
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let suggestion: String?

        /// 标签
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let labels: [TaskLabel]?

        /// 媒体信息
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let mediaInfo: MediaInfo?

        /// 输入信息
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let inputInfo: InputInfo?

        /// 创建时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let createdAt: String?

        /// 更新时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let updatedAt: String?

        enum CodingKeys: String, CodingKey {
            case taskId = "TaskId"
            case dataId = "DataId"
            case bizType = "BizType"
            case name = "Name"
            case status = "Status"
            case type = "Type"
            case suggestion = "Suggestion"
            case labels = "Labels"
            case mediaInfo = "MediaInfo"
            case inputInfo = "InputInfo"
            case createdAt = "CreatedAt"
            case updatedAt = "UpdatedAt"
        }
    }

    /// Cos TaskFilter
    public struct TaskFilter: TCInputModel {
        /// 任务业务类型
        public let bizType: String?

        /// 任务类型，可选：VIDEO，AUDIO， LIVE_VIDEO, LIVE_AUDIO
        public let type: String?

        /// 建议，可选：Pass, Review,Block
        public let suggestion: String?

        /// 状态，可选：PENDING，RUNNING，ERROR，FINISH，CANCELLED
        public let taskStatus: String?

        public init(bizType: String? = nil, type: String? = nil, suggestion: String? = nil, taskStatus: String? = nil) {
            self.bizType = bizType
            self.type = type
            self.suggestion = suggestion
            self.taskStatus = taskStatus
        }

        enum CodingKeys: String, CodingKey {
            case bizType = "BizType"
            case type = "Type"
            case suggestion = "Suggestion"
            case taskStatus = "TaskStatus"
        }
    }

    /// 音视频任务结构
    public struct TaskInput: TCInputModel {
        /// 数据ID
        public let dataId: String?

        /// 任务名
        public let name: String?

        /// 任务输入
        public let input: StorageInfo?

        public init(dataId: String? = nil, name: String? = nil, input: StorageInfo? = nil) {
            self.dataId = dataId
            self.name = name
            self.input = input
        }

        enum CodingKeys: String, CodingKey {
            case dataId = "DataId"
            case name = "Name"
            case input = "Input"
        }
    }

    /// 任务输出标签
    public struct TaskLabel: TCOutputModel {
        /// 命中的标签
        /// Porn 色情
        /// Sexy 性感
        /// Polity 政治
        /// Illegal 违法
        /// Abuse 谩骂
        /// Terror 暴恐
        /// Ad 广告
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let label: String?

        /// 审核建议，可选值：
        /// Pass 通过，
        /// Review 建议人审，
        /// Block 确认违规
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let suggestion: String?

        /// 得分，分数是 0 ～ 100
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let score: Int64?

        enum CodingKeys: String, CodingKey {
            case label = "Label"
            case suggestion = "Suggestion"
            case score = "Score"
        }
    }

    /// 创建任务时的返回结果
    public struct TaskResult: TCOutputModel {
        /// 请求时传入的DataId
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let dataId: String?

        /// TaskId，任务ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let taskId: String?

        /// 错误码。如果code为OK，则表示创建成功，其他则参考公共错误码
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let code: String?

        /// 如果错误，该字段表示错误详情
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let message: String?

        enum CodingKeys: String, CodingKey {
            case dataId = "DataId"
            case taskId = "TaskId"
            case code = "Code"
            case message = "Message"
        }
    }
}
