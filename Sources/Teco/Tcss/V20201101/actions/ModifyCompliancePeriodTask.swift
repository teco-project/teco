//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Tcss {
    /// 安全合规编辑定时任务
    ///
    /// 修改定时任务的设置，包括检测周期、开启/禁用合规基准。
    @inlinable
    public func modifyCompliancePeriodTask(_ input: ModifyCompliancePeriodTaskRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < ModifyCompliancePeriodTaskResponse > {
        self.client.execute(action: "ModifyCompliancePeriodTask", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 安全合规编辑定时任务
    ///
    /// 修改定时任务的设置，包括检测周期、开启/禁用合规基准。
    @inlinable
    public func modifyCompliancePeriodTask(_ input: ModifyCompliancePeriodTaskRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyCompliancePeriodTaskResponse {
        try await self.client.execute(action: "ModifyCompliancePeriodTask", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// ModifyCompliancePeriodTask请求参数结构体
    public struct ModifyCompliancePeriodTaskRequest: TCRequestModel {
        /// 要修改的定时任务的ID，由DescribeCompliancePeriodTaskList接口返回。
        public let periodTaskId: UInt64
        
        /// 定时任务的周期规则。不填时，不修改。
        public let periodRule: CompliancePeriodTaskRule
        
        /// 设置合规标准。不填时，不修改。
        public let standardSettings: [ComplianceBenchmarkStandardEnable]?
        
        public init (periodTaskId: UInt64, periodRule: CompliancePeriodTaskRule, standardSettings: [ComplianceBenchmarkStandardEnable]?) {
            self.periodTaskId = periodTaskId
            self.periodRule = periodRule
            self.standardSettings = standardSettings
        }
        
        enum CodingKeys: String, CodingKey {
            case periodTaskId = "PeriodTaskId"
            case periodRule = "PeriodRule"
            case standardSettings = "StandardSettings"
        }
    }
    
    /// ModifyCompliancePeriodTask返回参数结构体
    public struct ModifyCompliancePeriodTaskResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }
}