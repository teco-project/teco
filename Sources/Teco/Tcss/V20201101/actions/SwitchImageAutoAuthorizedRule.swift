//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Tcss {
    /// 编辑本地镜像自动授权开关
    ///
    /// 编辑本地镜像自动授权开关
    @inlinable
    public func switchImageAutoAuthorizedRule(_ input: SwitchImageAutoAuthorizedRuleRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < SwitchImageAutoAuthorizedRuleResponse > {
        self.client.execute(action: "SwitchImageAutoAuthorizedRule", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 编辑本地镜像自动授权开关
    ///
    /// 编辑本地镜像自动授权开关
    @inlinable
    public func switchImageAutoAuthorizedRule(_ input: SwitchImageAutoAuthorizedRuleRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> SwitchImageAutoAuthorizedRuleResponse {
        try await self.client.execute(action: "SwitchImageAutoAuthorizedRule", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// SwitchImageAutoAuthorizedRule请求参数结构体
    public struct SwitchImageAutoAuthorizedRuleRequest: TCRequestModel {
        /// 规则是否生效，0:不生效，1:已生效
        public let isEnabled: Int64
        
        /// 规则id
        public let ruleId: Int64
        
        public init (isEnabled: Int64, ruleId: Int64) {
            self.isEnabled = isEnabled
            self.ruleId = ruleId
        }
        
        enum CodingKeys: String, CodingKey {
            case isEnabled = "IsEnabled"
            case ruleId = "RuleId"
        }
    }
    
    /// SwitchImageAutoAuthorizedRule返回参数结构体
    public struct SwitchImageAutoAuthorizedRuleResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }
}