//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Tcss {
    /// 停止镜像扫描
    ///
    /// 容器安全停止镜像扫描
    @inlinable
    public func modifyAssetImageScanStop(_ input: ModifyAssetImageScanStopRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < ModifyAssetImageScanStopResponse > {
        self.client.execute(action: "ModifyAssetImageScanStop", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 停止镜像扫描
    ///
    /// 容器安全停止镜像扫描
    @inlinable
    public func modifyAssetImageScanStop(_ input: ModifyAssetImageScanStopRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyAssetImageScanStopResponse {
        try await self.client.execute(action: "ModifyAssetImageScanStop", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// ModifyAssetImageScanStop请求参数结构体
    public struct ModifyAssetImageScanStopRequest: TCRequestModel {
        /// 任务id；任务id，镜像id和根据过滤条件筛选三选一。
        public let taskID: String?
        
        /// 镜像id；任务id，镜像id和根据过滤条件筛选三选一。
        public let images: [String]?
        
        /// 根据过滤条件筛选出镜像；任务id，镜像id和根据过滤条件筛选三选一。
        public let filters: [AssetFilters]?
        
        /// 根据过滤条件筛选出镜像，再排除个别镜像
        public let excludeImageIds: String?
        
        public init (taskID: String?, images: [String]?, filters: [AssetFilters]?, excludeImageIds: String?) {
            self.taskID = taskID
            self.images = images
            self.filters = filters
            self.excludeImageIds = excludeImageIds
        }
        
        enum CodingKeys: String, CodingKey {
            case taskID = "TaskID"
            case images = "Images"
            case filters = "Filters"
            case excludeImageIds = "ExcludeImageIds"
        }
    }
    
    /// ModifyAssetImageScanStop返回参数结构体
    public struct ModifyAssetImageScanStopResponse: TCResponseModel {
        /// 停止状态
        public let status: String
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case status = "Status"
            case requestId = "RequestId"
        }
    }
}