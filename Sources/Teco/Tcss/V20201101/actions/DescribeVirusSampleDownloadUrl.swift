//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Tcss {
    /// 查询木马样本下载url
    ///
    /// 查询木马样本下载url
    @inlinable
    public func describeVirusSampleDownloadUrl(_ input: DescribeVirusSampleDownloadUrlRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeVirusSampleDownloadUrlResponse > {
        self.client.execute(action: "DescribeVirusSampleDownloadUrl", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 查询木马样本下载url
    ///
    /// 查询木马样本下载url
    @inlinable
    public func describeVirusSampleDownloadUrl(_ input: DescribeVirusSampleDownloadUrlRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeVirusSampleDownloadUrlResponse {
        try await self.client.execute(action: "DescribeVirusSampleDownloadUrl", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribeVirusSampleDownloadUrl请求参数结构体
    public struct DescribeVirusSampleDownloadUrlRequest: TCRequestModel {
        /// 木马id
        public let id: String
        
        public init (id: String) {
            self.id = id
        }
        
        enum CodingKeys: String, CodingKey {
            case id = "ID"
        }
    }
    
    /// DescribeVirusSampleDownloadUrl返回参数结构体
    public struct DescribeVirusSampleDownloadUrlResponse: TCResponseModel {
        /// 样本下载地址
        public let fileUrl: String
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case fileUrl = "FileUrl"
            case requestId = "RequestId"
        }
    }
}