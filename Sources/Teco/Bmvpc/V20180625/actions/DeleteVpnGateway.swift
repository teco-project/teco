//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Bmvpc {
    /// 删除VPN网关
    ///
    /// 本接口（DeleteVpnGateway）用于删除VPN网关。
    @inlinable
    public func deleteVpnGateway(_ input: DeleteVpnGatewayRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DeleteVpnGatewayResponse > {
        self.client.execute(action: "DeleteVpnGateway", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 删除VPN网关
    ///
    /// 本接口（DeleteVpnGateway）用于删除VPN网关。
    @inlinable
    public func deleteVpnGateway(_ input: DeleteVpnGatewayRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DeleteVpnGatewayResponse {
        try await self.client.execute(action: "DeleteVpnGateway", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DeleteVpnGateway请求参数结构体
    public struct DeleteVpnGatewayRequest: TCRequestModel {
        /// VPN网关实例ID。
        public let vpnGatewayId: String
        
        public init (vpnGatewayId: String) {
            self.vpnGatewayId = vpnGatewayId
        }
        
        enum CodingKeys: String, CodingKey {
            case vpnGatewayId = "VpnGatewayId"
        }
    }
    
    /// DeleteVpnGateway返回参数结构体
    public struct DeleteVpnGatewayResponse: TCResponseModel {
        /// 任务ID
        public let taskId: UInt64
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case taskId = "TaskId"
            case requestId = "RequestId"
        }
    }
}