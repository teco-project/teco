//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

@_exported import struct Foundation.Date

extension Msp {
    /// 迁移目的信息
    public struct DstInfo: TCInputModel, TCOutputModel {
        /// 迁移目的地域
        public let region: String?
        
        /// 迁移目的Ip
        public let ip: String?
        
        /// 迁移目的端口
        public let port: String?
        
        /// 迁移目的实例Id
        public let instanceId: String?
        
        public init (region: String?, ip: String?, port: String?, instanceId: String?) {
            self.region = region
            self.ip = ip
            self.port = port
            self.instanceId = instanceId
        }
        
        enum CodingKeys: String, CodingKey {
            case region = "Region"
            case ip = "Ip"
            case port = "Port"
            case instanceId = "InstanceId"
        }
    }
    
    /// 列表类型
    public struct Project: TCOutputModel {
        /// 项目ID
        public let projectId: UInt64
        
        /// 项目名称
        public let projectName: String
        
        enum CodingKeys: String, CodingKey {
            case projectId = "ProjectId"
            case projectName = "ProjectName"
        }
    }
    
    /// 迁移源信息
    public struct SrcInfo: TCInputModel, TCOutputModel {
        /// 迁移源地域
        public let region: String?
        
        /// 迁移源Ip
        public let ip: String?
        
        /// 迁移源端口
        public let port: String?
        
        /// 迁移源实例Id
        public let instanceId: String?
        
        public init (region: String?, ip: String?, port: String?, instanceId: String?) {
            self.region = region
            self.ip = ip
            self.port = port
            self.instanceId = instanceId
        }
        
        enum CodingKeys: String, CodingKey {
            case region = "Region"
            case ip = "Ip"
            case port = "Port"
            case instanceId = "InstanceId"
        }
    }
    
    /// 迁移任务类别
    public struct Task: TCOutputModel {
        /// 任务Id
        public let taskId: String
        
        /// 任务名称
        public let taskName: String
        
        /// 迁移类型
        public let migrationType: String
        
        /// 迁移状态
        public let status: String
        
        /// 项目Id
        public let projectId: UInt64
        
        /// 项目名称
        public let projectName: String
        
        /// 迁移源信息
        public let srcInfo: SrcInfo
        
        /// 迁移时间信息
        public let migrationTimeLine: TimeObj
        
        /// 状态更新时间
        // FIXME: Codable support not implemented for datetime yet.
        public let updated: Date
        
        /// 迁移目的信息
        public let dstInfo: DstInfo
        
        enum CodingKeys: String, CodingKey {
            case taskId = "TaskId"
            case taskName = "TaskName"
            case migrationType = "MigrationType"
            case status = "Status"
            case projectId = "ProjectId"
            case projectName = "ProjectName"
            case srcInfo = "SrcInfo"
            case migrationTimeLine = "MigrationTimeLine"
            case updated = "Updated"
            case dstInfo = "DstInfo"
        }
    }
    
    /// 迁移详情列表
    public struct TaskStatus: TCOutputModel {
        /// 迁移状态
        public let status: String
        
        /// 迁移进度
        public let progress: String
        
        /// 迁移日期
        // FIXME: Codable support not implemented for datetime yet.
        public let updateTime: Date
        
        enum CodingKeys: String, CodingKey {
            case status = "Status"
            case progress = "Progress"
            case updateTime = "UpdateTime"
        }
    }
    
    /// 时间对象
    public struct TimeObj: TCOutputModel {
        /// 创建时间
        // FIXME: Codable support not implemented for datetime yet.
        public let createTime: Date
        
        /// 结束时间
        // FIXME: Codable support not implemented for datetime yet.
        public let endTime: Date
        
        enum CodingKeys: String, CodingKey {
            case createTime = "CreateTime"
            case endTime = "EndTime"
        }
    }
}
