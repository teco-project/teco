//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

@_exported import struct Foundation.Date

extension Tbm {
    /// 获取品牌用户好评列表
    ///
    /// 通过分析用户在评价品牌时用词的正负面情绪评分，返回品牌热门好评观点列表。
    @inlinable
    public func describeBrandPosComments(_ input: DescribeBrandPosCommentsRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeBrandPosCommentsResponse > {
        self.client.execute(action: "DescribeBrandPosComments", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 获取品牌用户好评列表
    ///
    /// 通过分析用户在评价品牌时用词的正负面情绪评分，返回品牌热门好评观点列表。
    @inlinable
    public func describeBrandPosComments(_ input: DescribeBrandPosCommentsRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeBrandPosCommentsResponse {
        try await self.client.execute(action: "DescribeBrandPosComments", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribeBrandPosComments请求参数结构体
    public struct DescribeBrandPosCommentsRequest: TCRequestModel {
        /// 品牌ID
        public let brandId: String
        
        /// 查询开始时间
        // FIXME: Codable support not implemented for date yet.
        public let startDate: Date
        
        /// 查询结束时间
        // FIXME: Codable support not implemented for date yet.
        public let endDate: Date
        
        /// 查询条数上限，默认20
        public let limit: UInt64?
        
        /// 查询偏移，从0开始
        public let offset: UInt64?
        
        public init (brandId: String, startDate: Date, endDate: Date, limit: UInt64?, offset: UInt64?) {
            self.brandId = brandId
            self.startDate = startDate
            self.endDate = endDate
            self.limit = limit
            self.offset = offset
        }
        
        enum CodingKeys: String, CodingKey {
            case brandId = "BrandId"
            case startDate = "StartDate"
            case endDate = "EndDate"
            case limit = "Limit"
            case offset = "Offset"
        }
    }
    
    /// DescribeBrandPosComments返回参数结构体
    public struct DescribeBrandPosCommentsResponse: TCResponseModel {
        /// 评论列表
        public let brandCommentSet: [CommentInfo]
        
        /// 总的好评个数
        public let totalComments: UInt64
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case brandCommentSet = "BrandCommentSet"
            case totalComments = "TotalComments"
            case requestId = "RequestId"
        }
    }
}