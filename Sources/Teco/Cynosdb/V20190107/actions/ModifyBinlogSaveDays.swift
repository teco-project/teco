//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Cynosdb {
    /// ModifyBinlogSaveDays请求参数结构体
    public struct ModifyBinlogSaveDaysRequest: TCRequest {
        /// 集群ID
        public let clusterId: String

        /// Binlog保留天数
        public let binlogSaveDays: Int64

        public init(clusterId: String, binlogSaveDays: Int64) {
            self.clusterId = clusterId
            self.binlogSaveDays = binlogSaveDays
        }

        enum CodingKeys: String, CodingKey {
            case clusterId = "ClusterId"
            case binlogSaveDays = "BinlogSaveDays"
        }
    }

    /// ModifyBinlogSaveDays返回参数结构体
    public struct ModifyBinlogSaveDaysResponse: TCResponse {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }

    /// 修改Binlog保留天数
    ///
    /// 此接口（ModifyBinlogSaveDays）用于修改集群Binlog保留天数。
    @inlinable @discardableResult
    public func modifyBinlogSaveDays(_ input: ModifyBinlogSaveDaysRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<ModifyBinlogSaveDaysResponse> {
        self.client.execute(action: "ModifyBinlogSaveDays", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 修改Binlog保留天数
    ///
    /// 此接口（ModifyBinlogSaveDays）用于修改集群Binlog保留天数。
    @inlinable @discardableResult
    public func modifyBinlogSaveDays(_ input: ModifyBinlogSaveDaysRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyBinlogSaveDaysResponse {
        try await self.client.execute(action: "ModifyBinlogSaveDays", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 修改Binlog保留天数
    ///
    /// 此接口（ModifyBinlogSaveDays）用于修改集群Binlog保留天数。
    @inlinable @discardableResult
    public func modifyBinlogSaveDays(clusterId: String, binlogSaveDays: Int64, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<ModifyBinlogSaveDaysResponse> {
        self.modifyBinlogSaveDays(.init(clusterId: clusterId, binlogSaveDays: binlogSaveDays), region: region, logger: logger, on: eventLoop)
    }

    /// 修改Binlog保留天数
    ///
    /// 此接口（ModifyBinlogSaveDays）用于修改集群Binlog保留天数。
    @inlinable @discardableResult
    public func modifyBinlogSaveDays(clusterId: String, binlogSaveDays: Int64, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyBinlogSaveDaysResponse {
        try await self.modifyBinlogSaveDays(.init(clusterId: clusterId, binlogSaveDays: binlogSaveDays), region: region, logger: logger, on: eventLoop)
    }
}
