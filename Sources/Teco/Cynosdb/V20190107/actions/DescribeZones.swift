//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Cynosdb {
    /// DescribeZones请求参数结构体
    public struct DescribeZonesRequest: TCRequestModel {
        /// 是否包含虚拟区
        public let includeVirtualZones: Bool?

        /// 是否展示地域下所有可用区，并显示用户每个可用区权限
        public let showPermission: Bool?

        public init(includeVirtualZones: Bool? = nil, showPermission: Bool? = nil) {
            self.includeVirtualZones = includeVirtualZones
            self.showPermission = showPermission
        }

        enum CodingKeys: String, CodingKey {
            case includeVirtualZones = "IncludeVirtualZones"
            case showPermission = "ShowPermission"
        }
    }

    /// DescribeZones返回参数结构体
    public struct DescribeZonesResponse: TCResponseModel {
        /// 地域信息
        public let regionSet: [SaleRegion]

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case regionSet = "RegionSet"
            case requestId = "RequestId"
        }
    }

    /// 查询可售卖地域可用区信息。
    ///
    /// 本接口(DescribeZones)用于查询可售卖地域可用区信息。
    @inlinable
    public func describeZones(_ input: DescribeZonesRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeZonesResponse> {
        self.client.execute(action: "DescribeZones", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 查询可售卖地域可用区信息。
    ///
    /// 本接口(DescribeZones)用于查询可售卖地域可用区信息。
    @inlinable
    public func describeZones(_ input: DescribeZonesRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeZonesResponse {
        try await self.client.execute(action: "DescribeZones", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 查询可售卖地域可用区信息。
    ///
    /// 本接口(DescribeZones)用于查询可售卖地域可用区信息。
    @inlinable
    public func describeZones(includeVirtualZones: Bool? = nil, showPermission: Bool? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeZonesResponse> {
        self.describeZones(.init(includeVirtualZones: includeVirtualZones, showPermission: showPermission), region: region, logger: logger, on: eventLoop)
    }

    /// 查询可售卖地域可用区信息。
    ///
    /// 本接口(DescribeZones)用于查询可售卖地域可用区信息。
    @inlinable
    public func describeZones(includeVirtualZones: Bool? = nil, showPermission: Bool? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeZonesResponse {
        try await self.describeZones(.init(includeVirtualZones: includeVirtualZones, showPermission: showPermission), region: region, logger: logger, on: eventLoop)
    }
}
