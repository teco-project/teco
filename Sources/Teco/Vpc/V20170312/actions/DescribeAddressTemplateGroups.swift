//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Vpc {
    /// 查询IP地址模板集合
    ///
    /// 本接口（DescribeAddressTemplateGroups）用于查询IP地址模板集合
    @inlinable
    public func describeAddressTemplateGroups(_ input: DescribeAddressTemplateGroupsRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeAddressTemplateGroupsResponse > {
        self.client.execute(action: "DescribeAddressTemplateGroups", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 查询IP地址模板集合
    ///
    /// 本接口（DescribeAddressTemplateGroups）用于查询IP地址模板集合
    @inlinable
    public func describeAddressTemplateGroups(_ input: DescribeAddressTemplateGroupsRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeAddressTemplateGroupsResponse {
        try await self.client.execute(action: "DescribeAddressTemplateGroups", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribeAddressTemplateGroups请求参数结构体
    public struct DescribeAddressTemplateGroupsRequest: TCRequestModel {
        /// 过滤条件。
        /// <li>address-template-group-name - String - （过滤条件）IP地址模板集合名称。</li>
        /// <li>address-template-group-id - String - （过滤条件）IP地址模板实集合例ID，例如：ipmg-mdunqeb6。</li>
        public let filters: [Filter]?
        
        /// 偏移量，默认为0。
        public let offset: String?
        
        /// 返回数量，默认为20，最大值为100。
        public let limit: String?
        
        public init (filters: [Filter]?, offset: String?, limit: String?) {
            self.filters = filters
            self.offset = offset
            self.limit = limit
        }
        
        enum CodingKeys: String, CodingKey {
            case filters = "Filters"
            case offset = "Offset"
            case limit = "Limit"
        }
    }
    
    /// DescribeAddressTemplateGroups返回参数结构体
    public struct DescribeAddressTemplateGroupsResponse: TCResponseModel {
        /// 符合条件的实例数量。
        public let totalCount: UInt64
        
        /// IP地址模板。
        public let addressTemplateGroupSet: [AddressTemplateGroup]
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case totalCount = "TotalCount"
            case addressTemplateGroupSet = "AddressTemplateGroupSet"
            case requestId = "RequestId"
        }
    }
}
