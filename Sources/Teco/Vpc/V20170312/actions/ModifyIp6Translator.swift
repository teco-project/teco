//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Vpc {
    /// 修改IP6转换实例属性
    ///
    /// 该接口用于修改IP6转换实例属性，当前仅支持修改实例名称。
    @inlinable
    public func modifyIp6Translator(_ input: ModifyIp6TranslatorRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < ModifyIp6TranslatorResponse > {
        self.client.execute(action: "ModifyIp6Translator", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 修改IP6转换实例属性
    ///
    /// 该接口用于修改IP6转换实例属性，当前仅支持修改实例名称。
    @inlinable
    public func modifyIp6Translator(_ input: ModifyIp6TranslatorRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyIp6TranslatorResponse {
        try await self.client.execute(action: "ModifyIp6Translator", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// ModifyIp6Translator请求参数结构体
    public struct ModifyIp6TranslatorRequest: TCRequestModel {
        /// IPV6转换实例唯一ID，形如ip6-xxxxxxxxx
        public let ip6TranslatorId: String
        
        /// IPV6转换实例修改名称
        public let ip6TranslatorName: String?
        
        public init (ip6TranslatorId: String, ip6TranslatorName: String?) {
            self.ip6TranslatorId = ip6TranslatorId
            self.ip6TranslatorName = ip6TranslatorName
        }
        
        enum CodingKeys: String, CodingKey {
            case ip6TranslatorId = "Ip6TranslatorId"
            case ip6TranslatorName = "Ip6TranslatorName"
        }
    }
    
    /// ModifyIp6Translator返回参数结构体
    public struct ModifyIp6TranslatorResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }
}
