//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Vpc {
    /// ModifyAddressTemplateAttribute请求参数结构体
    public struct ModifyAddressTemplateAttributeRequest: TCRequestModel {
        /// IP地址模板实例ID，例如：ipm-mdunqeb6。
        public let addressTemplateId: String

        /// IP地址模板名称。
        public let addressTemplateName: String?

        /// 地址信息，支持 IP、CIDR、IP 范围。
        public let addresses: [String]?

        /// 支持添加备注的地址信息，支持 IP、CIDR、IP 范围。
        public let addressesExtra: [AddressInfo]?

        public init(addressTemplateId: String, addressTemplateName: String? = nil, addresses: [String]? = nil, addressesExtra: [AddressInfo]? = nil) {
            self.addressTemplateId = addressTemplateId
            self.addressTemplateName = addressTemplateName
            self.addresses = addresses
            self.addressesExtra = addressesExtra
        }

        enum CodingKeys: String, CodingKey {
            case addressTemplateId = "AddressTemplateId"
            case addressTemplateName = "AddressTemplateName"
            case addresses = "Addresses"
            case addressesExtra = "AddressesExtra"
        }
    }

    /// ModifyAddressTemplateAttribute返回参数结构体
    public struct ModifyAddressTemplateAttributeResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }

    /// 修改IP地址模板
    ///
    /// 本接口（ModifyAddressTemplateAttribute）用于修改IP地址模板
    @inlinable @discardableResult
    public func modifyAddressTemplateAttribute(_ input: ModifyAddressTemplateAttributeRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<ModifyAddressTemplateAttributeResponse> {
        self.client.execute(action: "ModifyAddressTemplateAttribute", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 修改IP地址模板
    ///
    /// 本接口（ModifyAddressTemplateAttribute）用于修改IP地址模板
    @inlinable @discardableResult
    public func modifyAddressTemplateAttribute(_ input: ModifyAddressTemplateAttributeRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyAddressTemplateAttributeResponse {
        try await self.client.execute(action: "ModifyAddressTemplateAttribute", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 修改IP地址模板
    ///
    /// 本接口（ModifyAddressTemplateAttribute）用于修改IP地址模板
    @inlinable @discardableResult
    public func modifyAddressTemplateAttribute(addressTemplateId: String, addressTemplateName: String? = nil, addresses: [String]? = nil, addressesExtra: [AddressInfo]? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<ModifyAddressTemplateAttributeResponse> {
        self.modifyAddressTemplateAttribute(.init(addressTemplateId: addressTemplateId, addressTemplateName: addressTemplateName, addresses: addresses, addressesExtra: addressesExtra), region: region, logger: logger, on: eventLoop)
    }

    /// 修改IP地址模板
    ///
    /// 本接口（ModifyAddressTemplateAttribute）用于修改IP地址模板
    @inlinable @discardableResult
    public func modifyAddressTemplateAttribute(addressTemplateId: String, addressTemplateName: String? = nil, addresses: [String]? = nil, addressesExtra: [AddressInfo]? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyAddressTemplateAttributeResponse {
        try await self.modifyAddressTemplateAttribute(.init(addressTemplateId: addressTemplateId, addressTemplateName: addressTemplateName, addresses: addresses, addressesExtra: addressesExtra), region: region, logger: logger, on: eventLoop)
    }
}
