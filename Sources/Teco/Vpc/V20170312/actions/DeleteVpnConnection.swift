//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Vpc {
    /// 删除VPN通道
    ///
    /// 本接口(DeleteVpnConnection)用于删除VPN通道。
    @inlinable
    public func deleteVpnConnection(_ input: DeleteVpnConnectionRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DeleteVpnConnectionResponse > {
        self.client.execute(action: "DeleteVpnConnection", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 删除VPN通道
    ///
    /// 本接口(DeleteVpnConnection)用于删除VPN通道。
    @inlinable
    public func deleteVpnConnection(_ input: DeleteVpnConnectionRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DeleteVpnConnectionResponse {
        try await self.client.execute(action: "DeleteVpnConnection", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DeleteVpnConnection请求参数结构体
    public struct DeleteVpnConnectionRequest: TCRequestModel {
        /// VPN网关实例ID。
        public let vpnGatewayId: String
        
        /// VPN通道实例ID。形如：vpnx-f49l6u0z。
        public let vpnConnectionId: String
        
        public init (vpnGatewayId: String, vpnConnectionId: String) {
            self.vpnGatewayId = vpnGatewayId
            self.vpnConnectionId = vpnConnectionId
        }
        
        enum CodingKeys: String, CodingKey {
            case vpnGatewayId = "VpnGatewayId"
            case vpnConnectionId = "VpnConnectionId"
        }
    }
    
    /// DeleteVpnConnection返回参数结构体
    public struct DeleteVpnConnectionResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }
}