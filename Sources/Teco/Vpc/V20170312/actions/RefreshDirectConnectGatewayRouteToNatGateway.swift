//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Vpc {
    /// 刷新专线直连NAT路由
    ///
    /// 刷新专线直连nat路由，更新nat到专线的路由表
    @inlinable
    public func refreshDirectConnectGatewayRouteToNatGateway(_ input: RefreshDirectConnectGatewayRouteToNatGatewayRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < RefreshDirectConnectGatewayRouteToNatGatewayResponse > {
        self.client.execute(action: "RefreshDirectConnectGatewayRouteToNatGateway", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 刷新专线直连NAT路由
    ///
    /// 刷新专线直连nat路由，更新nat到专线的路由表
    @inlinable
    public func refreshDirectConnectGatewayRouteToNatGateway(_ input: RefreshDirectConnectGatewayRouteToNatGatewayRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> RefreshDirectConnectGatewayRouteToNatGatewayResponse {
        try await self.client.execute(action: "RefreshDirectConnectGatewayRouteToNatGateway", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// RefreshDirectConnectGatewayRouteToNatGateway请求参数结构体
    public struct RefreshDirectConnectGatewayRouteToNatGatewayRequest: TCRequestModel {
        /// vpc的ID
        public let vpcId: String
        
        /// NAT网关ID
        public let natGatewayId: String
        
        /// 是否是预刷新；True:是， False:否
        public let dryRun: Bool
        
        public init (vpcId: String, natGatewayId: String, dryRun: Bool) {
            self.vpcId = vpcId
            self.natGatewayId = natGatewayId
            self.dryRun = dryRun
        }
        
        enum CodingKeys: String, CodingKey {
            case vpcId = "VpcId"
            case natGatewayId = "NatGatewayId"
            case dryRun = "DryRun"
        }
    }
    
    /// RefreshDirectConnectGatewayRouteToNatGateway返回参数结构体
    public struct RefreshDirectConnectGatewayRouteToNatGatewayResponse: TCResponseModel {
        /// IDC子网信息
        public let directConnectSubnetSet: [DirectConnectSubnet]
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case directConnectSubnetSet = "DirectConnectSubnetSet"
            case requestId = "RequestId"
        }
    }
}