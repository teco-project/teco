//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Vpc {
    /// DescribeSubnetResourceDashboard请求参数结构体
    public struct DescribeSubnetResourceDashboardRequest: TCRequest {
        /// Subnet实例ID，例如：subnet-f1xjkw1b。
        public let subnetIds: [String]

        public init(subnetIds: [String]) {
            self.subnetIds = subnetIds
        }

        enum CodingKeys: String, CodingKey {
            case subnetIds = "SubnetIds"
        }
    }

    /// DescribeSubnetResourceDashboard返回参数结构体
    public struct DescribeSubnetResourceDashboardResponse: TCResponse {
        /// 资源统计结果。
        public let resourceStatisticsSet: [ResourceStatistics]

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case resourceStatisticsSet = "ResourceStatisticsSet"
            case requestId = "RequestId"
        }
    }

    /// 查看Subnet资源信息
    ///
    /// 本接口(DescribeSubnetResourceDashboard)用于查看Subnet资源信息。
    @inlinable
    public func describeSubnetResourceDashboard(_ input: DescribeSubnetResourceDashboardRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeSubnetResourceDashboardResponse> {
        self.client.execute(action: "DescribeSubnetResourceDashboard", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 查看Subnet资源信息
    ///
    /// 本接口(DescribeSubnetResourceDashboard)用于查看Subnet资源信息。
    @inlinable
    public func describeSubnetResourceDashboard(_ input: DescribeSubnetResourceDashboardRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeSubnetResourceDashboardResponse {
        try await self.client.execute(action: "DescribeSubnetResourceDashboard", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 查看Subnet资源信息
    ///
    /// 本接口(DescribeSubnetResourceDashboard)用于查看Subnet资源信息。
    @inlinable
    public func describeSubnetResourceDashboard(subnetIds: [String], region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeSubnetResourceDashboardResponse> {
        self.describeSubnetResourceDashboard(.init(subnetIds: subnetIds), region: region, logger: logger, on: eventLoop)
    }

    /// 查看Subnet资源信息
    ///
    /// 本接口(DescribeSubnetResourceDashboard)用于查看Subnet资源信息。
    @inlinable
    public func describeSubnetResourceDashboard(subnetIds: [String], region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeSubnetResourceDashboardResponse {
        try await self.describeSubnetResourceDashboard(.init(subnetIds: subnetIds), region: region, logger: logger, on: eventLoop)
    }
}
