//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Cls {
    /// 获取采集规则配置所绑定的机器组
    @inlinable
    public func describeConfigMachineGroups(_ input: DescribeConfigMachineGroupsRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeConfigMachineGroupsResponse > {
        self.client.execute(action: "DescribeConfigMachineGroups", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 获取采集规则配置所绑定的机器组
    @inlinable
    public func describeConfigMachineGroups(_ input: DescribeConfigMachineGroupsRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeConfigMachineGroupsResponse {
        try await self.client.execute(action: "DescribeConfigMachineGroups", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribeConfigMachineGroups请求参数结构体
    public struct DescribeConfigMachineGroupsRequest: TCRequestModel {
        /// 采集配置ID
        public let configId: String
        
        public init (configId: String) {
            self.configId = configId
        }
        
        enum CodingKeys: String, CodingKey {
            case configId = "ConfigId"
        }
    }
    
    /// DescribeConfigMachineGroups返回参数结构体
    public struct DescribeConfigMachineGroupsResponse: TCResponseModel {
        /// 采集规则配置绑定的机器组列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let machineGroups: [MachineGroupInfo]?
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case machineGroups = "MachineGroups"
            case requestId = "RequestId"
        }
    }
}
