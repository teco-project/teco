//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Dayu {
    /// 获取调度域名列表
    @inlinable
    public func describeSchedulingDomainList(_ input: DescribeSchedulingDomainListRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeSchedulingDomainListResponse > {
        self.client.execute(action: "DescribeSchedulingDomainList", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 获取调度域名列表
    @inlinable
    public func describeSchedulingDomainList(_ input: DescribeSchedulingDomainListRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeSchedulingDomainListResponse {
        try await self.client.execute(action: "DescribeSchedulingDomainList", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribeSchedulingDomainList请求参数结构体
    public struct DescribeSchedulingDomainListRequest: TCRequestModel {
        /// 一页条数，填0表示不分页
        public let limit: UInt64
        
        /// 页起始偏移，取值为(页码-1)*一页条数
        public let offset: UInt64
        
        /// 可选，筛选特定的域名
        public let domain: String?
        
        public init (limit: UInt64, offset: UInt64, domain: String?) {
            self.limit = limit
            self.offset = offset
            self.domain = domain
        }
        
        enum CodingKeys: String, CodingKey {
            case limit = "Limit"
            case offset = "Offset"
            case domain = "Domain"
        }
    }
    
    /// DescribeSchedulingDomainList返回参数结构体
    public struct DescribeSchedulingDomainListResponse: TCResponseModel {
        /// 调度域名总数
        public let total: UInt64
        
        /// 调度域名列表信息
        public let domainList: [SchedulingDomain]
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case total = "Total"
            case domainList = "DomainList"
            case requestId = "RequestId"
        }
    }
}
