//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Rum {
    /// 修改项目
    ///
    /// 修改 rum 项目信息
    @inlinable
    public func modifyProject(_ input: ModifyProjectRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < ModifyProjectResponse > {
        self.client.execute(action: "ModifyProject", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 修改项目
    ///
    /// 修改 rum 项目信息
    @inlinable
    public func modifyProject(_ input: ModifyProjectRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyProjectResponse {
        try await self.client.execute(action: "ModifyProject", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// ModifyProject请求参数结构体
    public struct ModifyProjectRequest: TCRequestModel {
        /// 项目 id
        public let id: UInt64
        
        /// 项目名(可选，不为空且最长为 200)
        public let name: String?
        
        /// 项目网页地址(可选，最长为 256)
        public let url: String?
        
        /// 项目仓库地址(可选，最长为 256)
        public let repo: String?
        
        /// 项目需要转移到的实例 id(可选)
        public let instanceID: String?
        
        /// 项目采样率(可选)
        public let rate: String?
        
        /// 是否开启聚类(可选)
        public let enableURLGroup: UInt64?
        
        /// 项目类型(可接受值为 "web", "mp", "android", "ios", "node", "hippy", "weex", "viola", "rn")
        public let type: String?
        
        /// 项目描述(可选，最长为 1000)
        public let desc: String?
        
        public init (id: UInt64, name: String?, url: String?, repo: String?, instanceID: String?, rate: String?, enableURLGroup: UInt64?, type: String?, desc: String?) {
            self.id = id
            self.name = name
            self.url = url
            self.repo = repo
            self.instanceID = instanceID
            self.rate = rate
            self.enableURLGroup = enableURLGroup
            self.type = type
            self.desc = desc
        }
        
        enum CodingKeys: String, CodingKey {
            case id = "ID"
            case name = "Name"
            case url = "URL"
            case repo = "Repo"
            case instanceID = "InstanceID"
            case rate = "Rate"
            case enableURLGroup = "EnableURLGroup"
            case type = "Type"
            case desc = "Desc"
        }
    }
    
    /// ModifyProject返回参数结构体
    public struct ModifyProjectResponse: TCResponseModel {
        /// 操作信息
        public let msg: String
        
        /// 项目id
        public let id: UInt64
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case msg = "Msg"
            case id = "ID"
            case requestId = "RequestId"
        }
    }
}