//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Nlp {
    /// RetrieveSimilarWords请求参数结构体
    public struct RetrieveSimilarWordsRequest: TCRequestModel {
        /// 输入的词语。（仅支持UTF-8格式，不超过10字符）
        public let text: String

        /// 召回的相似词个数，取值范围为1-20。
        public let number: Int64

        public init(text: String, number: Int64) {
            self.text = text
            self.number = number
        }

        enum CodingKeys: String, CodingKey {
            case text = "Text"
            case number = "Number"
        }
    }

    /// RetrieveSimilarWords返回参数结构体
    public struct RetrieveSimilarWordsResponse: TCResponseModel {
        /// 召回的相似词数组。
        public let wordList: [String]

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case wordList = "WordList"
            case requestId = "RequestId"
        }
    }

    /// 相似词召回
    ///
    /// 基于大数据和深度学习技术，可以快速地找到与给定词语高度相似的其他词语，有助于提高搜索和推荐的准确性。（目前仅支持中文）
    @inlinable
    public func retrieveSimilarWords(_ input: RetrieveSimilarWordsRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<RetrieveSimilarWordsResponse> {
        self.client.execute(action: "RetrieveSimilarWords", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 相似词召回
    ///
    /// 基于大数据和深度学习技术，可以快速地找到与给定词语高度相似的其他词语，有助于提高搜索和推荐的准确性。（目前仅支持中文）
    @inlinable
    public func retrieveSimilarWords(_ input: RetrieveSimilarWordsRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> RetrieveSimilarWordsResponse {
        try await self.client.execute(action: "RetrieveSimilarWords", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 相似词召回
    ///
    /// 基于大数据和深度学习技术，可以快速地找到与给定词语高度相似的其他词语，有助于提高搜索和推荐的准确性。（目前仅支持中文）
    @inlinable
    public func retrieveSimilarWords(text: String, number: Int64, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<RetrieveSimilarWordsResponse> {
        self.retrieveSimilarWords(.init(text: text, number: number), region: region, logger: logger, on: eventLoop)
    }

    /// 相似词召回
    ///
    /// 基于大数据和深度学习技术，可以快速地找到与给定词语高度相似的其他词语，有助于提高搜索和推荐的准确性。（目前仅支持中文）
    @inlinable
    public func retrieveSimilarWords(text: String, number: Int64, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> RetrieveSimilarWordsResponse {
        try await self.retrieveSimilarWords(.init(text: text, number: number), region: region, logger: logger, on: eventLoop)
    }
}
