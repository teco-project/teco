//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Ckafka {
    /// 创建主题IP白名单
    ///
    /// 创建主题ip白名单
    @inlinable
    public func createTopicIpWhiteList(_ input: CreateTopicIpWhiteListRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < CreateTopicIpWhiteListResponse > {
        self.client.execute(action: "CreateTopicIpWhiteList", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 创建主题IP白名单
    ///
    /// 创建主题ip白名单
    @inlinable
    public func createTopicIpWhiteList(_ input: CreateTopicIpWhiteListRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> CreateTopicIpWhiteListResponse {
        try await self.client.execute(action: "CreateTopicIpWhiteList", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// CreateTopicIpWhiteList请求参数结构体
    public struct CreateTopicIpWhiteListRequest: TCRequestModel {
        /// 实例Id
        public let instanceId: String
        
        /// 主题名称
        public let topicName: String
        
        /// ip白名单列表
        public let ipWhiteList: [String]
        
        public init (instanceId: String, topicName: String, ipWhiteList: [String]) {
            self.instanceId = instanceId
            self.topicName = topicName
            self.ipWhiteList = ipWhiteList
        }
        
        enum CodingKeys: String, CodingKey {
            case instanceId = "InstanceId"
            case topicName = "TopicName"
            case ipWhiteList = "IpWhiteList"
        }
    }
    
    /// CreateTopicIpWhiteList返回参数结构体
    public struct CreateTopicIpWhiteListResponse: TCResponseModel {
        /// 删除主题IP白名单结果
        public let result: JgwOperateResponse
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case result = "Result"
            case requestId = "RequestId"
        }
    }
}