//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Cloudhsm {
    /// 获取安全组详情
    ///
    /// 获取安全组详情
    @inlinable
    public func describeUsgRule(_ input: DescribeUsgRuleRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeUsgRuleResponse > {
        self.client.execute(action: "DescribeUsgRule", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 获取安全组详情
    ///
    /// 获取安全组详情
    @inlinable
    public func describeUsgRule(_ input: DescribeUsgRuleRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeUsgRuleResponse {
        try await self.client.execute(action: "DescribeUsgRule", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribeUsgRule请求参数结构体
    public struct DescribeUsgRuleRequest: TCRequestModel {
        /// 根据安全组Id获取安全组详情
        public let sgIds: [String]
        
        public init (sgIds: [String]) {
            self.sgIds = sgIds
        }
        
        enum CodingKeys: String, CodingKey {
            case sgIds = "SgIds"
        }
    }
    
    /// DescribeUsgRule返回参数结构体
    public struct DescribeUsgRuleResponse: TCResponseModel {
        /// 安全组详情
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let sgRules: [UsgRuleDetail]?
        
        /// 安全组详情数量
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let totalCount: Int64?
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case sgRules = "SgRules"
            case totalCount = "TotalCount"
            case requestId = "RequestId"
        }
    }
}