//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import TecoCore

extension TCSmhError {
    public struct UnauthorizedOperation: TCSmhErrorType {
        enum Code: String {
            case createMediaBucket = "UnauthorizedOperation.CreateMediaBucket"
            case passRole = "UnauthorizedOperation.PassRole"
            case serviceLinkedRole = "UnauthorizedOperation.ServiceLinkedRole"
            case smsCode = "UnauthorizedOperation.SmsCode"
            case smsCodeExceeded = "UnauthorizedOperation.SmsCodeExceeded"
        }

        private let error: Code

        public let context: TCErrorContext?

        public var errorCode: String {
            self.error.rawValue
        }

        /// Initializer used by ``TCClient`` to match an error of this type.
        public init?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }

        internal init(_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }

        /// 尚未开通 COS 数据处理（数据万象）服务。
        public static var createMediaBucket: UnauthorizedOperation {
            UnauthorizedOperation(.createMediaBucket)
        }

        /// 未授予 cam:PassRole 权限。
        public static var passRole: UnauthorizedOperation {
            UnauthorizedOperation(.passRole)
        }

        /// 未授予 SMH 服务相关角色。
        public static var serviceLinkedRole: UnauthorizedOperation {
            UnauthorizedOperation(.serviceLinkedRole)
        }

        /// 短信验证码错误或已过期。
        public static var smsCode: UnauthorizedOperation {
            UnauthorizedOperation(.smsCode)
        }

        /// 短信验证码验证次数超限，请重新发送短信验证码。
        public static var smsCodeExceeded: UnauthorizedOperation {
            UnauthorizedOperation(.smsCodeExceeded)
        }

        public func asSmhError() -> TCSmhError {
            let code: TCSmhError.Code
            switch self.error {
            case .createMediaBucket:
                code = .unauthorizedOperation_CreateMediaBucket
            case .passRole:
                code = .unauthorizedOperation_PassRole
            case .serviceLinkedRole:
                code = .unauthorizedOperation_ServiceLinkedRole
            case .smsCode:
                code = .unauthorizedOperation_SmsCode
            case .smsCodeExceeded:
                code = .unauthorizedOperation_SmsCodeExceeded
            }
            return TCSmhError(code, context: self.context)
        }
    }
}
