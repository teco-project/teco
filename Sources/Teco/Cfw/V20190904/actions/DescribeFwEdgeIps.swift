//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Cfw {
    /// DescribeFwEdgeIps请求参数结构体
    public struct DescribeFwEdgeIpsRequest: TCRequest {
        /// 过滤条件组合
        public let filters: [CommonFilter]?

        /// 每页条数
        public let limit: Int64?

        /// 偏移值
        public let offset: Int64?

        /// 检索的起始时间，可不传
        public let startTime: String?

        /// 检索的截止时间，可不传
        public let endTime: String?

        /// desc：降序；asc：升序。根据By字段的值进行排序，这里传参的话则By也必须有值
        public let order: String?

        /// 排序所用到的字段
        public let by: String?

        public init(filters: [CommonFilter]? = nil, limit: Int64? = nil, offset: Int64? = nil, startTime: String? = nil, endTime: String? = nil, order: String? = nil, by: String? = nil) {
            self.filters = filters
            self.limit = limit
            self.offset = offset
            self.startTime = startTime
            self.endTime = endTime
            self.order = order
            self.by = by
        }

        enum CodingKeys: String, CodingKey {
            case filters = "Filters"
            case limit = "Limit"
            case offset = "Offset"
            case startTime = "StartTime"
            case endTime = "EndTime"
            case order = "Order"
            case by = "By"
        }
    }

    /// DescribeFwEdgeIps返回参数结构体
    public struct DescribeFwEdgeIpsResponse: TCResponse {
        /// ip 开关列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let data: [EdgeIpInfo]?

        /// ip 开关列表个数
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let total: Int64?

        /// 地域列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let regionLst: [String]?

        /// 实例类型列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let instanceTypeLst: [String]?

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case data = "Data"
            case total = "Total"
            case regionLst = "RegionLst"
            case instanceTypeLst = "InstanceTypeLst"
            case requestId = "RequestId"
        }
    }

    /// 串行防火墙开关列表
    ///
    /// 串行防火墙IP开关列表
    @inlinable
    public func describeFwEdgeIps(_ input: DescribeFwEdgeIpsRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeFwEdgeIpsResponse> {
        self.client.execute(action: "DescribeFwEdgeIps", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 串行防火墙开关列表
    ///
    /// 串行防火墙IP开关列表
    @inlinable
    public func describeFwEdgeIps(_ input: DescribeFwEdgeIpsRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeFwEdgeIpsResponse {
        try await self.client.execute(action: "DescribeFwEdgeIps", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 串行防火墙开关列表
    ///
    /// 串行防火墙IP开关列表
    @inlinable
    public func describeFwEdgeIps(filters: [CommonFilter]? = nil, limit: Int64? = nil, offset: Int64? = nil, startTime: String? = nil, endTime: String? = nil, order: String? = nil, by: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeFwEdgeIpsResponse> {
        self.describeFwEdgeIps(.init(filters: filters, limit: limit, offset: offset, startTime: startTime, endTime: endTime, order: order, by: by), region: region, logger: logger, on: eventLoop)
    }

    /// 串行防火墙开关列表
    ///
    /// 串行防火墙IP开关列表
    @inlinable
    public func describeFwEdgeIps(filters: [CommonFilter]? = nil, limit: Int64? = nil, offset: Int64? = nil, startTime: String? = nil, endTime: String? = nil, order: String? = nil, by: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeFwEdgeIpsResponse {
        try await self.describeFwEdgeIps(.init(filters: filters, limit: limit, offset: offset, startTime: startTime, endTime: endTime, order: order, by: by), region: region, logger: logger, on: eventLoop)
    }
}
