//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

// Test PR teco-project/teco-code-generator#23.

import TecoCore

extension TCCbsError {
    public struct UnsupportedOperation: TCCbsErrorType {
        enum Code: String {
            case detachPod = "UnsupportedOperation.DetachPod"
            case diskEncrypt = "UnsupportedOperation.DiskEncrypt"
            case instanceNotStopped = "UnsupportedOperation.InstanceNotStopped"
            case snapHasShared = "UnsupportedOperation.SnapHasShared"
            case snapshotHasBindedImage = "UnsupportedOperation.SnapshotHasBindedImage"
            case snapshotNotSupportCopy = "UnsupportedOperation.SnapshotNotSupportCopy"
            case stateError = "UnsupportedOperation.StateError"
            case other = "UnsupportedOperation"
        }

        private let error: Code

        public let context: TCErrorContext?

        public var errorCode: String {
            self.error.rawValue
        }

        /// Initializer used by ``TCClient`` to match an error of this type.
        public init?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }

        internal init(_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }

        /// 暂不支持从EKS上卸载云硬盘。
        public static var detachPod: UnsupportedOperation {
            UnsupportedOperation(.detachPod)
        }

        /// 磁盘已加密。
        public static var diskEncrypt: UnsupportedOperation {
            UnsupportedOperation(.diskEncrypt)
        }

        /// 云盘挂载的实例未关机。
        public static var instanceNotStopped: UnsupportedOperation {
            UnsupportedOperation(.instanceNotStopped)
        }

        /// 该快照已经共享，请先解除共享。
        public static var snapHasShared: UnsupportedOperation {
            UnsupportedOperation(.snapHasShared)
        }

        /// 该快照创建了自定义快照，请先删除对应镜像。
        public static var snapshotHasBindedImage: UnsupportedOperation {
            UnsupportedOperation(.snapshotHasBindedImage)
        }

        /// 快照不支持跨地域复制。
        public static var snapshotNotSupportCopy: UnsupportedOperation {
            UnsupportedOperation(.snapshotNotSupportCopy)
        }

        /// 资源当前状态不支持该操作。
        public static var stateError: UnsupportedOperation {
            UnsupportedOperation(.stateError)
        }

        /// 操作不支持。
        public static var other: UnsupportedOperation {
            UnsupportedOperation(.other)
        }

        public func asCbsError() -> TCCbsError {
            let code: TCCbsError.Code
            switch self.error {
            case .detachPod:
                code = .unsupportedOperation_DetachPod
            case .diskEncrypt:
                code = .unsupportedOperation_DiskEncrypt
            case .instanceNotStopped:
                code = .unsupportedOperation_InstanceNotStopped
            case .snapHasShared:
                code = .unsupportedOperation_SnapHasShared
            case .snapshotHasBindedImage:
                code = .unsupportedOperation_SnapshotHasBindedImage
            case .snapshotNotSupportCopy:
                code = .unsupportedOperation_SnapshotNotSupportCopy
            case .stateError:
                code = .unsupportedOperation_StateError
            case .other:
                code = .unsupportedOperation
            }
            return TCCbsError(code, context: self.context)
        }
    }
}
