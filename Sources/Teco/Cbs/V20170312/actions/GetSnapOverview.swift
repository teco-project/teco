//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Cbs {
    /// GetSnapOverview请求参数结构体
    public struct GetSnapOverviewRequest: TCRequest {
        public init() {
        }
    }

    /// GetSnapOverview返回参数结构体
    public struct GetSnapOverviewResponse: TCResponse {
        /// 用户快照总大小
        public let totalSize: Float

        /// 用户快照总大小（用于计费）
        public let realTradeSize: Float

        /// 快照免费额度
        public let freeQuota: Float

        /// 快照总个数
        public let totalNums: Int64

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case totalSize = "TotalSize"
            case realTradeSize = "RealTradeSize"
            case freeQuota = "FreeQuota"
            case totalNums = "TotalNums"
            case requestId = "RequestId"
        }
    }

    /// 获取快照概览信息
    @inlinable
    public func getSnapOverview(_ input: GetSnapOverviewRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<GetSnapOverviewResponse> {
        self.client.execute(action: "GetSnapOverview", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 获取快照概览信息
    @inlinable
    public func getSnapOverview(_ input: GetSnapOverviewRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> GetSnapOverviewResponse {
        try await self.client.execute(action: "GetSnapOverview", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 获取快照概览信息
    @inlinable
    public func getSnapOverview(region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<GetSnapOverviewResponse> {
        self.getSnapOverview(.init(), region: region, logger: logger, on: eventLoop)
    }

    /// 获取快照概览信息
    @inlinable
    public func getSnapOverview(region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> GetSnapOverviewResponse {
        try await self.getSnapOverview(.init(), region: region, logger: logger, on: eventLoop)
    }
}
