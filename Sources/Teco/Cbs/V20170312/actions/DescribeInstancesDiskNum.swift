//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Cbs {
    /// DescribeInstancesDiskNum请求参数结构体
    public struct DescribeInstancesDiskNumRequest: TCRequestModel {
        /// 云服务器实例ID，通过[DescribeInstances](/document/product/213/15728)接口查询。
        public let instanceIds: [String]

        public init(instanceIds: [String]) {
            self.instanceIds = instanceIds
        }

        enum CodingKeys: String, CodingKey {
            case instanceIds = "InstanceIds"
        }
    }

    /// DescribeInstancesDiskNum返回参数结构体
    public struct DescribeInstancesDiskNumResponse: TCResponseModel {
        /// 各个云服务器已挂载和可挂载弹性云盘的数量。
        public let attachDetail: [AttachDetail]

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case attachDetail = "AttachDetail"
            case requestId = "RequestId"
        }
    }

    /// 查询实例关联的云硬盘数量
    ///
    /// 本接口（DescribeInstancesDiskNum）用于查询实例已挂载云硬盘数量。
    /// * 支持批量操作，当传入多个云服务器实例ID，返回结果会分别列出每个云服务器挂载的云硬盘数量。
    @inlinable
    public func describeInstancesDiskNum(_ input: DescribeInstancesDiskNumRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeInstancesDiskNumResponse> {
        self.client.execute(action: "DescribeInstancesDiskNum", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 查询实例关联的云硬盘数量
    ///
    /// 本接口（DescribeInstancesDiskNum）用于查询实例已挂载云硬盘数量。
    /// * 支持批量操作，当传入多个云服务器实例ID，返回结果会分别列出每个云服务器挂载的云硬盘数量。
    @inlinable
    public func describeInstancesDiskNum(_ input: DescribeInstancesDiskNumRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeInstancesDiskNumResponse {
        try await self.client.execute(action: "DescribeInstancesDiskNum", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 查询实例关联的云硬盘数量
    ///
    /// 本接口（DescribeInstancesDiskNum）用于查询实例已挂载云硬盘数量。
    /// * 支持批量操作，当传入多个云服务器实例ID，返回结果会分别列出每个云服务器挂载的云硬盘数量。
    @inlinable
    public func describeInstancesDiskNum(instanceIds: [String], region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeInstancesDiskNumResponse> {
        self.describeInstancesDiskNum(DescribeInstancesDiskNumRequest(instanceIds: instanceIds), region: region, logger: logger, on: eventLoop)
    }

    /// 查询实例关联的云硬盘数量
    ///
    /// 本接口（DescribeInstancesDiskNum）用于查询实例已挂载云硬盘数量。
    /// * 支持批量操作，当传入多个云服务器实例ID，返回结果会分别列出每个云服务器挂载的云硬盘数量。
    @inlinable
    public func describeInstancesDiskNum(instanceIds: [String], region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeInstancesDiskNumResponse {
        try await self.describeInstancesDiskNum(DescribeInstancesDiskNumRequest(instanceIds: instanceIds), region: region, logger: logger, on: eventLoop)
    }
}
