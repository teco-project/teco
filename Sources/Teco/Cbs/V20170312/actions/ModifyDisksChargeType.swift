//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Cbs {
    /// 修改弹性云盘计费模式
    ///
    /// 接口请求域名： cbs.tencentcloudapi.com 。
    /// 本接口 (ModifyDisksChargeType) 用于切换云盘的计费模式。
    /// 只支持从 POSTPAID_BY_HOUR 计费模式切换为PREPAID计费模式。
    /// 非弹性云盘不支持此接口，请通过修改实例计费模式接口将实例连同非弹性云盘一起转换。
    /// 默认接口请求频率限制：10次/秒。
    @inlinable
    public func modifyDisksChargeType(_ input: ModifyDisksChargeTypeRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < ModifyDisksChargeTypeResponse > {
        self.client.execute(action: "ModifyDisksChargeType", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 修改弹性云盘计费模式
    ///
    /// 接口请求域名： cbs.tencentcloudapi.com 。
    /// 本接口 (ModifyDisksChargeType) 用于切换云盘的计费模式。
    /// 只支持从 POSTPAID_BY_HOUR 计费模式切换为PREPAID计费模式。
    /// 非弹性云盘不支持此接口，请通过修改实例计费模式接口将实例连同非弹性云盘一起转换。
    /// 默认接口请求频率限制：10次/秒。
    @inlinable
    public func modifyDisksChargeType(_ input: ModifyDisksChargeTypeRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyDisksChargeTypeResponse {
        try await self.client.execute(action: "ModifyDisksChargeType", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// ModifyDisksChargeType请求参数结构体
    public struct ModifyDisksChargeTypeRequest: TCRequestModel {
        /// 一个或多个待操作的云硬盘ID。每次请求批量云盘上限为100。
        public let diskIds: [String]
        
        /// 预付费模式，即包年包月相关参数设置。通过该参数可以指定包年包月实例的购买时长、是否设置自动续费等属性。
        public let diskChargePrepaid: DiskChargePrepaid
        
        /// 后付费模式
        public let diskChargePostpaid: Bool?
        
        public init (diskIds: [String], diskChargePrepaid: DiskChargePrepaid, diskChargePostpaid: Bool?) {
            self.diskIds = diskIds
            self.diskChargePrepaid = diskChargePrepaid
            self.diskChargePostpaid = diskChargePostpaid
        }
        
        enum CodingKeys: String, CodingKey {
            case diskIds = "DiskIds"
            case diskChargePrepaid = "DiskChargePrepaid"
            case diskChargePostpaid = "DiskChargePostpaid"
        }
    }
    
    /// ModifyDisksChargeType返回参数结构体
    public struct ModifyDisksChargeTypeResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }
}