//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Iotcloud {
    /// 获取设备私钥
    ///
    /// 获取证书认证类型设备的私钥，刚生成或者重置设备后仅可调用一次 
    @inlinable
    public func describeDeviceClientKey(_ input: DescribeDeviceClientKeyRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeDeviceClientKeyResponse > {
        self.client.execute(action: "DescribeDeviceClientKey", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 获取设备私钥
    ///
    /// 获取证书认证类型设备的私钥，刚生成或者重置设备后仅可调用一次 
    @inlinable
    public func describeDeviceClientKey(_ input: DescribeDeviceClientKeyRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeDeviceClientKeyResponse {
        try await self.client.execute(action: "DescribeDeviceClientKey", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribeDeviceClientKey请求参数结构体
    public struct DescribeDeviceClientKeyRequest: TCRequestModel {
        /// 所属产品的Id
        public let productId: String
        
        /// 设备名称
        public let deviceName: String
        
        public init (productId: String, deviceName: String) {
            self.productId = productId
            self.deviceName = deviceName
        }
        
        enum CodingKeys: String, CodingKey {
            case productId = "ProductId"
            case deviceName = "DeviceName"
        }
    }
    
    /// DescribeDeviceClientKey返回参数结构体
    public struct DescribeDeviceClientKeyResponse: TCResponseModel {
        /// 设备的私钥
        public let clientKey: String
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case clientKey = "ClientKey"
            case requestId = "RequestId"
        }
    }
}