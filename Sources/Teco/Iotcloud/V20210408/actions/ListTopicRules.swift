//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Iotcloud {
    /// 获取规则列表
    ///
    /// 本接口（ListTopicRules）用于分页获取规则列表
    @inlinable
    public func listTopicRules(_ input: ListTopicRulesRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < ListTopicRulesResponse > {
        self.client.execute(action: "ListTopicRules", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 获取规则列表
    ///
    /// 本接口（ListTopicRules）用于分页获取规则列表
    @inlinable
    public func listTopicRules(_ input: ListTopicRulesRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ListTopicRulesResponse {
        try await self.client.execute(action: "ListTopicRules", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// ListTopicRules请求参数结构体
    public struct ListTopicRulesRequest: TCRequestModel {
        /// 请求的页数
        public let pageNum: UInt64
        
        /// 分页的大小
        public let pageSize: UInt64
        
        public init (pageNum: UInt64, pageSize: UInt64) {
            self.pageNum = pageNum
            self.pageSize = pageSize
        }
        
        enum CodingKeys: String, CodingKey {
            case pageNum = "PageNum"
            case pageSize = "PageSize"
        }
    }
    
    /// ListTopicRules返回参数结构体
    public struct ListTopicRulesResponse: TCResponseModel {
        /// 规则总数量
        public let totalCnt: UInt64
        
        /// 规则列表
        public let rules: [TopicRuleInfo]
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case totalCnt = "TotalCnt"
            case rules = "Rules"
            case requestId = "RequestId"
        }
    }
}