//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Tse {
    /// UpdateCloudNativeAPIGatewaySpec请求参数结构体
    public struct UpdateCloudNativeAPIGatewaySpecRequest: TCRequest {
        /// 云原生API网关实例ID。
        /// 只支持后付费实例
        public let gatewayId: String

        /// 网关分组id
        public let groupId: String

        /// 网关分组节点规格配置。
        public let nodeConfig: CloudNativeAPIGatewayNodeConfig

        public init(gatewayId: String, groupId: String, nodeConfig: CloudNativeAPIGatewayNodeConfig) {
            self.gatewayId = gatewayId
            self.groupId = groupId
            self.nodeConfig = nodeConfig
        }

        enum CodingKeys: String, CodingKey {
            case gatewayId = "GatewayId"
            case groupId = "GroupId"
            case nodeConfig = "NodeConfig"
        }
    }

    /// UpdateCloudNativeAPIGatewaySpec返回参数结构体
    public struct UpdateCloudNativeAPIGatewaySpecResponse: TCResponse {
        /// 更新云原生API网关实例规格的响应结果。
        public let result: UpdateCloudNativeAPIGatewayResult

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case result = "Result"
            case requestId = "RequestId"
        }
    }

    /// 修改云原生API网关实例的节点规格
    ///
    /// 修改云原生API网关实例的节点规格信息，比如节点扩缩容或者升降配
    @inlinable
    public func updateCloudNativeAPIGatewaySpec(_ input: UpdateCloudNativeAPIGatewaySpecRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<UpdateCloudNativeAPIGatewaySpecResponse> {
        self.client.execute(action: "UpdateCloudNativeAPIGatewaySpec", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 修改云原生API网关实例的节点规格
    ///
    /// 修改云原生API网关实例的节点规格信息，比如节点扩缩容或者升降配
    @inlinable
    public func updateCloudNativeAPIGatewaySpec(_ input: UpdateCloudNativeAPIGatewaySpecRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> UpdateCloudNativeAPIGatewaySpecResponse {
        try await self.client.execute(action: "UpdateCloudNativeAPIGatewaySpec", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 修改云原生API网关实例的节点规格
    ///
    /// 修改云原生API网关实例的节点规格信息，比如节点扩缩容或者升降配
    @inlinable
    public func updateCloudNativeAPIGatewaySpec(gatewayId: String, groupId: String, nodeConfig: CloudNativeAPIGatewayNodeConfig, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<UpdateCloudNativeAPIGatewaySpecResponse> {
        self.updateCloudNativeAPIGatewaySpec(.init(gatewayId: gatewayId, groupId: groupId, nodeConfig: nodeConfig), region: region, logger: logger, on: eventLoop)
    }

    /// 修改云原生API网关实例的节点规格
    ///
    /// 修改云原生API网关实例的节点规格信息，比如节点扩缩容或者升降配
    @inlinable
    public func updateCloudNativeAPIGatewaySpec(gatewayId: String, groupId: String, nodeConfig: CloudNativeAPIGatewayNodeConfig, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> UpdateCloudNativeAPIGatewaySpecResponse {
        try await self.updateCloudNativeAPIGatewaySpec(.init(gatewayId: gatewayId, groupId: groupId, nodeConfig: nodeConfig), region: region, logger: logger, on: eventLoop)
    }
}
