//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

@_exported import struct Foundation.Date

extension Partners {
    /// 代理商自付订单查询接口（预付费）
    ///
    /// 查询代理商名下指定代客的自付订单（预付费）
    @inlinable
    public func describeAgentSelfPayDealsV2(_ input: DescribeAgentSelfPayDealsV2Request, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeAgentSelfPayDealsV2Response > {
        self.client.execute(action: "DescribeAgentSelfPayDealsV2", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 代理商自付订单查询接口（预付费）
    ///
    /// 查询代理商名下指定代客的自付订单（预付费）
    @inlinable
    public func describeAgentSelfPayDealsV2(_ input: DescribeAgentSelfPayDealsV2Request, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeAgentSelfPayDealsV2Response {
        try await self.client.execute(action: "DescribeAgentSelfPayDealsV2", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribeAgentSelfPayDealsV2请求参数结构体
    public struct DescribeAgentSelfPayDealsV2Request: TCRequestModel {
        /// 下单人账号ID
        public let ownerUin: String
        
        /// 偏移量
        public let offset: UInt64
        
        /// 限制数目 最大100
        public let limit: UInt64
        
        /// 下单时间范围起始点(不传时会默认查15天内订单，传值时需要传15天内的起始时间)
        public let creatTimeRangeStart: Date?
        
        /// 下单时间范围终止点
        public let creatTimeRangeEnd: Date?
        
        /// 0:下单时间降序；其他：下单时间升序
        public let order: UInt64?
        
        /// 订单的状态(1：未支付;2：已支付;3：发货中;4：已发货;5：发货失败;6：已退款;7：已关单;8：订单过期;9：订单已失效;10：产品已失效;11：代付拒绝;12：支付中)
        public let status: UInt64?
        
        /// 子订单号列表
        public let dealNames: [String]?
        
        /// 大订单号列表
        public let bigDealIds: [String]?
        
        public init (ownerUin: String, offset: UInt64, limit: UInt64, creatTimeRangeStart: Date?, creatTimeRangeEnd: Date?, order: UInt64?, status: UInt64?, dealNames: [String]?, bigDealIds: [String]?) {
            self.ownerUin = ownerUin
            self.offset = offset
            self.limit = limit
            self.creatTimeRangeStart = creatTimeRangeStart
            self.creatTimeRangeEnd = creatTimeRangeEnd
            self.order = order
            self.status = status
            self.dealNames = dealNames
            self.bigDealIds = bigDealIds
        }
        
        enum CodingKeys: String, CodingKey {
            case ownerUin = "OwnerUin"
            case offset = "Offset"
            case limit = "Limit"
            case creatTimeRangeStart = "CreatTimeRangeStart"
            case creatTimeRangeEnd = "CreatTimeRangeEnd"
            case order = "Order"
            case status = "Status"
            case dealNames = "DealNames"
            case bigDealIds = "BigDealIds"
        }
    }
    
    /// DescribeAgentSelfPayDealsV2返回参数结构体
    public struct DescribeAgentSelfPayDealsV2Response: TCResponseModel {
        /// 订单数组
        public let agentPayDealSet: [AgentDealNewElem]
        
        /// 符合条件的订单总数量
        public let totalCount: UInt64
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case agentPayDealSet = "AgentPayDealSet"
            case totalCount = "TotalCount"
            case requestId = "RequestId"
        }
    }
}