//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import TecoCore

extension Iss {
    /// AI分析配置
    public struct AIConfig: TCInputModel, TCOutputModel {
        /// AI 分析类型。可选值为 Facemask(口罩识别)、Chefhat(厨师帽识别)、Smoking(抽烟检测)、Chefcloth(厨师服识别)、PhoneCall(接打电话识别)、Pet(宠物识别)、Body(人体识别)和Car(车辆车牌识别)等
        public let detectType: String?

        /// 截图频率。可选值1～20秒
        public let timeInterval: UInt64?

        /// 模板生效的时间段。最多包含5组时间段
        public let operTimeSlot: [OperTimeSlot]?

        public init(detectType: String? = nil, timeInterval: UInt64? = nil, operTimeSlot: [OperTimeSlot]? = nil) {
            self.detectType = detectType
            self.timeInterval = timeInterval
            self.operTimeSlot = operTimeSlot
        }

        enum CodingKeys: String, CodingKey {
            case detectType = "DetectType"
            case timeInterval = "TimeInterval"
            case operTimeSlot = "OperTimeSlot"
        }
    }

    /// AI任务信息
    public struct AITaskInfo: TCInputModel, TCOutputModel {
        /// AI 任务 ID
        public let taskId: String?

        /// AI 任务名称
        public let name: String?

        /// AI 任务描述
        public let desc: String?

        /// AI 任务状态。"on"代表开启了 AI 分析任务，"off"代表停止 AI 分析任务
        public let status: String?

        /// 通道 ID 列表
        public let channelList: [String]?

        /// AI 结果回调地址
        public let callbackUrl: String?

        /// AI 配置列表
        public let templates: [AITemplates]?

        /// 创建时间
        public let createdTime: String?

        /// 更新时间
        public let updatedTime: String?

        public init(taskId: String? = nil, name: String? = nil, desc: String? = nil, status: String? = nil, channelList: [String]? = nil, callbackUrl: String? = nil, templates: [AITemplates]? = nil, createdTime: String? = nil, updatedTime: String? = nil) {
            self.taskId = taskId
            self.name = name
            self.desc = desc
            self.status = status
            self.channelList = channelList
            self.callbackUrl = callbackUrl
            self.templates = templates
            self.createdTime = createdTime
            self.updatedTime = updatedTime
        }

        enum CodingKeys: String, CodingKey {
            case taskId = "TaskId"
            case name = "Name"
            case desc = "Desc"
            case status = "Status"
            case channelList = "ChannelList"
            case callbackUrl = "CallbackUrl"
            case templates = "Templates"
            case createdTime = "CreatedTime"
            case updatedTime = "UpdatedTime"
        }
    }

    /// AI识别结果
    public struct AITaskResultData: TCOutputModel {
        /// AI 任务 ID
        public let taskId: String

        /// 在 BeginTime 和 EndTime 时间之内，有识别结果的 AI 调用次数（分页依据此数值）
        public let aiResultCount: UInt64

        /// AI 任务执行结果详情
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let aiResults: AITaskResultInfo?

        enum CodingKeys: String, CodingKey {
            case taskId = "TaskId"
            case aiResultCount = "AIResultCount"
            case aiResults = "AIResults"
        }
    }

    /// AI分析结果详情
    public struct AITaskResultInfo: TCOutputModel {
        /// 人体识别结果列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let body: [BodyAIResultInfo]?

        /// 宠物识别结果列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let pet: [PetAIResultInfo]?

        /// 车辆车牌识别结果列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let car: [CarAIResultInfo]?

        /// 厨师帽结果列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let chefHat: [ChefHatAIResultInfo]?

        /// 厨师服结果列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let chefCloth: [ChefClothAIResultInfo]?

        /// 口罩识别结果列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let faceMask: [FaceMaskAIResultInfo]?

        /// 抽烟检测结果列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let smoking: [SmokingAIResultInfo]?

        /// 接打电话识别结果列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let phoneCall: [PhoneCallAIResultInfo]?

        enum CodingKeys: String, CodingKey {
            case body = "Body"
            case pet = "Pet"
            case car = "Car"
            case chefHat = "ChefHat"
            case chefCloth = "ChefCloth"
            case faceMask = "FaceMask"
            case smoking = "Smoking"
            case phoneCall = "PhoneCall"
        }
    }

    /// AI模板信息
    public struct AITemplates: TCInputModel, TCOutputModel {
        /// AI 类别。可选值 AI(AI 分析)和 Snapshot(截图)，Templates 列表中只能出现一种类型。
        public let tag: String?

        /// AI 分析配置。和"SnapshotConfig"二选一。
        public let aiConfig: AIConfig?

        /// 截图配置。和"AIConfig"二选一。
        public let snapshotConfig: SnapshotConfig?

        public init(tag: String? = nil, aiConfig: AIConfig? = nil, snapshotConfig: SnapshotConfig? = nil) {
            self.tag = tag
            self.aiConfig = aiConfig
            self.snapshotConfig = snapshotConfig
        }

        enum CodingKeys: String, CodingKey {
            case tag = "Tag"
            case aiConfig = "AIConfig"
            case snapshotConfig = "SnapshotConfig"
        }
    }

    /// 增加设备接口返回数据
    public struct AddDeviceData: TCOutputModel {
        /// 设备iD
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceId: String?

        /// 设备编码（即我们为设备生成的20位国标编码）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let code: String?

        /// 设备名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let name: String?

        /// 设备接入协议，1:RTMP,2:GB,3:GW
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let accessProtocol: Int64?

        /// 设备类型，1:IPC,2:NVR
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let type: Int64?

        /// 设备接入服务节点ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let clusterId: String?

        /// 设备接入服务节点名称
        ///
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let clusterName: String?

        /// 设备流传输协议，1:UDP,2:TCP
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let transportProtocol: Int64?

        /// 设备密码
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let password: String?

        /// 设备描述
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let description: String?

        /// 设备状态，0:未注册,1:在线,2:离线,3:禁用
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let status: Int64?

        /// 设备所属组织ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let organizationId: Int64?

        /// 设备接入网关ID，从查询网关列表接口中获取（仅网关接入需要）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let gatewayId: String?

        /// 网关接入协议类型，1.海康SDK，2.大华SDK，3.宇视SDK，4.Onvif（仅网关接入需要）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let protocolType: Int64?

        /// 设备接入IP（仅网关接入需要）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let ip: String?

        /// 设备Port（仅网关接入需要）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let port: Int64?

        /// 设备用户名（仅网关接入需要）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let username: String?

        /// 用户ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let appId: Int64?

        enum CodingKeys: String, CodingKey {
            case deviceId = "DeviceId"
            case code = "Code"
            case name = "Name"
            case accessProtocol = "AccessProtocol"
            case type = "Type"
            case clusterId = "ClusterId"
            case clusterName = "ClusterName"
            case transportProtocol = "TransportProtocol"
            case password = "Password"
            case description = "Description"
            case status = "Status"
            case organizationId = "OrganizationId"
            case gatewayId = "GatewayId"
            case protocolType = "ProtocolType"
            case ip = "Ip"
            case port = "Port"
            case username = "Username"
            case appId = "AppId"
        }
    }

    /// 增加组织接口返回数据
    public struct AddOrgData: TCOutputModel {
        /// 组织 ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let organizationId: String?

        /// 组织名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let name: String?

        /// 组织父节点 ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let parentId: String?

        /// 组织层级
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let level: Int64?

        /// 用户ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let appId: Int64?

        /// 组织结构
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let parentIds: String?

        /// 设备总数
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let total: Int64?

        /// 设备在线数量
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let online: Int64?

        enum CodingKeys: String, CodingKey {
            case organizationId = "OrganizationId"
            case name = "Name"
            case parentId = "ParentId"
            case level = "Level"
            case appId = "AppId"
            case parentIds = "ParentIds"
            case total = "Total"
            case online = "Online"
        }
    }

    /// 新增录像上云计划返回数据
    public struct AddRecordBackupPlanData: TCOutputModel {
        /// 录像上云计划ID
        public let planId: String

        /// 录像上云计划名称
        public let planName: String

        /// 录像上云模板ID
        public let templateId: String

        /// 录像上云计划描述
        public let describe: String

        /// 云文件生命周期
        public let lifeCycle: LifeCycleData

        /// 录像上云计划状态，1:正常使用中，0:删除中，无法使用
        public let status: Int64

        /// 通道数量
        public let channelCount: Int64

        /// 创建时间
        public let createAt: String

        /// 修改时间
        public let updateAt: String

        enum CodingKeys: String, CodingKey {
            case planId = "PlanId"
            case planName = "PlanName"
            case templateId = "TemplateId"
            case describe = "Describe"
            case lifeCycle = "LifeCycle"
            case status = "Status"
            case channelCount = "ChannelCount"
            case createAt = "CreateAt"
            case updateAt = "UpdateAt"
        }
    }

    /// 新增录像上云模版返回数据
    public struct AddRecordBackupTemplateData: TCOutputModel {
        /// 模板ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let templateId: String?

        /// 模板名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let templateName: String?

        /// 上云时间段（按周进行设置，支持一天设置多个时间段，每个时间段不小于10分钟）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let timeSections: [RecordTemplateTimeSections]?

        /// 录像时间段（按周进行设置，支持一天设置多个时间段，每个时间段不小于10分钟）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let devTimeSections: [RecordTemplateTimeSections]?

        /// 上云倍速（支持1，2，4倍速）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let scale: Int64?

        /// 创建时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let createAt: String?

        /// 更新时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let updateAt: String?

        enum CodingKeys: String, CodingKey {
            case templateId = "TemplateId"
            case templateName = "TemplateName"
            case timeSections = "TimeSections"
            case devTimeSections = "DevTimeSections"
            case scale = "Scale"
            case createAt = "CreateAt"
            case updateAt = "UpdateAt"
        }
    }

    /// 查询取回任务详情返回数据
    public struct AddRecordRetrieveTaskData: TCOutputModel {
        /// 任务ID
        public let taskId: String

        /// 任务名称
        public let taskName: String

        /// 取回录像的开始时间
        public let startTime: UInt64

        /// 取回录像的结束时间
        public let endTime: UInt64

        /// 取回模式，1:极速模式，其他暂不支持
        public let mode: Int64

        /// 副本有效期
        public let expiration: Int64

        /// 任务状态，0:已取回，1:取回中，2:待取回
        public let status: Int64

        /// 取回容量，单位MB
        public let capacity: Float

        /// 任务描述
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let describe: String?

        enum CodingKeys: String, CodingKey {
            case taskId = "TaskId"
            case taskName = "TaskName"
            case startTime = "StartTime"
            case endTime = "EndTime"
            case mode = "Mode"
            case expiration = "Expiration"
            case status = "Status"
            case capacity = "Capacity"
            case describe = "Describe"
        }
    }

    /// 设置推拉流鉴权返回数据结构
    public struct AddStreamAuthData: TCOutputModel {
        /// 鉴权配置ID（uuid）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let id: String?

        /// 是否开播放鉴权（1:开启,0:关闭）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let pullState: Int64?

        /// 播放密钥（仅支持字母数字，长度0-10位）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let pullSecret: String?

        /// 播放过期时间（单位：分钟）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let pullExpired: Int64?

        /// 是否开启推流鉴权（1:开启,0:关闭）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let pushState: Int64?

        /// 推流密钥（仅支持字母数字，长度0-10位）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let pushSecret: String?

        /// 推流过期时间（单位：分钟）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let pushExpired: Int64?

        /// 用户ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let appId: Int64?

        enum CodingKeys: String, CodingKey {
            case id = "Id"
            case pullState = "PullState"
            case pullSecret = "PullSecret"
            case pullExpired = "PullExpired"
            case pushState = "PushState"
            case pushSecret = "PushSecret"
            case pushExpired = "PushExpired"
            case appId = "AppId"
        }
    }

    /// 通用AI识别结果信息
    public struct BaseAIResultInfo: TCOutputModel {
        /// 名称。返回值有人体识别结果名称(person)、宠物识别结果名称(cat和dog) 、车辆车牌识别结果名称(vehicle)
        public let name: String?

        /// 置信度
        public let score: UInt64?

        /// 截图中坐标信息
        public let location: Location?

        enum CodingKeys: String, CodingKey {
            case name = "Name"
            case score = "Score"
            case location = "Location"
        }
    }

    /// 批量操作设备返回结果
    public struct BatchOperateDeviceData: TCOutputModel {
        /// 任务 ID（用于在查询任务的子任务列表接口ListSubTasks中查询任务进度）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let taskId: String?

        enum CodingKeys: String, CodingKey {
            case taskId = "TaskId"
        }
    }

    /// 人体识别结果详情
    public struct BodyAIResultInfo: TCOutputModel {
        /// 时间字符串
        public let time: String?

        /// 截图 URL
        public let url: String?

        /// 人体信息
        public let bodyInfo: [BaseAIResultInfo]?

        enum CodingKeys: String, CodingKey {
            case time = "Time"
            case url = "Url"
            case bodyInfo = "BodyInfo"
        }
    }

    /// 车辆车牌识别结果信息
    public struct CarAIResultInfo: TCOutputModel {
        /// 车系
        public let serial: String?

        /// 车辆品牌
        public let brand: String?

        /// 车辆类型
        public let type: String?

        /// 车辆颜色
        public let color: String?

        /// 置信度，0 - 100
        public let confidence: Int64?

        /// 年份，识别不出年份时返回0
        public let year: Int64?

        /// 车牌信息
        public let plateContent: PlateContent?

        /// 截图中坐标信息
        public let location: Location?

        enum CodingKeys: String, CodingKey {
            case serial = "Serial"
            case brand = "Brand"
            case type = "Type"
            case color = "Color"
            case confidence = "Confidence"
            case year = "Year"
            case plateContent = "PlateContent"
            case location = "Location"
        }
    }

    /// 通道及通道所属设备信息
    public struct ChannelInfo: TCInputModel {
        /// 通道所属的设备ID
        public let deviceId: String

        /// 设备通道ID，一个设备通道只允许被一个上云计划添加
        public let channelId: String

        public init(deviceId: String, channelId: String) {
            self.deviceId = deviceId
            self.channelId = channelId
        }

        enum CodingKeys: String, CodingKey {
            case deviceId = "DeviceId"
            case channelId = "ChannelId"
        }
    }

    /// 厨师服识别结果详情
    public struct ChefClothAIResultInfo: TCOutputModel {
        /// 时间字符串
        public let time: String?

        /// 截图 URL
        public let url: String?

        /// 厨师服信息
        public let chefClothInfoInfo: [BaseAIResultInfo]?

        enum CodingKeys: String, CodingKey {
            case time = "Time"
            case url = "Url"
            case chefClothInfoInfo = "ChefClothInfoInfo"
        }
    }

    /// 厨师帽识别结果详情
    public struct ChefHatAIResultInfo: TCOutputModel {
        /// 时间字符串
        public let time: String?

        /// 截图 URL
        public let url: String?

        /// 厨师帽信息
        public let chefHatInfo: [BaseAIResultInfo]?

        enum CodingKeys: String, CodingKey {
            case time = "Time"
            case url = "Url"
            case chefHatInfo = "ChefHatInfo"
        }
    }

    /// 获取开流地址返回数据
    public struct ControlDeviceStreamData: TCOutputModel {
        /// flv 流地址
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let flv: String?

        /// hls 流地址
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let hls: String?

        /// rtmp 流地址
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let rtmp: String?

        enum CodingKeys: String, CodingKey {
            case flv = "Flv"
            case hls = "Hls"
            case rtmp = "Rtmp"
        }
    }

    /// 查询设备通道信息返回结果
    public struct DescribeDeviceChannelData: TCOutputModel {
        /// 设备 ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceId: String?

        /// 通道 ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let channelId: String?

        /// 通道编码
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let channelCode: String?

        /// 通道名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let name: String?

        /// 流状态（0:未传输,1:传输中）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let status: Int64?

        /// 是否可控 Ptz（0:不可控,1:可控）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let ptzType: Int64?

        /// 通道厂商
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let manufacturer: String?

        /// 通道支持分辨率（分辨率列表由‘/’隔开，国标协议样例（6/3），自定义样例（12800960/640480））
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let resolution: String?

        /// 通道在离线状态（0:离线,1:在线）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let state: Int64?

        /// 所在地域
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let region: String?

        enum CodingKeys: String, CodingKey {
            case deviceId = "DeviceId"
            case channelId = "ChannelId"
            case channelCode = "ChannelCode"
            case name = "Name"
            case status = "Status"
            case ptzType = "PTZType"
            case manufacturer = "Manufacturer"
            case resolution = "Resolution"
            case state = "State"
            case region = "Region"
        }
    }

    /// 查询设备接口返回数据
    public struct DescribeDeviceData: TCOutputModel {
        /// 设备ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceId: String?

        /// 设备编码（即我们为设备生成的20位国标编码）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let code: String?

        /// 设备名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let name: String?

        /// 设备接入协议，1:RTMP,2:GB,3:GW
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let accessProtocol: Int64?

        /// 设备类型，1:IPC,2:NVR
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let type: Int64?

        /// 设备接入服务节点id
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let clusterId: String?

        /// 设备接入服务节点名称
        ///
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let clusterName: String?

        /// 设备流传输协议，1:UDP,2:TCP
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let transportProtocol: Int64?

        /// 设备密码
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let password: String?

        /// 设备描述
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let description: String?

        /// sip服务ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let sipId: String?

        /// sip服务域
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let sipDomain: String?

        /// sip服务IP地址
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let sipIp: String?

        /// sip服务端口
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let sipPort: Int64?

        /// Rtmp设备推流地址(仅rtmp设备有效)
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let pushStreamUrl: String?

        /// 设备状态，0:未注册,1:在线,2:离线,3:禁用
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let status: Int64?

        /// 设备所属组织ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let organizationId: String?

        /// 设备接入网关ID，从查询网关列表接口中获取（仅网关接入需要）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let gatewayId: String?

        /// 设备所属网关名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let gatewayName: String?

        /// 设备网关协议名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let protocolTypeName: String?

        /// 网关接入协议类型，1.海康SDK，2.大华SDK，3.宇视SDK，4.Onvif（仅网关接入需要）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let protocolType: Int64?

        /// 设备接入IP
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let ip: String?

        /// 设备Port
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let port: Int64?

        /// 设备用户名
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let username: String?

        /// 设备地域
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let region: String?

        /// 设备厂商
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let manufacturer: String?

        enum CodingKeys: String, CodingKey {
            case deviceId = "DeviceId"
            case code = "Code"
            case name = "Name"
            case accessProtocol = "AccessProtocol"
            case type = "Type"
            case clusterId = "ClusterId"
            case clusterName = "ClusterName"
            case transportProtocol = "TransportProtocol"
            case password = "Password"
            case description = "Description"
            case sipId = "SipId"
            case sipDomain = "SipDomain"
            case sipIp = "SipIp"
            case sipPort = "SipPort"
            case pushStreamUrl = "PushStreamUrl"
            case status = "Status"
            case organizationId = "OrganizationId"
            case gatewayId = "GatewayId"
            case gatewayName = "GatewayName"
            case protocolTypeName = "ProtocolTypeName"
            case protocolType = "ProtocolType"
            case ip = "Ip"
            case port = "Port"
            case username = "Username"
            case region = "Region"
            case manufacturer = "Manufacturer"
        }
    }

    /// 查询设备预置位返回数据
    public struct DescribeDevicePresetData: TCOutputModel {
        /// 预置位索引    只支持1-10的索引
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let index: Int64?

        /// 预置位名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let name: String?

        enum CodingKeys: String, CodingKey {
            case index = "Index"
            case name = "Name"
        }
    }

    /// 查询设备可接入集群信息
    public struct DescribeDeviceRegion: TCOutputModel {
        /// 服务节点描述
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let label: String?

        /// 服务节点 ID（对应为其他接口中所需的 ClusterId）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let value: String?

        /// 地域信息
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let region: String?

        enum CodingKeys: String, CodingKey {
            case label = "Label"
            case value = "Value"
            case region = "Region"
        }
    }

    /// 查询域名详情数据
    public struct DescribeDomainData: TCOutputModel {
        /// 域名ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let id: String?

        /// 播放域名
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let playDomain: String?

        /// CNAME 记录值
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let internalDomain: String?

        /// 是否上传证书（0：否，1：是）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let haveCert: Int64?

        /// 服务节点 ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let clusterId: String?

        /// 服务节点名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let clusterName: String?

        /// 用户ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let appId: Int64?

        enum CodingKeys: String, CodingKey {
            case id = "Id"
            case playDomain = "PlayDomain"
            case internalDomain = "InternalDomain"
            case haveCert = "HaveCert"
            case clusterId = "ClusterId"
            case clusterName = "ClusterName"
            case appId = "AppId"
        }
    }

    /// 查询域名可绑定集群数据
    public struct DescribeDomainRegionData: TCOutputModel {
        /// 服务节点描述
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let label: String?

        /// 服务节点 ID（对应为其他接口中所需的 ClusterId）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let value: String?

        /// 地域信息
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let region: String?

        enum CodingKeys: String, CodingKey {
            case label = "Label"
            case value = "Value"
            case region = "Region"
        }
    }

    /// 查询网关信息返回结果
    public struct DescribeGatewayData: TCOutputModel {
        /// 网关索引ID，用于网关查询，更新，删除操作
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let gatewayId: String?

        /// 网关编码，由网关设备生成的唯一编码
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let gwId: String?

        /// 网关名称，仅支持中文、英文、数字、_、-，长度不超过32个字符
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let name: String?

        /// 网关描述，仅支持中文、英文、数字、_、-，长度不超过128个字符
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let description: String?

        /// 服务节点id
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let clusterId: String?

        /// 服务节点名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let clusterName: String?

        /// 网关状态，0：离线，1:在线
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let status: Int64?

        /// 网关版本
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let version: [GatewayVersion]?

        /// 网关下挂设备数量
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceNum: Int64?

        /// 激活时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let createdAt: String?

        /// 所属地域
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let region: String?

        enum CodingKeys: String, CodingKey {
            case gatewayId = "GatewayId"
            case gwId = "GwId"
            case name = "Name"
            case description = "Description"
            case clusterId = "ClusterId"
            case clusterName = "ClusterName"
            case status = "Status"
            case version = "Version"
            case deviceNum = "DeviceNum"
            case createdAt = "CreatedAt"
            case region = "Region"
        }
    }

    /// 查询网关监控信息返回结果
    public struct DescribeGatewayMonitor: TCOutputModel {
        /// 设备接入总数
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceTotal: Int64?

        /// 设备在线数
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceOnline: Int64?

        /// 设备离线数
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceOffline: Int64?

        /// 视频通道总数
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let channelTotal: Int64?

        /// 视频通道在线数
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let channelOnline: Int64?

        /// 视频通道离线数
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let channelOffline: Int64?

        /// 网关上行流量,单位kbps
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let upFlow: Int64?

        /// 流在传输中的通道数
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let channelPull: Int64?

        /// 流未传输中的通道数
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let channelUnPull: Int64?

        enum CodingKeys: String, CodingKey {
            case deviceTotal = "DeviceTotal"
            case deviceOnline = "DeviceOnline"
            case deviceOffline = "DeviceOffline"
            case channelTotal = "ChannelTotal"
            case channelOnline = "ChannelOnline"
            case channelOffline = "ChannelOffline"
            case upFlow = "UpFlow"
            case channelPull = "ChannelPull"
            case channelUnPull = "ChannelUnPull"
        }
    }

    /// 查询网关所支持的接入协议
    public struct DescribeGatewayProtocolData: TCOutputModel {
        /// 接入协议的字典码
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let typeCode: String?

        /// 接入协议类型值
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let value: Int64?

        /// 接入协议的类型描述
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let label: String?

        enum CodingKeys: String, CodingKey {
            case typeCode = "TypeCode"
            case value = "Value"
            case label = "Label"
        }
    }

    /// 查询网关服务版本信息返回数据
    public struct DescribeGatewayVersion: TCOutputModel {
        /// 服务名
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let name: String?

        /// 服务版本
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let version: String?

        /// 服务最新版本
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let latestVersion: String?

        /// 是否需要更新
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let isUpdate: Bool?

        /// 升级信息
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let upgradeInfo: [String]?

        enum CodingKeys: String, CodingKey {
            case name = "Name"
            case version = "Version"
            case latestVersion = "LatestVersion"
            case isUpdate = "IsUpdate"
            case upgradeInfo = "UpgradeInfo"
        }
    }

    /// 查询网关服务版本信息返回数据
    public struct DescribeGatewayVersionData: TCOutputModel {
        /// 网关服务列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let services: [DescribeGatewayVersion]?

        enum CodingKeys: String, CodingKey {
            case services = "Services"
        }
    }

    /// 查询组织数据返回结果
    public struct DescribeOrganizationData: TCOutputModel {
        /// 组织 ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let organizationId: String?

        /// 组织名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let name: String?

        /// 组织父节点 ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let parentId: String?

        /// 组织层级
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let level: Int64?

        /// 用户id
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let appId: Int64?

        /// 组织结构
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let parentIds: String?

        /// 设备总数
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let total: Int64?

        /// 设备在线数量
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let online: Int64?

        enum CodingKeys: String, CodingKey {
            case organizationId = "OrganizationId"
            case name = "Name"
            case parentId = "ParentId"
            case level = "Level"
            case appId = "AppId"
            case parentIds = "ParentIds"
            case total = "Total"
            case online = "Online"
        }
    }

    /// 查询录像上云计划返回数据
    public struct DescribeRecordBackupPlanData: TCOutputModel {
        /// 录像上云计划ID
        public let planId: String

        /// 录像上云计划名称
        public let planName: String

        /// 录像上云模板ID
        public let templateId: String

        /// 录像上云计划描述
        public let describe: String

        /// 云文件生命周期
        public let lifeCycle: LifeCycleData

        /// 录像上云计划状态，1:正常使用中，0:删除中，无法使用
        public let status: Int64

        /// 通道数量
        public let channelCount: Int64

        /// 创建时间
        public let createAt: String

        /// 修改时间
        public let updateAt: String

        enum CodingKeys: String, CodingKey {
            case planId = "PlanId"
            case planName = "PlanName"
            case templateId = "TemplateId"
            case describe = "Describe"
            case lifeCycle = "LifeCycle"
            case status = "Status"
            case channelCount = "ChannelCount"
            case createAt = "CreateAt"
            case updateAt = "UpdateAt"
        }
    }

    /// 查询录像上云模版返回数据
    public struct DescribeRecordBackupTemplateData: TCOutputModel {
        /// 模板ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let templateId: String?

        /// 模板名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let templateName: String?

        /// 上云时间段（按周进行设置，支持一天设置多个时间段，每个时间段不小于10分钟）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let timeSections: [RecordTemplateTimeSections]?

        /// 录像时间段（按周进行设置，支持一天设置多个时间段，每个时间段不小于10分钟）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let devTimeSections: [RecordTemplateTimeSections]?

        /// 上云倍速（支持1，2，4倍速）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let scale: Int64?

        /// 创建时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let createAt: String?

        /// 更新时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let updateAt: String?

        enum CodingKeys: String, CodingKey {
            case templateId = "TemplateId"
            case templateName = "TemplateName"
            case timeSections = "TimeSections"
            case devTimeSections = "DevTimeSections"
            case scale = "Scale"
            case createAt = "CreateAt"
            case updateAt = "UpdateAt"
        }
    }

    /// 用于查询设备云端录像时间轴信息返回数据
    public struct DescribeRecordFileData: TCOutputModel {
        /// 提示类型，0:时间段内无归档录像，1:时间段内有归档录像
        public let tips: Int64

        /// 存在为数组格式，不存在字段内容为空
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let list: [RecordTimeLine]?

        enum CodingKeys: String, CodingKey {
            case tips = "Tips"
            case list = "List"
        }
    }

    /// 查询云录像取回任务详情返回数据
    public struct DescribeRecordRetrieveTaskData: TCOutputModel {
        /// 取回任务ID
        public let taskId: String

        /// 取回任务名称
        public let taskName: String

        /// 取回录像的开始时间
        public let startTime: UInt64

        /// 取回录像的结束时间
        public let endTime: UInt64

        /// 取回模式，1:极速模式，其他暂不支持
        public let mode: Int64

        /// 副本有效期
        public let expiration: Int64

        /// 任务状态，0:已取回，1:取回中，2:待取回
        public let status: Int64

        /// 取回容量，单位MB
        public let capacity: Float

        /// 任务的设备通道id
        public let channels: [RecordRetrieveTaskChannelInfo]

        /// 任务描述
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let describe: String?

        /// 任务通道数量
        public let channelCount: Int64

        enum CodingKeys: String, CodingKey {
            case taskId = "TaskId"
            case taskName = "TaskName"
            case startTime = "StartTime"
            case endTime = "EndTime"
            case mode = "Mode"
            case expiration = "Expiration"
            case status = "Status"
            case capacity = "Capacity"
            case channels = "Channels"
            case describe = "Describe"
            case channelCount = "ChannelCount"
        }
    }

    /// 查询推拉流鉴权返回数据结构
    public struct DescribeStreamAuthData: TCOutputModel {
        /// 鉴权配置ID（uuid）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let id: String?

        /// 是否开播放鉴权（1:开启,0:关闭）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let pullState: Int64?

        /// 播放密钥（仅支持字母数字，长度0-10位）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let pullSecret: String?

        /// 播放过期时间（单位：分钟）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let pullExpired: Int64?

        /// 是否开启推流鉴权（1:开启,0:关闭）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let pushState: Int64?

        /// 推流密钥（仅支持字母数字，长度0-10位）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let pushSecret: String?

        /// 推流过期时间（单位：分钟）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let pushExpired: Int64?

        /// 用户ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let appId: Int64?

        enum CodingKeys: String, CodingKey {
            case id = "Id"
            case pullState = "PullState"
            case pullSecret = "PullSecret"
            case pullExpired = "PullExpired"
            case pushState = "PushState"
            case pushSecret = "PushSecret"
            case pushExpired = "PushExpired"
            case appId = "AppId"
        }
    }

    /// 获取云录像下载URL返回的数据
    public struct DescribeVideoDownloadUrlData: TCOutputModel {
        /// 录像文件下载 URL
        /// 注意：
        /// URL 有效期是10分钟，过期后将拒绝访问，若需再用请重新获取
        /// 录像文件下载采用分块传输编码，响应头Transfer-Encoding:chunked
        /// 下载文件命名格式为{ChannelId}-{BeginTime}-{EndTime}.{FileType}
        public let url: String

        /// 实际下载录像的开始时间
        /// 注意：当请求中指定IsRespActualTime参数为true时，才有该字段
        public let actualBeginTime: String

        /// 实际下载录像的结束时间
        /// 注意：当请求中指定IsRespActualTime参数为true时，才有该字段
        public let actualEndTime: String

        enum CodingKeys: String, CodingKey {
            case url = "Url"
            case actualBeginTime = "ActualBeginTime"
            case actualEndTime = "ActualEndTime"
        }
    }

    /// 口罩识别结果详情
    public struct FaceMaskAIResultInfo: TCOutputModel {
        /// 时间字符串
        public let time: String?

        /// 截图 URL
        public let url: String?

        /// 口罩信息
        public let faceMaskInfo: [BaseAIResultInfo]?

        enum CodingKeys: String, CodingKey {
            case time = "Time"
            case url = "Url"
            case faceMaskInfo = "FaceMaskInfo"
        }
    }

    /// 网关设备数据
    public struct GatewayDevice: TCOutputModel {
        /// 设备ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceId: String?

        /// 网关接入协议类型
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let protocolType: Int64?

        /// 网关接入协议名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let protocolTypeName: String?

        /// 设备名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let name: String?

        /// 设备类型
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let type: Int64?

        /// 设备内网IP
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let ip: String?

        /// 设备端口
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let port: Int64?

        /// 设备下通道数
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let channelNum: Int64?

        /// 设备状态
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let status: Int64?

        enum CodingKeys: String, CodingKey {
            case deviceId = "DeviceId"
            case protocolType = "ProtocolType"
            case protocolTypeName = "ProtocolTypeName"
            case name = "Name"
            case type = "Type"
            case ip = "Ip"
            case port = "Port"
            case channelNum = "ChannelNum"
            case status = "Status"
        }
    }

    /// 网关详情版本信息
    public struct GatewayVersion: TCOutputModel {
        /// 服务名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let name: String?

        /// 服务版本
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let version: String?

        enum CodingKeys: String, CodingKey {
            case name = "Name"
            case version = "Version"
        }
    }

    /// 查询网关列表返回结果
    public struct GatewaysData: TCOutputModel {
        /// 网关索引ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let gatewayId: String?

        /// 网关编码
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let gwId: String?

        /// 网关名称，仅支持中文、英文、数字、_、-，长度不超过32个字符
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let name: String?

        /// 网关描述，仅支持中文、英文、数字、_、-，长度不超过128个字符
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let description: String?

        /// 网关所属服务节点ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let clusterId: String?

        /// 网关所属服务节点名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let clusterName: String?

        /// 网关所属地域
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let region: String?

        /// 网关状态，0：离线，1:在线
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let status: Int64?

        /// 网关激活时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let createdAt: String?

        /// 所属网关设备数量
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceNum: Int64?

        enum CodingKeys: String, CodingKey {
            case gatewayId = "GatewayId"
            case gwId = "GwId"
            case name = "Name"
            case description = "Description"
            case clusterId = "ClusterId"
            case clusterName = "ClusterName"
            case region = "Region"
            case status = "Status"
            case createdAt = "CreatedAt"
            case deviceNum = "DeviceNum"
        }
    }

    /// 生命周期，云文件生命周期设置，管理文件冷、热存储的时间
    public struct LifeCycleData: TCInputModel, TCOutputModel {
        /// 云文件热存储时长，单位天，最小1天，最大3650天
        public let transition: Int64

        /// 云文件冷存储时长， 单位天，0表示不设置，设置时最小60天，Expiration字段加Transition字段不超过3650天
        public let expiration: Int64

        public init(transition: Int64, expiration: Int64) {
            self.transition = transition
            self.expiration = expiration
        }

        enum CodingKeys: String, CodingKey {
            case transition = "Transition"
            case expiration = "Expiration"
        }
    }

    /// 获取AI任务列表的数据
    public struct ListAITaskData: TCOutputModel {
        /// AI任务列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let list: [AITaskInfo]?

        enum CodingKeys: String, CodingKey {
            case list = "List"
        }
    }

    /// 获取设备列表的响应
    public struct ListDeviceInfo: TCOutputModel {
        /// 设备 ID
        public let deviceId: String?

        /// 设备国标编码
        public let code: String?

        /// 设备状态。0:未注册，1:在线，2:离线，3:禁用
        public let status: UInt64?

        /// 设备流传输协议。1:UDP,2:TCP
        public let transportProtocol: UInt64?

        /// 设备名称
        public let name: String?

        /// 设备类型。1:IPC,2:NVR
        public let type: UInt64?

        /// 设备密码
        public let password: String?

        /// 描述
        public let description: String?

        /// 设备接入服务节点 ID
        public let clusterId: String?

        /// 服务节点名称
        public let clusterName: String?

        /// 接入协议。1:RTMP,2:GB,3:GW
        public let accessProtocol: UInt64?

        /// 设备所属组织 ID
        public let organizationId: String?

        /// 通道数量
        public let channelNum: UInt64?

        enum CodingKeys: String, CodingKey {
            case deviceId = "DeviceId"
            case code = "Code"
            case status = "Status"
            case transportProtocol = "TransportProtocol"
            case name = "Name"
            case type = "Type"
            case password = "Password"
            case description = "Description"
            case clusterId = "ClusterId"
            case clusterName = "ClusterName"
            case accessProtocol = "AccessProtocol"
            case organizationId = "OrganizationId"
            case channelNum = "ChannelNum"
        }
    }

    /// 查询网关设备列表返回数据
    public struct ListGatewayDevicesData: TCOutputModel {
        /// 网关下设备列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let list: [GatewayDevice]?

        /// 网关下设备总数
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let totalCount: Int64?

        enum CodingKeys: String, CodingKey {
            case list = "List"
            case totalCount = "TotalCount"
        }
    }

    /// 查询网关列表返回结果
    public struct ListGatewaysData: TCOutputModel {
        /// 网关列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let list: [GatewaysData]?

        /// 网关数量
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let totalCount: Int64?

        enum CodingKeys: String, CodingKey {
            case list = "List"
            case totalCount = "TotalCount"
        }
    }

    /// 组织目录下的未添加到实时上云计划中的通道数量返回数据
    public struct ListOrganizationChannelNumbersData: TCOutputModel {
        /// 组织下通道总数
        public let totalCount: Int64

        /// 组织下未添加到计划的通道总数
        public let notInPlanCount: Int64

        enum CodingKeys: String, CodingKey {
            case totalCount = "TotalCount"
            case notInPlanCount = "NotInPlanCount"
        }
    }

    /// 查询组织目录下的通道列表返回数据
    public struct ListOrganizationChannelsData: TCOutputModel {
        /// 第几页
        public let pageNumber: Int64

        /// 当前页的设备数量
        public let pageSize: Int64

        /// 本次查询的设备通道总数
        public let totalCount: Int64

        /// 设备通道信息列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let list: [OrganizationChannelInfo]?

        enum CodingKeys: String, CodingKey {
            case pageNumber = "PageNumber"
            case pageSize = "PageSize"
            case totalCount = "TotalCount"
            case list = "List"
        }
    }

    /// 查询录像上云计划列表返回数据
    public struct ListRecordBackupPlanData: TCOutputModel {
        /// 录像上云计划ID
        public let planId: String

        /// 录像上云计划名称
        public let planName: String

        /// 录像上云模板ID
        public let templateId: String

        /// 录像上云计划描述
        public let describe: String

        /// 云文件生命周期
        public let lifeCycle: LifeCycleData

        /// 录像上云计划状态，1:正常使用中，0:删除中，无法使用
        public let status: Int64

        /// 通道数量
        public let channelCount: Int64

        /// 创建时间
        public let createAt: String

        /// 修改时间
        public let updateAt: String

        enum CodingKeys: String, CodingKey {
            case planId = "PlanId"
            case planName = "PlanName"
            case templateId = "TemplateId"
            case describe = "Describe"
            case lifeCycle = "LifeCycle"
            case status = "Status"
            case channelCount = "ChannelCount"
            case createAt = "CreateAt"
            case updateAt = "UpdateAt"
        }
    }

    /// 查询录像上云计划关联通道的返回数据
    public struct ListRecordBackupPlanDevicesData: TCOutputModel {
        /// 第几页
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let pageNumber: Int64?

        /// 当前页的设备数量
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let pageSize: Int64?

        /// 本次查询的设备通道总数
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let totalCount: Int64?

        /// 设备通道信息列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let list: [RecordPlanChannelInfo]?

        enum CodingKeys: String, CodingKey {
            case pageNumber = "PageNumber"
            case pageSize = "PageSize"
            case totalCount = "TotalCount"
            case list = "List"
        }
    }

    /// 查询录像上云模板列表返回数据
    public struct ListRecordBackupTemplatesData: TCOutputModel {
        /// 模板ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let templateId: String?

        /// 模板名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let templateName: String?

        /// 上云时间段（按周进行设置，支持一天设置多个时间段，每个时间段不小于10分钟）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let timeSections: [RecordTemplateTimeSections]?

        /// 录像时间段（按周进行设置，支持一天设置多个时间段，每个时间段不小于10分钟）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let devTimeSections: [RecordTemplateTimeSections]?

        /// 上云倍速（支持1，2，4倍速）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let scale: Int64?

        /// 创建时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let createAt: String?

        /// 更新时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let updateAt: String?

        enum CodingKeys: String, CodingKey {
            case templateId = "TemplateId"
            case templateName = "TemplateName"
            case timeSections = "TimeSections"
            case devTimeSections = "DevTimeSections"
            case scale = "Scale"
            case createAt = "CreateAt"
            case updateAt = "UpdateAt"
        }
    }

    /// 用户下所有实时上云计划中的通道id列表返回数据
    public struct ListRecordPlanChannelsData: TCOutputModel {
        /// 用户所有计划下通道id，存在通道是为数组格式，不存在时，字段数据为空
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let list: [String]?

        enum CodingKeys: String, CodingKey {
            case list = "List"
        }
    }

    /// 云计划下的设备通道列表返回数据
    public struct ListRecordPlanDevicesData: TCOutputModel {
        /// 第几页
        public let pageNumber: Int64

        /// 当前页的设备数量
        public let pageSize: Int64

        /// 本次查询的设备通道总数
        public let totalCount: Int64

        /// 设备通道信息列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let list: [RecordPlanChannelInfo]?

        enum CodingKeys: String, CodingKey {
            case pageNumber = "PageNumber"
            case pageSize = "PageSize"
            case totalCount = "TotalCount"
            case list = "List"
        }
    }

    /// 列举子任务列表
    public struct ListSubTasksData: TCOutputModel {
        /// 子任务列表
        public let list: [SubTaskData]

        /// 子任务数量
        public let totalCount: Int64

        enum CodingKeys: String, CodingKey {
            case list = "List"
            case totalCount = "TotalCount"
        }
    }

    /// 查询任务列表
    public struct ListTasksData: TCOutputModel {
        /// 任务列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let list: [TaskData]?

        /// 任务数量
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let totalCount: Int64?

        enum CodingKeys: String, CodingKey {
            case list = "List"
            case totalCount = "TotalCount"
        }
    }

    /// AI识别结果在画面中坐标
    public struct Location: TCOutputModel {
        /// 左上角 X 坐标轴
        public let x: Int64?

        /// 左上角 Y 坐标轴
        public let y: Int64?

        /// 方框宽
        public let width: UInt64?

        /// 方框高
        public let height: UInt64?

        enum CodingKeys: String, CodingKey {
            case x = "X"
            case y = "Y"
            case width = "Width"
            case height = "Height"
        }
    }

    /// AI分析的时间段配置
    public struct OperTimeSlot: TCInputModel, TCOutputModel {
        /// 开始时间。格式为"hh:mm:ss"，且 Start 必须小于 End
        public let start: String?

        /// 结束时间。格式为"hh:mm:ss"，且 Start 必须小于 End
        public let end: String?

        public init(start: String? = nil, end: String? = nil) {
            self.start = start
            self.end = end
        }

        enum CodingKeys: String, CodingKey {
            case start = "Start"
            case end = "End"
        }
    }

    /// 组织目录下的通道信息
    public struct OrganizationChannelInfo: TCOutputModel {
        /// 设备通道所属的设备ID
        public let deviceId: String

        /// 设备通道所属的设备名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceName: String?

        /// 设备通道ID
        public let channelId: String

        /// 设备通道名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let channelName: String?

        /// 该通道是否在上云计划中，如果是，则不能在添加到其他上云计划|true：在上云计划中，false：不在上云计划中
        public let inPlan: Bool

        enum CodingKeys: String, CodingKey {
            case deviceId = "DeviceId"
            case deviceName = "DeviceName"
            case channelId = "ChannelId"
            case channelName = "ChannelName"
            case inPlan = "InPlan"
        }
    }

    /// 宠物识别结果详情
    public struct PetAIResultInfo: TCOutputModel {
        /// 时间字符串
        public let time: String?

        /// 截图 URL
        public let url: String?

        /// 宠物信息
        public let petInfo: [BaseAIResultInfo]?

        enum CodingKeys: String, CodingKey {
            case time = "Time"
            case url = "Url"
            case petInfo = "PetInfo"
        }
    }

    /// 打电话识别结果详情
    public struct PhoneCallAIResultInfo: TCOutputModel {
        /// 时间字符串
        public let time: String?

        /// 截图 URL
        public let url: String?

        /// 打电话信息
        public let phoneCallInfo: [BaseAIResultInfo]?

        enum CodingKeys: String, CodingKey {
            case time = "Time"
            case url = "Url"
            case phoneCallInfo = "PhoneCallInfo"
        }
    }

    /// AI车牌信息
    public struct PlateContent: TCOutputModel {
        /// 车牌号信息
        public let plate: String?

        /// 车牌的颜色
        public let color: String?

        /// 车牌的种类，例如普通蓝牌
        public let type: String?

        /// 截图中坐标信息
        public let location: Location?

        enum CodingKeys: String, CodingKey {
            case plate = "Plate"
            case color = "Color"
            case type = "Type"
            case location = "Location"
        }
    }

    /// 本地录像播放url数据结构
    public struct PlayRecordData: TCOutputModel {
        /// 录像播放地址
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let flv: String?

        enum CodingKeys: String, CodingKey {
            case flv = "Flv"
        }
    }

    /// 实时上云计划基础信息
    public struct RecordPlanBaseInfo: TCOutputModel {
        /// 上云计划ID
        public let planId: String

        /// 上云计划名称
        public let planName: String

        /// 上云模板ID
        public let templateId: String

        /// 上云计划描述
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let describe: String?

        /// 码流类型，default:设备默认码流类型，main:主码流，sub:子码流，其他根据设备能力集自定义
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let streamType: String?

        /// 云文件生命周期
        public let lifeCycle: LifeCycleData

        /// 录像计划状态，1:正常使用中，0:删除中，无法使用
        public let status: Int64

        /// 通道总数
        public let channelCount: Int64

        enum CodingKeys: String, CodingKey {
            case planId = "PlanId"
            case planName = "PlanName"
            case templateId = "TemplateId"
            case describe = "Describe"
            case streamType = "StreamType"
            case lifeCycle = "LifeCycle"
            case status = "Status"
            case channelCount = "ChannelCount"
        }
    }

    /// 计划下的设备通道信息
    public struct RecordPlanChannelInfo: TCOutputModel {
        /// 设备通道所属的设备ID
        public let deviceId: String

        /// 设备通道所属的设备名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceName: String?

        /// 设备通道ID
        public let channelId: String

        /// 设备通道名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let channelName: String?

        /// 所属组织名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let organizationName: String?

        enum CodingKeys: String, CodingKey {
            case deviceId = "DeviceId"
            case deviceName = "DeviceName"
            case channelId = "ChannelId"
            case channelName = "ChannelName"
            case organizationName = "OrganizationName"
        }
    }

    /// 实时上云计划添加和修改的返回数据
    public struct RecordPlanOptData: TCOutputModel {
        /// 上云计划ID
        public let planId: String

        /// 上云计划名称
        public let planName: String

        /// 上云模板ID
        public let templateId: String

        /// 上云计划描述
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let describe: String?

        /// 云文件生命周期
        public let lifeCycle: LifeCycleData

        /// 码流类型，default:设备默认码流类型，main:主码流，sub:子码流，其他根据设备能力集自定义
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let streamType: String?

        enum CodingKeys: String, CodingKey {
            case planId = "PlanId"
            case planName = "PlanName"
            case templateId = "TemplateId"
            case describe = "Describe"
            case lifeCycle = "LifeCycle"
            case streamType = "StreamType"
        }
    }

    /// 云录像回放url
    public struct RecordPlaybackUrl: TCOutputModel {
        /// hls回放url
        public let hls: String?

        enum CodingKeys: String, CodingKey {
            case hls = "Hls"
        }
    }

    /// 取回任务通道信息
    public struct RecordRetrieveTaskChannelInfo: TCOutputModel {
        /// 设备通道所属的设备ID
        public let deviceId: String

        /// 设备通道所属的设备名称
        public let deviceName: String

        /// 设备通道ID
        public let channelId: String

        /// 设备通道名称
        public let channelName: String

        /// 任务状态，0:已取回，1:取回中，2:待取回, 3:无归档录像
        public let status: Int64

        enum CodingKeys: String, CodingKey {
            case deviceId = "DeviceId"
            case deviceName = "DeviceName"
            case channelId = "ChannelId"
            case channelName = "ChannelName"
            case status = "Status"
        }
    }

    /// 录像取回任务详情基础信息
    public struct RecordRetrieveTaskDetailsInfo: TCOutputModel {
        /// 任务ID
        public let taskId: String

        /// 任务名称
        public let taskName: String

        /// 取回录像的开始时间
        public let startTime: UInt64

        /// 取回录像的结束时间
        public let endTime: UInt64

        /// 取回模式，1:极速模式，其他暂不支持
        public let mode: Int64

        /// 副本有效期
        public let expiration: Int64

        /// 任务状态， 0:已取回，1:取回中，2:待取回
        public let status: Int64

        /// 取回容量，单位MB
        public let capacity: Int64

        /// 任务描述
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let describe: String?

        /// 任务通道数量
        public let channelCount: Int64

        enum CodingKeys: String, CodingKey {
            case taskId = "TaskId"
            case taskName = "TaskName"
            case startTime = "StartTime"
            case endTime = "EndTime"
            case mode = "Mode"
            case expiration = "Expiration"
            case status = "Status"
            case capacity = "Capacity"
            case describe = "Describe"
            case channelCount = "ChannelCount"
        }
    }

    /// 录像切片信息
    public struct RecordSliceInfo: TCOutputModel {
        /// 计划ID
        public let planId: String

        /// 录像切片开始和结束时间列表
        public let list: [RecordTimeLine]

        enum CodingKeys: String, CodingKey {
            case planId = "PlanId"
            case list = "List"
        }
    }

    /// 实时上云模板信息数据
    public struct RecordTemplateInfo: TCOutputModel {
        /// 模板ID
        public let templateId: String

        /// 模板名称
        public let templateName: String

        /// 上云时间段，按周进行设置，支持一天设置多个时间段，每个时间段不小于10分钟
        public let timeSections: [RecordTemplateTimeSections]

        enum CodingKeys: String, CodingKey {
            case templateId = "TemplateId"
            case templateName = "TemplateName"
            case timeSections = "TimeSections"
        }
    }

    /// 上云模板的时间片段数据格式
    public struct RecordTemplateTimeSections: TCInputModel, TCOutputModel {
        /// 周日期，取值范围1～7（对应周一～周日
        public let dayOfWeek: Int64

        /// 开始时间，格式：HH:MM:SS，范围：[00:00:00～23:59:59]
        public let startTime: String

        /// 结束时间，格式：HH:MM:SS，范围：[00:00:00～23:59:59]
        public let endTime: String

        public init(dayOfWeek: Int64, startTime: String, endTime: String) {
            self.dayOfWeek = dayOfWeek
            self.startTime = startTime
            self.endTime = endTime
        }

        enum CodingKeys: String, CodingKey {
            case dayOfWeek = "DayOfWeek"
            case startTime = "StartTime"
            case endTime = "EndTime"
        }
    }

    /// 云录像时间片段
    public struct RecordTimeLine: TCOutputModel {
        /// 时间片段开始时间，UTC秒数，例如：1662114146
        public let begin: UInt64?

        /// 时间片段结束时间，UTC秒数，例如：1662114146
        public let end: UInt64?

        enum CodingKeys: String, CodingKey {
            case begin = "Begin"
            case end = "End"
        }
    }

    /// 抽烟识别结果详情
    public struct SmokingAIResultInfo: TCOutputModel {
        /// 时间字符串
        public let time: String?

        /// 截图 URL
        public let url: String?

        /// 抽烟信息
        public let smokingInfo: [BaseAIResultInfo]?

        enum CodingKeys: String, CodingKey {
            case time = "Time"
            case url = "Url"
            case smokingInfo = "SmokingInfo"
        }
    }

    /// 截图配置
    public struct SnapshotConfig: TCInputModel, TCOutputModel {
        /// 截图频率。可选值1～20秒
        public let timeInterval: UInt64?

        /// 模板生效的时间段。最多包含5组时间段
        public let operTimeSlot: [OperTimeSlot]?

        public init(timeInterval: UInt64? = nil, operTimeSlot: [OperTimeSlot]? = nil) {
            self.timeInterval = timeInterval
            self.operTimeSlot = operTimeSlot
        }

        enum CodingKeys: String, CodingKey {
            case timeInterval = "TimeInterval"
            case operTimeSlot = "OperTimeSlot"
        }
    }

    /// 子任务详情
    public struct SubTaskData: TCOutputModel {
        /// 子任务ID
        public let subTaskId: String

        /// 任务状态1:NEW,2:RUNNING,3:COMPLETED ,4:FAILED
        public let status: Int64

        /// 任务失败原因
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let failReason: String?

        /// 任务进度
        public let progress: Float

        /// 操作类型
        public let action: String

        /// 操作类型中文描述
        public let actionZhDesc: String

        /// 资源ID
        public let resourceId: String

        /// 启动任务时间
        public let startedAt: String

        /// 创建任务时间
        public let createdAt: String

        /// 更新任务时间
        public let updatedAt: String

        /// 任务运行时间，单位ms
        public let runtime: Int64

        enum CodingKeys: String, CodingKey {
            case subTaskId = "SubTaskId"
            case status = "Status"
            case failReason = "FailReason"
            case progress = "Progress"
            case action = "Action"
            case actionZhDesc = "ActionZhDesc"
            case resourceId = "ResourceId"
            case startedAt = "StartedAt"
            case createdAt = "CreatedAt"
            case updatedAt = "UpdatedAt"
            case runtime = "Runtime"
        }
    }

    /// 查询复杂任务详情返回结果
    public struct TaskData: TCOutputModel {
        /// 任务ID
        public let taskId: String

        /// 任务状态1:NEW,2:RUNNING,3:COMPLETED ,4:FAILED
        public let status: Int64

        /// 失败原因
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let failReason: String?

        /// 进度（0-1）
        public let progress: Float

        /// 任务操作类型，批量任务类型以Batch开头
        public let action: String

        /// 操作类型中文描述
        public let actionZhDesc: String

        /// 任务类型 1.简单 2.复杂 3.子任务
        public let taskType: Int64

        /// 任务资源id（复杂任务该字段无效）
        public let resourceId: String

        /// 总任务数（仅复杂任务有效）
        public let total: Int64

        /// 成功任务数（仅复杂任务有效）
        public let successCount: Int64

        /// 失败任务数（仅复杂任务有效）
        public let failCount: Int64

        /// 运行任务数（仅复杂任务有效）
        public let runningCount: Int64

        /// 启动任务时间
        public let startedAt: String

        /// 创建任务时间
        public let createdAt: String

        /// 更新任务时间
        public let updatedAt: String

        /// 任务运行时间，单位ms
        public let runtime: Int64

        enum CodingKeys: String, CodingKey {
            case taskId = "TaskId"
            case status = "Status"
            case failReason = "FailReason"
            case progress = "Progress"
            case action = "Action"
            case actionZhDesc = "ActionZhDesc"
            case taskType = "TaskType"
            case resourceId = "ResourceId"
            case total = "Total"
            case successCount = "SuccessCount"
            case failCount = "FailCount"
            case runningCount = "RunningCount"
            case startedAt = "StartedAt"
            case createdAt = "CreatedAt"
            case updatedAt = "UpdatedAt"
            case runtime = "Runtime"
        }
    }

    /// 时间片段结构体
    public struct Timeline: TCOutputModel {
        /// 分片起始时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let begin: Int64?

        /// 分片结束时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let end: Int64?

        enum CodingKeys: String, CodingKey {
            case begin = "Begin"
            case end = "End"
        }
    }

    /// 修改设备接口返回数据
    public struct UpdateDeviceData: TCOutputModel {
        /// 设备ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let deviceId: String?

        /// 设备编码（即我们为设备生成的20位国标编码）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let code: String?

        /// 设备名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let name: String?

        /// 设备接入协议，1:RTMP,2:GB,3:GW
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let accessProtocol: Int64?

        /// 设备类型，1:IPC,2:NVR
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let type: Int64?

        /// 设备接入服务节点ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let clusterId: String?

        /// 设备接入服务节点名称
        ///
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let clusterName: String?

        /// 设备流传输协议，1:UDP,2:TCP
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let transportProtocol: Int64?

        /// 设备密码
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let password: String?

        /// 设备描述
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let description: String?

        /// 设备状态，0:未注册,1:在线,2:离线,3:禁用
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let status: Int64?

        /// 设备所属组织ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let organizationId: Int64?

        /// 设备接入网关ID，从查询网关列表接口中获取（仅网关接入需要）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let gatewayId: String?

        /// 网关接入协议类型，1.海康SDK，2.大华SDK，3.宇视SDK，4.Onvif（仅网关接入需要）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let protocolType: Int64?

        /// 设备接入IP
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let ip: String?

        /// 设备Port
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let port: Int64?

        /// 设备用户名
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let username: String?

        /// 用户Id
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let appId: Int64?

        enum CodingKeys: String, CodingKey {
            case deviceId = "DeviceId"
            case code = "Code"
            case name = "Name"
            case accessProtocol = "AccessProtocol"
            case type = "Type"
            case clusterId = "ClusterId"
            case clusterName = "ClusterName"
            case transportProtocol = "TransportProtocol"
            case password = "Password"
            case description = "Description"
            case status = "Status"
            case organizationId = "OrganizationId"
            case gatewayId = "GatewayId"
            case protocolType = "ProtocolType"
            case ip = "Ip"
            case port = "Port"
            case username = "Username"
            case appId = "AppId"
        }
    }

    /// 修改网关信息返回结果
    public struct UpdateGatewayData: TCOutputModel {
        /// 网关索引ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let gatewayId: String?

        /// 网关编码
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let gwId: String?

        /// 网关名称，仅支持中文、英文、数字、_、-，长度不超过32个字符
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let name: String?

        /// 网关描述，仅支持中文、英文、数字、_、-，长度不超过128个字符
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let description: String?

        /// 服务节点ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let clusterId: String?

        /// 服务节点名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let clusterName: String?

        /// 网关状态，0：离线，1:在线
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let status: Int64?

        /// 激活时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let createdAt: Int64?

        /// 网关密钥
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let secret: String?

        /// 网关版本信息
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let version: String?

        enum CodingKeys: String, CodingKey {
            case gatewayId = "GatewayId"
            case gwId = "GwId"
            case name = "Name"
            case description = "Description"
            case clusterId = "ClusterId"
            case clusterName = "ClusterName"
            case status = "Status"
            case createdAt = "CreatedAt"
            case secret = "Secret"
            case version = "Version"
        }
    }

    /// 修改组织接口返回数据
    public struct UpdateOrgData: TCOutputModel {
        /// 组织 ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let organizationId: String?

        /// 组织名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let name: String?

        /// 组织父节点 ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let parentId: String?

        /// 组织层级
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let level: Int64?

        /// 用户ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let appId: Int64?

        /// 组织结构
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let parentIds: String?

        /// 设备总数
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let total: Int64?

        /// 设备在线数量
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let online: Int64?

        enum CodingKeys: String, CodingKey {
            case organizationId = "OrganizationId"
            case name = "Name"
            case parentId = "ParentId"
            case level = "Level"
            case appId = "AppId"
            case parentIds = "ParentIds"
            case total = "Total"
            case online = "Online"
        }
    }

    /// 修改录像上云计划返回数据
    public struct UpdateRecordBackupPlanData: TCOutputModel {
        /// 录像上云计划ID
        public let planId: String

        /// 录像上云计划名称
        public let planName: String

        /// 录像上云模板ID
        public let templateId: String

        /// 录像上云计划描述
        public let describe: String

        /// 云文件生命周期
        public let lifeCycle: LifeCycleData

        /// 录像上云计划状态，1:正常使用中，0:删除中，无法使用
        public let status: Int64

        /// 通道数量
        public let channelCount: Int64

        /// 创建时间
        public let createAt: String

        /// 修改时间
        public let updateAt: String

        enum CodingKeys: String, CodingKey {
            case planId = "PlanId"
            case planName = "PlanName"
            case templateId = "TemplateId"
            case describe = "Describe"
            case lifeCycle = "LifeCycle"
            case status = "Status"
            case channelCount = "ChannelCount"
            case createAt = "CreateAt"
            case updateAt = "UpdateAt"
        }
    }

    /// 修改录像上云计划数据结构
    public struct UpdateRecordBackupPlanModify: TCInputModel {
        /// 录像计划名称（仅支持中文、英文、数字、_、-，长度不超过32个字符，计划名称全局唯一，不能为空，不能重复，不修改名称时，不需要该字段）
        public let planName: String?

        /// 录制模板ID（从查询录像上云模板列表接口ListRecordBackupTemplates中获取，不修改模板ID时，不需要该字段）
        public let templateId: String?

        /// 录像计划描述（仅支持中文、英文、数字、_、-，长度不超过128个字符， 不修改描述时，不需要该字段）
        public let describe: String?

        /// 生命周期（录像文件生命周期设置，管理文件冷、热存储的时间，不修改生命周期时，不需要该字段）
        public let lifeCycle: LifeCycleData?

        /// 要新增的设备通道（Json数组，没有新增时，不需要该字段，一次添加通道总数不超过5000个，包括组织目录下的通道数量）
        public let add: [ChannelInfo]?

        /// 要删除的设备通道（Json数组，内容为要删除的设备通道id，没有删除设备通道时，不需要该字段）
        public let del: [String]?

        /// 添加组织目录下所有设备通道（Json数组，可以为空，并且通道总数量不超过5000个（包括Add字段通道数量））
        public let organizationId: [String]?

        public init(planName: String? = nil, templateId: String? = nil, describe: String? = nil, lifeCycle: LifeCycleData? = nil, add: [ChannelInfo]? = nil, del: [String]? = nil, organizationId: [String]? = nil) {
            self.planName = planName
            self.templateId = templateId
            self.describe = describe
            self.lifeCycle = lifeCycle
            self.add = add
            self.del = del
            self.organizationId = organizationId
        }

        enum CodingKeys: String, CodingKey {
            case planName = "PlanName"
            case templateId = "TemplateId"
            case describe = "Describe"
            case lifeCycle = "LifeCycle"
            case add = "Add"
            case del = "Del"
            case organizationId = "OrganizationId"
        }
    }

    /// 修改录像上云模版返回数据
    public struct UpdateRecordBackupTemplateData: TCOutputModel {
        /// 模板ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let templateId: String?

        /// 模板名称
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let templateName: String?

        /// 上云时间段（按周进行设置，支持一天设置多个时间段，每个时间段不小于10分钟）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let timeSections: [RecordTemplateTimeSections]?

        /// 录像时间段（按周进行设置，支持一天设置多个时间段，每个时间段不小于10分钟）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let devTimeSections: [RecordTemplateTimeSections]?

        /// 上云倍速（支持1，2，4倍速）
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let scale: Int64?

        /// 创建时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let createAt: String?

        /// 更新时间
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let updateAt: String?

        enum CodingKeys: String, CodingKey {
            case templateId = "TemplateId"
            case templateName = "TemplateName"
            case timeSections = "TimeSections"
            case devTimeSections = "DevTimeSections"
            case scale = "Scale"
            case createAt = "CreateAt"
            case updateAt = "UpdateAt"
        }
    }

    /// 修改录像上云模板数据结构
    public struct UpdateRecordBackupTemplateModify: TCInputModel {
        /// 模板名称（不修改名称时，不需要带该字段）
        public let templateName: String?

        /// 上云时间段（按周进行设置，支持一天设置多个时间段，每个时间段不小于10分钟）
        public let timeSections: [RecordTemplateTimeSections]?

        /// 录像时间段（按周进行设置，支持一天设置多个时间段，每个时间段不小于10分钟）
        public let devTimeSections: [RecordTemplateTimeSections]?

        /// 上云倍速（支持1，2，4倍速）
        public let scale: Int64?

        public init(templateName: String? = nil, timeSections: [RecordTemplateTimeSections]? = nil, devTimeSections: [RecordTemplateTimeSections]? = nil, scale: Int64? = nil) {
            self.templateName = templateName
            self.timeSections = timeSections
            self.devTimeSections = devTimeSections
            self.scale = scale
        }

        enum CodingKeys: String, CodingKey {
            case templateName = "TemplateName"
            case timeSections = "TimeSections"
            case devTimeSections = "DevTimeSections"
            case scale = "Scale"
        }
    }

    /// 修改实时上云录像计划的数据
    public struct UpdateRecordPlanData: TCInputModel {
        /// 上云计划名称，仅支持中文、英文、数字、_、-，长度不超过32个字符，计划名称全局唯一，不能为空，不能重复，不修改名称时，不需要该字段
        public let planName: String?

        /// 上云模板ID，不修改模板ID时，不需要该字段
        public let templateId: String?

        /// 上云计划描述，仅支持中文、英文、数字、_、-，长度不超过128个字符， 不修改描述时，不需要该字段
        public let describe: String?

        /// 码流类型，default:不指定码流类型，以设备默认推送类型为主， main:主码流，sub:子码流，其他根据设备能力集自定义，长度不能超过32个字节
        public let streamType: String?

        /// 生命周期，文件生命周期设置，管理文件冷、热存储的时间，不修改生命周期时，不需要该字段
        public let lifeCycle: LifeCycleData?

        /// 要新增的设备通道,Json数组，没有新增时，不需要该字段，一次添加通道总数不超过5000个，包括组织目录下的通道数量
        public let add: [ChannelInfo]?

        /// 要删除的设备通道，Json数组，内容为要删除的设备通道id，没有删除设备通道时，不需要该字段
        public let del: [String]?

        /// 组织目录ID，添加组织目录下所有设备通道，Json数组，可以为空，并且通道总数量不超过5000个（包括Add字段通道数量）
        public let organizationId: [String]?

        public init(planName: String? = nil, templateId: String? = nil, describe: String? = nil, streamType: String? = nil, lifeCycle: LifeCycleData? = nil, add: [ChannelInfo]? = nil, del: [String]? = nil, organizationId: [String]? = nil) {
            self.planName = planName
            self.templateId = templateId
            self.describe = describe
            self.streamType = streamType
            self.lifeCycle = lifeCycle
            self.add = add
            self.del = del
            self.organizationId = organizationId
        }

        enum CodingKeys: String, CodingKey {
            case planName = "PlanName"
            case templateId = "TemplateId"
            case describe = "Describe"
            case streamType = "StreamType"
            case lifeCycle = "LifeCycle"
            case add = "Add"
            case del = "Del"
            case organizationId = "OrganizationId"
        }
    }

    /// 修改实时上云模板的请求数据结构
    public struct UpdateRecordTemplateData: TCInputModel {
        /// 模板名称， 不修改名称时，不需要带该字段
        public let templateName: String?

        /// 上云时间段，不修改名称时，不需要带该字段
        public let timeSections: [RecordTemplateTimeSections]?

        public init(templateName: String? = nil, timeSections: [RecordTemplateTimeSections]? = nil) {
            self.templateName = templateName
            self.timeSections = timeSections
        }

        enum CodingKeys: String, CodingKey {
            case templateName = "TemplateName"
            case timeSections = "TimeSections"
        }
    }
}
