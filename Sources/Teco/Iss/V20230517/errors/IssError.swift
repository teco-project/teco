//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import TecoCore

/// Service error type returned by `Iss`.
public protocol TCIssErrorType: TCServiceErrorType {
    /// Get the service error as ``TCIssError``.
    ///
    /// - Returns: ``TCIssError`` that holds the same error code and context.
    func asIssError() -> TCIssError
}

public struct TCIssError: TCIssErrorType {
    enum Code: String {
        case failedOperation = "FailedOperation"
        case failedOperation_AITaskStatusIsOff = "FailedOperation.AITaskStatusIsOff"
        case failedOperation_AITaskStatusIsOn = "FailedOperation.AITaskStatusIsOn"
        case failedOperation_DeviceResponseTimeOut = "FailedOperation.DeviceResponseTimeOut"
        case failedOperation_DeviceResultTimeOut = "FailedOperation.DeviceResultTimeOut"
        case failedOperation_NoMatchedCname = "FailedOperation.NoMatchedCname"
        case invalidParameter = "InvalidParameter"
        case invalidParameterValue = "InvalidParameterValue"
        case invalidParameterValue_BakTimeNotEnough = "InvalidParameterValue.BakTimeNotEnough"
        case invalidParameterValue_CallbackURLContainIllegalCharacter = "InvalidParameterValue.CallbackURLContainIllegalCharacter"
        case invalidParameterValue_ChannelIdAlreadyExistsInOtherAITasks = "InvalidParameterValue.ChannelIdAlreadyExistsInOtherAITasks"
        case invalidParameterValue_ChannelIdMustBeNotEmpty = "InvalidParameterValue.ChannelIdMustBeNotEmpty"
        case invalidParameterValue_ChannelListContainIllegalCharacter = "InvalidParameterValue.ChannelListContainIllegalCharacter"
        case invalidParameterValue_ChannelListMustBeNotEmpty = "InvalidParameterValue.ChannelListMustBeNotEmpty"
        case invalidParameterValue_ChannelNumberMustBeLessThanOneThousand = "InvalidParameterValue.ChannelNumberMustBeLessThanOneThousand"
        case invalidParameterValue_ContainInvalidChannelId = "InvalidParameterValue.ContainInvalidChannelId"
        case invalidParameterValue_DataOutOfRange = "InvalidParameterValue.DataOutOfRange"
        case invalidParameterValue_DeviceMismatchChannel = "InvalidParameterValue.DeviceMismatchChannel"
        case invalidParameterValue_EmptyChannelId = "InvalidParameterValue.EmptyChannelId"
        case invalidParameterValue_EmptyDeviceId = "InvalidParameterValue.EmptyDeviceId"
        case invalidParameterValue_EmptyName = "InvalidParameterValue.EmptyName"
        case invalidParameterValue_EmptyOrganizationId = "InvalidParameterValue.EmptyOrganizationId"
        case invalidParameterValue_EmptyTemplateId = "InvalidParameterValue.EmptyTemplateId"
        case invalidParameterValue_EndTimeZero = "InvalidParameterValue.EndTimeZero"
        case invalidParameterValue_HasDuplicateOperTimeSlot = "InvalidParameterValue.HasDuplicateOperTimeSlot"
        case invalidParameterValue_IllegalChannelId = "InvalidParameterValue.IllegalChannelId"
        case invalidParameterValue_IllegalDescribe = "InvalidParameterValue.IllegalDescribe"
        case invalidParameterValue_IllegalDeviceId = "InvalidParameterValue.IllegalDeviceId"
        case invalidParameterValue_IllegalName = "InvalidParameterValue.IllegalName"
        case invalidParameterValue_IllegalOrganizationId = "InvalidParameterValue.IllegalOrganizationId"
        case invalidParameterValue_IllegalStreamType = "InvalidParameterValue.IllegalStreamType"
        case invalidParameterValue_InvalidAITaskDesc = "InvalidParameterValue.InvalidAITaskDesc"
        case invalidParameterValue_InvalidAITaskID = "InvalidParameterValue.InvalidAITaskID"
        case invalidParameterValue_InvalidAITaskName = "InvalidParameterValue.InvalidAITaskName"
        case invalidParameterValue_InvalidAITaskStatus = "InvalidParameterValue.InvalidAITaskStatus"
        case invalidParameterValue_InvalidAccessProtocol = "InvalidParameterValue.InvalidAccessProtocol"
        case invalidParameterValue_InvalidBeginAndEndTime = "InvalidParameterValue.InvalidBeginAndEndTime"
        case invalidParameterValue_InvalidBeginTime = "InvalidParameterValue.InvalidBeginTime"
        case invalidParameterValue_InvalidChannelId = "InvalidParameterValue.InvalidChannelId"
        case invalidParameterValue_InvalidChannelIdOrDeviceId = "InvalidParameterValue.InvalidChannelIdOrDeviceId"
        case invalidParameterValue_InvalidChannelName = "InvalidParameterValue.InvalidChannelName"
        case invalidParameterValue_InvalidClusterId = "InvalidParameterValue.InvalidClusterId"
        case invalidParameterValue_InvalidDescription = "InvalidParameterValue.InvalidDescription"
        case invalidParameterValue_InvalidDetectType = "InvalidParameterValue.InvalidDetectType"
        case invalidParameterValue_InvalidDeviceId = "InvalidParameterValue.InvalidDeviceId"
        case invalidParameterValue_InvalidDeviceName = "InvalidParameterValue.InvalidDeviceName"
        case invalidParameterValue_InvalidDevicePasswordLength = "InvalidParameterValue.InvalidDevicePasswordLength"
        case invalidParameterValue_InvalidDeviceStatus = "InvalidParameterValue.InvalidDeviceStatus"
        case invalidParameterValue_InvalidDeviceType = "InvalidParameterValue.InvalidDeviceType"
        case invalidParameterValue_InvalidDomain = "InvalidParameterValue.InvalidDomain"
        case invalidParameterValue_InvalidEndTime = "InvalidParameterValue.InvalidEndTime"
        case invalidParameterValue_InvalidExpiration = "InvalidParameterValue.InvalidExpiration"
        case invalidParameterValue_InvalidExpirationRange = "InvalidParameterValue.InvalidExpirationRange"
        case invalidParameterValue_InvalidFileType = "InvalidParameterValue.InvalidFileType"
        case invalidParameterValue_InvalidGatewayId = "InvalidParameterValue.InvalidGatewayId"
        case invalidParameterValue_InvalidGatewayProtocolType = "InvalidParameterValue.InvalidGatewayProtocolType"
        case invalidParameterValue_InvalidIpv4 = "InvalidParameterValue.InvalidIpv4"
        case invalidParameterValue_InvalidName = "InvalidParameterValue.InvalidName"
        case invalidParameterValue_InvalidOperTimeSlotFormat = "InvalidParameterValue.InvalidOperTimeSlotFormat"
        case invalidParameterValue_InvalidOrgName = "InvalidParameterValue.InvalidOrgName"
        case invalidParameterValue_InvalidOrganizationId = "InvalidParameterValue.InvalidOrganizationId"
        case invalidParameterValue_InvalidPageNumber = "InvalidParameterValue.InvalidPageNumber"
        case invalidParameterValue_InvalidPageSize = "InvalidParameterValue.InvalidPageSize"
        case invalidParameterValue_InvalidPlanId = "InvalidParameterValue.InvalidPlanId"
        case invalidParameterValue_InvalidPullState = "InvalidParameterValue.InvalidPullState"
        case invalidParameterValue_InvalidPushState = "InvalidParameterValue.InvalidPushState"
        case invalidParameterValue_InvalidRetrievalMode = "InvalidParameterValue.InvalidRetrievalMode"
        case invalidParameterValue_InvalidRetrieveTaskId = "InvalidParameterValue.InvalidRetrieveTaskId"
        case invalidParameterValue_InvalidSecret = "InvalidParameterValue.InvalidSecret"
        case invalidParameterValue_InvalidStartTimeOrEndTime = "InvalidParameterValue.InvalidStartTimeOrEndTime"
        case invalidParameterValue_InvalidStreamType = "InvalidParameterValue.InvalidStreamType"
        case invalidParameterValue_InvalidTemplateId = "InvalidParameterValue.InvalidTemplateId"
        case invalidParameterValue_InvalidTemplateTag = "InvalidParameterValue.InvalidTemplateTag"
        case invalidParameterValue_InvalidTimeFormat = "InvalidParameterValue.InvalidTimeFormat"
        case invalidParameterValue_InvalidTimeInterval = "InvalidParameterValue.InvalidTimeInterval"
        case invalidParameterValue_InvalidTimeSectionValue = "InvalidParameterValue.InvalidTimeSectionValue"
        case invalidParameterValue_InvalidTransitionRange = "InvalidParameterValue.InvalidTransitionRange"
        case invalidParameterValue_InvalidUsername = "InvalidParameterValue.InvalidUsername"
        case invalidParameterValue_NonSameDay = "InvalidParameterValue.NonSameDay"
        case invalidParameterValue_ObjectContainIllegalCharacter = "InvalidParameterValue.ObjectContainIllegalCharacter"
        case invalidParameterValue_OperTimeSlotContainIllegalCharacter = "InvalidParameterValue.OperTimeSlotContainIllegalCharacter"
        case invalidParameterValue_OperTimeSlotNumberMustBeLessThanFive = "InvalidParameterValue.OperTimeSlotNumberMustBeLessThanFive"
        case invalidParameterValue_OperTimeSlotStartMustBeLessThanEnd = "InvalidParameterValue.OperTimeSlotStartMustBeLessThanEnd"
        case invalidParameterValue_OrgNameRepeat = "InvalidParameterValue.OrgNameRepeat"
        case invalidParameterValue_OrganizationCountExceedsRange = "InvalidParameterValue.OrganizationCountExceedsRange"
        case invalidParameterValue_OutOfTimeRange = "InvalidParameterValue.OutOfTimeRange"
        case invalidParameterValue_PlanChannelsExceedsRange = "InvalidParameterValue.PlanChannelsExceedsRange"
        case invalidParameterValue_RetrieveTaskChannelsExceedsRange = "InvalidParameterValue.RetrieveTaskChannelsExceedsRange"
        case invalidParameterValue_StartOverEndTime = "InvalidParameterValue.StartOverEndTime"
        case invalidParameterValue_StartOverNowTime = "InvalidParameterValue.StartOverNowTime"
        case invalidParameterValue_StartTimeGreaterThanOrEqualEndTime = "InvalidParameterValue.StartTimeGreaterThanOrEqualEndTime"
        case invalidParameterValue_StartTimeZero = "InvalidParameterValue.StartTimeZero"
        case invalidParameterValue_StatusMustBeNotEmpty = "InvalidParameterValue.StatusMustBeNotEmpty"
        case invalidParameterValue_TemplateTagMustBeConsistent = "InvalidParameterValue.TemplateTagMustBeConsistent"
        case invalidParameterValue_TimeLessThanTenMinutes = "InvalidParameterValue.TimeLessThanTenMinutes"
        case invalidParameterValue_TooLongDescribe = "InvalidParameterValue.TooLongDescribe"
        case invalidParameterValue_TooLongName = "InvalidParameterValue.TooLongName"
        case invalidParameterValue_TooLongStreamType = "InvalidParameterValue.TooLongStreamType"
        case invalidParameterValue_UnSupportScale = "InvalidParameterValue.UnSupportScale"
        case invalidParameterValue_UnSupportedAccessType = "InvalidParameterValue.UnSupportedAccessType"
        case invalidParameterValue_UnSupportedPTZCMD = "InvalidParameterValue.UnSupportedPTZCMD"
        case invalidParameterValue_UnSupportedPresetCMD = "InvalidParameterValue.UnSupportedPresetCMD"
        case invalidParameterValue_UnSupportedScaleParam = "InvalidParameterValue.UnSupportedScaleParam"
        case invalidParameterValue_UnsupportedStreamProtocol = "InvalidParameterValue.UnsupportedStreamProtocol"
        case invalidParameter_DownloadUrlError = "InvalidParameter.DownloadUrlError"
        case invalidParameter_DownloadUrlHasExpired = "InvalidParameter.DownloadUrlHasExpired"
        case invalidParameter_InvalidBodyFormat = "InvalidParameter.InvalidBodyFormat"
        case invalidParameter_InvalidChannels = "InvalidParameter.InvalidChannels"
        case invalidParameter_InvalidLifeRuleParam = "InvalidParameter.InvalidLifeRuleParam"
        case invalidParameter_InvalidOrganizationParam = "InvalidParameter.InvalidOrganizationParam"
        case invalidParameter_InvalidTimeSection = "InvalidParameter.InvalidTimeSection"
        case missingParameter_EmptyTimeSection = "MissingParameter.EmptyTimeSection"
        case missingParameter_MissingLifeRuleParam = "MissingParameter.MissingLifeRuleParam"
        case missingParameter_MissingRetrieveTaskParam = "MissingParameter.MissingRetrieveTaskParam"
        case missingParameter_MissingUpdatedInfo = "MissingParameter.MissingUpdatedInfo"
        case operationDenied_BandwidthLimitZero = "OperationDenied.BandwidthLimitZero"
        case operationDenied_ConcurrentDownloadsOverLimit = "OperationDenied.ConcurrentDownloadsOverLimit"
        case operationDenied_ConnectsLimitZero = "OperationDenied.ConnectsLimitZero"
        case resourceInUse_ChannelRepeatAdd = "ResourceInUse.ChannelRepeatAdd"
        case resourceInUse_PlanDeleting = "ResourceInUse.PlanDeleting"
        case resourceInUse_PlanLinkTemplate = "ResourceInUse.PlanLinkTemplate"
        case resourceInUse_PlanNameRepeat = "ResourceInUse.PlanNameRepeat"
        case resourceInUse_RetrieveTaskExecuting = "ResourceInUse.RetrieveTaskExecuting"
        case resourceInUse_RetrieveTaskNameRepeat = "ResourceInUse.RetrieveTaskNameRepeat"
        case resourceInUse_TemplateNameRepeat = "ResourceInUse.TemplateNameRepeat"
        case resourceNotFound = "ResourceNotFound"
        case resourceNotFound_AITaskNotExisted = "ResourceNotFound.AITaskNotExisted"
        case resourceNotFound_ChannelNotExist = "ResourceNotFound.ChannelNotExist"
        case resourceNotFound_DeviceNotExist = "ResourceNotFound.DeviceNotExist"
        case resourceNotFound_NotFoundCluster = "ResourceNotFound.NotFoundCluster"
        case resourceNotFound_OrganizationIdNotExist = "ResourceNotFound.OrganizationIdNotExist"
        case resourceNotFound_PlanNotExist = "ResourceNotFound.PlanNotExist"
        case resourceNotFound_RetrieveTaskNotExist = "ResourceNotFound.RetrieveTaskNotExist"
        case resourceNotFound_TemplateNotExist = "ResourceNotFound.TemplateNotExist"
        case resourceNotFound_VideoNotFound = "ResourceNotFound.VideoNotFound"
        case resourceUnavailable_ChannelOffline = "ResourceUnavailable.ChannelOffline"
        case resourceUnavailable_DevDisable = "ResourceUnavailable.DevDisable"
        case resourceUnavailable_DevNoRegister = "ResourceUnavailable.DevNoRegister"
        case resourceUnavailable_DevOffline = "ResourceUnavailable.DevOffline"
        case resourceUnavailable_DomainNotRecord = "ResourceUnavailable.DomainNotRecord"
        case resourceUnavailable_VideoArchived = "ResourceUnavailable.VideoArchived"
        case unsupportedOperation_OrgLinkDev = "UnsupportedOperation.OrgLinkDev"
        case unsupportedOperation_OrgLinkOrg = "UnsupportedOperation.OrgLinkOrg"
        case unsupportedOperation_ScaleAndPosBothExist = "UnsupportedOperation.ScaleAndPosBothExist"
        case unsupportedOperation_StreamTypeOrResolution = "UnsupportedOperation.StreamTypeOrResolution"
    }

    /// Error domains affliated to ``TCIssError``.
    public static var domains: [TCErrorType.Type] {
        [
            FailedOperation.self,
            InvalidParameter.self,
            InvalidParameterValue.self,
            MissingParameter.self,
            OperationDenied.self,
            ResourceInUse.self,
            ResourceNotFound.self,
            ResourceUnavailable.self,
            UnsupportedOperation.self
        ]
    }

    private let error: Code

    public let context: TCErrorContext?

    public var errorCode: String {
        self.error.rawValue
    }

    /// Initializer used by ``TCClient`` to match an error of this type.
    public init?(errorCode: String, context: TCErrorContext) {
        guard let error = Code(rawValue: errorCode) else {
            return nil
        }
        self.error = error
        self.context = context
    }

    internal init(_ error: Code, context: TCErrorContext? = nil) {
        self.error = error
        self.context = context
    }

    public static var failedOperation: TCIssError {
        TCIssError(.failedOperation)
    }

    public static var failedOperation_AITaskStatusIsOff: TCIssError {
        TCIssError(.failedOperation_AITaskStatusIsOff)
    }

    public static var failedOperation_AITaskStatusIsOn: TCIssError {
        TCIssError(.failedOperation_AITaskStatusIsOn)
    }

    public static var failedOperation_DeviceResponseTimeOut: TCIssError {
        TCIssError(.failedOperation_DeviceResponseTimeOut)
    }

    public static var failedOperation_DeviceResultTimeOut: TCIssError {
        TCIssError(.failedOperation_DeviceResultTimeOut)
    }

    public static var failedOperation_NoMatchedCname: TCIssError {
        TCIssError(.failedOperation_NoMatchedCname)
    }

    public static var invalidParameter: TCIssError {
        TCIssError(.invalidParameter)
    }

    public static var invalidParameterValue: TCIssError {
        TCIssError(.invalidParameterValue)
    }

    public static var invalidParameterValue_BakTimeNotEnough: TCIssError {
        TCIssError(.invalidParameterValue_BakTimeNotEnough)
    }

    public static var invalidParameterValue_CallbackURLContainIllegalCharacter: TCIssError {
        TCIssError(.invalidParameterValue_CallbackURLContainIllegalCharacter)
    }

    public static var invalidParameterValue_ChannelIdAlreadyExistsInOtherAITasks: TCIssError {
        TCIssError(.invalidParameterValue_ChannelIdAlreadyExistsInOtherAITasks)
    }

    public static var invalidParameterValue_ChannelIdMustBeNotEmpty: TCIssError {
        TCIssError(.invalidParameterValue_ChannelIdMustBeNotEmpty)
    }

    public static var invalidParameterValue_ChannelListContainIllegalCharacter: TCIssError {
        TCIssError(.invalidParameterValue_ChannelListContainIllegalCharacter)
    }

    public static var invalidParameterValue_ChannelListMustBeNotEmpty: TCIssError {
        TCIssError(.invalidParameterValue_ChannelListMustBeNotEmpty)
    }

    public static var invalidParameterValue_ChannelNumberMustBeLessThanOneThousand: TCIssError {
        TCIssError(.invalidParameterValue_ChannelNumberMustBeLessThanOneThousand)
    }

    public static var invalidParameterValue_ContainInvalidChannelId: TCIssError {
        TCIssError(.invalidParameterValue_ContainInvalidChannelId)
    }

    public static var invalidParameterValue_DataOutOfRange: TCIssError {
        TCIssError(.invalidParameterValue_DataOutOfRange)
    }

    public static var invalidParameterValue_DeviceMismatchChannel: TCIssError {
        TCIssError(.invalidParameterValue_DeviceMismatchChannel)
    }

    public static var invalidParameterValue_EmptyChannelId: TCIssError {
        TCIssError(.invalidParameterValue_EmptyChannelId)
    }

    public static var invalidParameterValue_EmptyDeviceId: TCIssError {
        TCIssError(.invalidParameterValue_EmptyDeviceId)
    }

    public static var invalidParameterValue_EmptyName: TCIssError {
        TCIssError(.invalidParameterValue_EmptyName)
    }

    public static var invalidParameterValue_EmptyOrganizationId: TCIssError {
        TCIssError(.invalidParameterValue_EmptyOrganizationId)
    }

    public static var invalidParameterValue_EmptyTemplateId: TCIssError {
        TCIssError(.invalidParameterValue_EmptyTemplateId)
    }

    public static var invalidParameterValue_EndTimeZero: TCIssError {
        TCIssError(.invalidParameterValue_EndTimeZero)
    }

    public static var invalidParameterValue_HasDuplicateOperTimeSlot: TCIssError {
        TCIssError(.invalidParameterValue_HasDuplicateOperTimeSlot)
    }

    public static var invalidParameterValue_IllegalChannelId: TCIssError {
        TCIssError(.invalidParameterValue_IllegalChannelId)
    }

    public static var invalidParameterValue_IllegalDescribe: TCIssError {
        TCIssError(.invalidParameterValue_IllegalDescribe)
    }

    public static var invalidParameterValue_IllegalDeviceId: TCIssError {
        TCIssError(.invalidParameterValue_IllegalDeviceId)
    }

    public static var invalidParameterValue_IllegalName: TCIssError {
        TCIssError(.invalidParameterValue_IllegalName)
    }

    public static var invalidParameterValue_IllegalOrganizationId: TCIssError {
        TCIssError(.invalidParameterValue_IllegalOrganizationId)
    }

    public static var invalidParameterValue_IllegalStreamType: TCIssError {
        TCIssError(.invalidParameterValue_IllegalStreamType)
    }

    public static var invalidParameterValue_InvalidAITaskDesc: TCIssError {
        TCIssError(.invalidParameterValue_InvalidAITaskDesc)
    }

    public static var invalidParameterValue_InvalidAITaskID: TCIssError {
        TCIssError(.invalidParameterValue_InvalidAITaskID)
    }

    public static var invalidParameterValue_InvalidAITaskName: TCIssError {
        TCIssError(.invalidParameterValue_InvalidAITaskName)
    }

    public static var invalidParameterValue_InvalidAITaskStatus: TCIssError {
        TCIssError(.invalidParameterValue_InvalidAITaskStatus)
    }

    public static var invalidParameterValue_InvalidAccessProtocol: TCIssError {
        TCIssError(.invalidParameterValue_InvalidAccessProtocol)
    }

    public static var invalidParameterValue_InvalidBeginAndEndTime: TCIssError {
        TCIssError(.invalidParameterValue_InvalidBeginAndEndTime)
    }

    public static var invalidParameterValue_InvalidBeginTime: TCIssError {
        TCIssError(.invalidParameterValue_InvalidBeginTime)
    }

    public static var invalidParameterValue_InvalidChannelId: TCIssError {
        TCIssError(.invalidParameterValue_InvalidChannelId)
    }

    public static var invalidParameterValue_InvalidChannelIdOrDeviceId: TCIssError {
        TCIssError(.invalidParameterValue_InvalidChannelIdOrDeviceId)
    }

    public static var invalidParameterValue_InvalidChannelName: TCIssError {
        TCIssError(.invalidParameterValue_InvalidChannelName)
    }

    public static var invalidParameterValue_InvalidClusterId: TCIssError {
        TCIssError(.invalidParameterValue_InvalidClusterId)
    }

    public static var invalidParameterValue_InvalidDescription: TCIssError {
        TCIssError(.invalidParameterValue_InvalidDescription)
    }

    public static var invalidParameterValue_InvalidDetectType: TCIssError {
        TCIssError(.invalidParameterValue_InvalidDetectType)
    }

    public static var invalidParameterValue_InvalidDeviceId: TCIssError {
        TCIssError(.invalidParameterValue_InvalidDeviceId)
    }

    public static var invalidParameterValue_InvalidDeviceName: TCIssError {
        TCIssError(.invalidParameterValue_InvalidDeviceName)
    }

    public static var invalidParameterValue_InvalidDevicePasswordLength: TCIssError {
        TCIssError(.invalidParameterValue_InvalidDevicePasswordLength)
    }

    public static var invalidParameterValue_InvalidDeviceStatus: TCIssError {
        TCIssError(.invalidParameterValue_InvalidDeviceStatus)
    }

    public static var invalidParameterValue_InvalidDeviceType: TCIssError {
        TCIssError(.invalidParameterValue_InvalidDeviceType)
    }

    public static var invalidParameterValue_InvalidDomain: TCIssError {
        TCIssError(.invalidParameterValue_InvalidDomain)
    }

    public static var invalidParameterValue_InvalidEndTime: TCIssError {
        TCIssError(.invalidParameterValue_InvalidEndTime)
    }

    public static var invalidParameterValue_InvalidExpiration: TCIssError {
        TCIssError(.invalidParameterValue_InvalidExpiration)
    }

    public static var invalidParameterValue_InvalidExpirationRange: TCIssError {
        TCIssError(.invalidParameterValue_InvalidExpirationRange)
    }

    public static var invalidParameterValue_InvalidFileType: TCIssError {
        TCIssError(.invalidParameterValue_InvalidFileType)
    }

    public static var invalidParameterValue_InvalidGatewayId: TCIssError {
        TCIssError(.invalidParameterValue_InvalidGatewayId)
    }

    public static var invalidParameterValue_InvalidGatewayProtocolType: TCIssError {
        TCIssError(.invalidParameterValue_InvalidGatewayProtocolType)
    }

    public static var invalidParameterValue_InvalidIpv4: TCIssError {
        TCIssError(.invalidParameterValue_InvalidIpv4)
    }

    public static var invalidParameterValue_InvalidName: TCIssError {
        TCIssError(.invalidParameterValue_InvalidName)
    }

    public static var invalidParameterValue_InvalidOperTimeSlotFormat: TCIssError {
        TCIssError(.invalidParameterValue_InvalidOperTimeSlotFormat)
    }

    public static var invalidParameterValue_InvalidOrgName: TCIssError {
        TCIssError(.invalidParameterValue_InvalidOrgName)
    }

    public static var invalidParameterValue_InvalidOrganizationId: TCIssError {
        TCIssError(.invalidParameterValue_InvalidOrganizationId)
    }

    public static var invalidParameterValue_InvalidPageNumber: TCIssError {
        TCIssError(.invalidParameterValue_InvalidPageNumber)
    }

    public static var invalidParameterValue_InvalidPageSize: TCIssError {
        TCIssError(.invalidParameterValue_InvalidPageSize)
    }

    public static var invalidParameterValue_InvalidPlanId: TCIssError {
        TCIssError(.invalidParameterValue_InvalidPlanId)
    }

    public static var invalidParameterValue_InvalidPullState: TCIssError {
        TCIssError(.invalidParameterValue_InvalidPullState)
    }

    public static var invalidParameterValue_InvalidPushState: TCIssError {
        TCIssError(.invalidParameterValue_InvalidPushState)
    }

    public static var invalidParameterValue_InvalidRetrievalMode: TCIssError {
        TCIssError(.invalidParameterValue_InvalidRetrievalMode)
    }

    public static var invalidParameterValue_InvalidRetrieveTaskId: TCIssError {
        TCIssError(.invalidParameterValue_InvalidRetrieveTaskId)
    }

    public static var invalidParameterValue_InvalidSecret: TCIssError {
        TCIssError(.invalidParameterValue_InvalidSecret)
    }

    public static var invalidParameterValue_InvalidStartTimeOrEndTime: TCIssError {
        TCIssError(.invalidParameterValue_InvalidStartTimeOrEndTime)
    }

    public static var invalidParameterValue_InvalidStreamType: TCIssError {
        TCIssError(.invalidParameterValue_InvalidStreamType)
    }

    public static var invalidParameterValue_InvalidTemplateId: TCIssError {
        TCIssError(.invalidParameterValue_InvalidTemplateId)
    }

    public static var invalidParameterValue_InvalidTemplateTag: TCIssError {
        TCIssError(.invalidParameterValue_InvalidTemplateTag)
    }

    public static var invalidParameterValue_InvalidTimeFormat: TCIssError {
        TCIssError(.invalidParameterValue_InvalidTimeFormat)
    }

    public static var invalidParameterValue_InvalidTimeInterval: TCIssError {
        TCIssError(.invalidParameterValue_InvalidTimeInterval)
    }

    public static var invalidParameterValue_InvalidTimeSectionValue: TCIssError {
        TCIssError(.invalidParameterValue_InvalidTimeSectionValue)
    }

    public static var invalidParameterValue_InvalidTransitionRange: TCIssError {
        TCIssError(.invalidParameterValue_InvalidTransitionRange)
    }

    public static var invalidParameterValue_InvalidUsername: TCIssError {
        TCIssError(.invalidParameterValue_InvalidUsername)
    }

    public static var invalidParameterValue_NonSameDay: TCIssError {
        TCIssError(.invalidParameterValue_NonSameDay)
    }

    public static var invalidParameterValue_ObjectContainIllegalCharacter: TCIssError {
        TCIssError(.invalidParameterValue_ObjectContainIllegalCharacter)
    }

    public static var invalidParameterValue_OperTimeSlotContainIllegalCharacter: TCIssError {
        TCIssError(.invalidParameterValue_OperTimeSlotContainIllegalCharacter)
    }

    public static var invalidParameterValue_OperTimeSlotNumberMustBeLessThanFive: TCIssError {
        TCIssError(.invalidParameterValue_OperTimeSlotNumberMustBeLessThanFive)
    }

    public static var invalidParameterValue_OperTimeSlotStartMustBeLessThanEnd: TCIssError {
        TCIssError(.invalidParameterValue_OperTimeSlotStartMustBeLessThanEnd)
    }

    public static var invalidParameterValue_OrgNameRepeat: TCIssError {
        TCIssError(.invalidParameterValue_OrgNameRepeat)
    }

    public static var invalidParameterValue_OrganizationCountExceedsRange: TCIssError {
        TCIssError(.invalidParameterValue_OrganizationCountExceedsRange)
    }

    /// 检查BeginTime开始时间和BndTime结束时间，时间长度大于0且不超过30分钟
    public static var invalidParameterValue_OutOfTimeRange: TCIssError {
        TCIssError(.invalidParameterValue_OutOfTimeRange)
    }

    public static var invalidParameterValue_PlanChannelsExceedsRange: TCIssError {
        TCIssError(.invalidParameterValue_PlanChannelsExceedsRange)
    }

    public static var invalidParameterValue_RetrieveTaskChannelsExceedsRange: TCIssError {
        TCIssError(.invalidParameterValue_RetrieveTaskChannelsExceedsRange)
    }

    public static var invalidParameterValue_StartOverEndTime: TCIssError {
        TCIssError(.invalidParameterValue_StartOverEndTime)
    }

    public static var invalidParameterValue_StartOverNowTime: TCIssError {
        TCIssError(.invalidParameterValue_StartOverNowTime)
    }

    public static var invalidParameterValue_StartTimeGreaterThanOrEqualEndTime: TCIssError {
        TCIssError(.invalidParameterValue_StartTimeGreaterThanOrEqualEndTime)
    }

    public static var invalidParameterValue_StartTimeZero: TCIssError {
        TCIssError(.invalidParameterValue_StartTimeZero)
    }

    public static var invalidParameterValue_StatusMustBeNotEmpty: TCIssError {
        TCIssError(.invalidParameterValue_StatusMustBeNotEmpty)
    }

    public static var invalidParameterValue_TemplateTagMustBeConsistent: TCIssError {
        TCIssError(.invalidParameterValue_TemplateTagMustBeConsistent)
    }

    public static var invalidParameterValue_TimeLessThanTenMinutes: TCIssError {
        TCIssError(.invalidParameterValue_TimeLessThanTenMinutes)
    }

    public static var invalidParameterValue_TooLongDescribe: TCIssError {
        TCIssError(.invalidParameterValue_TooLongDescribe)
    }

    public static var invalidParameterValue_TooLongName: TCIssError {
        TCIssError(.invalidParameterValue_TooLongName)
    }

    public static var invalidParameterValue_TooLongStreamType: TCIssError {
        TCIssError(.invalidParameterValue_TooLongStreamType)
    }

    public static var invalidParameterValue_UnSupportScale: TCIssError {
        TCIssError(.invalidParameterValue_UnSupportScale)
    }

    public static var invalidParameterValue_UnSupportedAccessType: TCIssError {
        TCIssError(.invalidParameterValue_UnSupportedAccessType)
    }

    public static var invalidParameterValue_UnSupportedPTZCMD: TCIssError {
        TCIssError(.invalidParameterValue_UnSupportedPTZCMD)
    }

    public static var invalidParameterValue_UnSupportedPresetCMD: TCIssError {
        TCIssError(.invalidParameterValue_UnSupportedPresetCMD)
    }

    public static var invalidParameterValue_UnSupportedScaleParam: TCIssError {
        TCIssError(.invalidParameterValue_UnSupportedScaleParam)
    }

    public static var invalidParameterValue_UnsupportedStreamProtocol: TCIssError {
        TCIssError(.invalidParameterValue_UnsupportedStreamProtocol)
    }

    public static var invalidParameter_DownloadUrlError: TCIssError {
        TCIssError(.invalidParameter_DownloadUrlError)
    }

    public static var invalidParameter_DownloadUrlHasExpired: TCIssError {
        TCIssError(.invalidParameter_DownloadUrlHasExpired)
    }

    public static var invalidParameter_InvalidBodyFormat: TCIssError {
        TCIssError(.invalidParameter_InvalidBodyFormat)
    }

    public static var invalidParameter_InvalidChannels: TCIssError {
        TCIssError(.invalidParameter_InvalidChannels)
    }

    public static var invalidParameter_InvalidLifeRuleParam: TCIssError {
        TCIssError(.invalidParameter_InvalidLifeRuleParam)
    }

    public static var invalidParameter_InvalidOrganizationParam: TCIssError {
        TCIssError(.invalidParameter_InvalidOrganizationParam)
    }

    public static var invalidParameter_InvalidTimeSection: TCIssError {
        TCIssError(.invalidParameter_InvalidTimeSection)
    }

    public static var missingParameter_EmptyTimeSection: TCIssError {
        TCIssError(.missingParameter_EmptyTimeSection)
    }

    public static var missingParameter_MissingLifeRuleParam: TCIssError {
        TCIssError(.missingParameter_MissingLifeRuleParam)
    }

    public static var missingParameter_MissingRetrieveTaskParam: TCIssError {
        TCIssError(.missingParameter_MissingRetrieveTaskParam)
    }

    public static var missingParameter_MissingUpdatedInfo: TCIssError {
        TCIssError(.missingParameter_MissingUpdatedInfo)
    }

    public static var operationDenied_BandwidthLimitZero: TCIssError {
        TCIssError(.operationDenied_BandwidthLimitZero)
    }

    public static var operationDenied_ConcurrentDownloadsOverLimit: TCIssError {
        TCIssError(.operationDenied_ConcurrentDownloadsOverLimit)
    }

    public static var operationDenied_ConnectsLimitZero: TCIssError {
        TCIssError(.operationDenied_ConnectsLimitZero)
    }

    public static var resourceInUse_ChannelRepeatAdd: TCIssError {
        TCIssError(.resourceInUse_ChannelRepeatAdd)
    }

    public static var resourceInUse_PlanDeleting: TCIssError {
        TCIssError(.resourceInUse_PlanDeleting)
    }

    public static var resourceInUse_PlanLinkTemplate: TCIssError {
        TCIssError(.resourceInUse_PlanLinkTemplate)
    }

    public static var resourceInUse_PlanNameRepeat: TCIssError {
        TCIssError(.resourceInUse_PlanNameRepeat)
    }

    public static var resourceInUse_RetrieveTaskExecuting: TCIssError {
        TCIssError(.resourceInUse_RetrieveTaskExecuting)
    }

    public static var resourceInUse_RetrieveTaskNameRepeat: TCIssError {
        TCIssError(.resourceInUse_RetrieveTaskNameRepeat)
    }

    public static var resourceInUse_TemplateNameRepeat: TCIssError {
        TCIssError(.resourceInUse_TemplateNameRepeat)
    }

    public static var resourceNotFound: TCIssError {
        TCIssError(.resourceNotFound)
    }

    public static var resourceNotFound_AITaskNotExisted: TCIssError {
        TCIssError(.resourceNotFound_AITaskNotExisted)
    }

    public static var resourceNotFound_ChannelNotExist: TCIssError {
        TCIssError(.resourceNotFound_ChannelNotExist)
    }

    public static var resourceNotFound_DeviceNotExist: TCIssError {
        TCIssError(.resourceNotFound_DeviceNotExist)
    }

    public static var resourceNotFound_NotFoundCluster: TCIssError {
        TCIssError(.resourceNotFound_NotFoundCluster)
    }

    public static var resourceNotFound_OrganizationIdNotExist: TCIssError {
        TCIssError(.resourceNotFound_OrganizationIdNotExist)
    }

    public static var resourceNotFound_PlanNotExist: TCIssError {
        TCIssError(.resourceNotFound_PlanNotExist)
    }

    public static var resourceNotFound_RetrieveTaskNotExist: TCIssError {
        TCIssError(.resourceNotFound_RetrieveTaskNotExist)
    }

    public static var resourceNotFound_TemplateNotExist: TCIssError {
        TCIssError(.resourceNotFound_TemplateNotExist)
    }

    public static var resourceNotFound_VideoNotFound: TCIssError {
        TCIssError(.resourceNotFound_VideoNotFound)
    }

    public static var resourceUnavailable_ChannelOffline: TCIssError {
        TCIssError(.resourceUnavailable_ChannelOffline)
    }

    public static var resourceUnavailable_DevDisable: TCIssError {
        TCIssError(.resourceUnavailable_DevDisable)
    }

    public static var resourceUnavailable_DevNoRegister: TCIssError {
        TCIssError(.resourceUnavailable_DevNoRegister)
    }

    public static var resourceUnavailable_DevOffline: TCIssError {
        TCIssError(.resourceUnavailable_DevOffline)
    }

    public static var resourceUnavailable_DomainNotRecord: TCIssError {
        TCIssError(.resourceUnavailable_DomainNotRecord)
    }

    public static var resourceUnavailable_VideoArchived: TCIssError {
        TCIssError(.resourceUnavailable_VideoArchived)
    }

    public static var unsupportedOperation_OrgLinkDev: TCIssError {
        TCIssError(.unsupportedOperation_OrgLinkDev)
    }

    public static var unsupportedOperation_OrgLinkOrg: TCIssError {
        TCIssError(.unsupportedOperation_OrgLinkOrg)
    }

    public static var unsupportedOperation_ScaleAndPosBothExist: TCIssError {
        TCIssError(.unsupportedOperation_ScaleAndPosBothExist)
    }

    public static var unsupportedOperation_StreamTypeOrResolution: TCIssError {
        TCIssError(.unsupportedOperation_StreamTypeOrResolution)
    }

    public func asIssError() -> TCIssError {
        return self
    }
}
