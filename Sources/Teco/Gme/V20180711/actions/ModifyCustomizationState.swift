//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Gme {
    /// ModifyCustomizationState请求参数结构体
    public struct ModifyCustomizationStateRequest: TCRequestModel {
        /// 模型ID
        public let modelId: String

        /// 想要变换的模型状态，-1代表下线，1代表上线
        public let toState: Int64

        /// 应用 ID，登录控制台创建应用得到的AppID
        public let bizId: Int64

        public init(modelId: String, toState: Int64, bizId: Int64) {
            self.modelId = modelId
            self.toState = toState
            self.bizId = bizId
        }

        enum CodingKeys: String, CodingKey {
            case modelId = "ModelId"
            case toState = "ToState"
            case bizId = "BizId"
        }
    }

    /// ModifyCustomizationState返回参数结构体
    public struct ModifyCustomizationStateResponse: TCResponseModel {
        /// 模型ID
        public let modelId: String

        /// 返回值。0为成功，非0为失败。
        public let errorCode: Int64

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case modelId = "ModelId"
            case errorCode = "ErrorCode"
            case requestId = "RequestId"
        }
    }

    /// 修改语音消息转文本热句模型状态
    ///
    /// 通过该接口，用户可以修改语音消息转文本热句模型状态，上下线热句模型
    @inlinable
    public func modifyCustomizationState(_ input: ModifyCustomizationStateRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<ModifyCustomizationStateResponse> {
        self.client.execute(action: "ModifyCustomizationState", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 修改语音消息转文本热句模型状态
    ///
    /// 通过该接口，用户可以修改语音消息转文本热句模型状态，上下线热句模型
    @inlinable
    public func modifyCustomizationState(_ input: ModifyCustomizationStateRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyCustomizationStateResponse {
        try await self.client.execute(action: "ModifyCustomizationState", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 修改语音消息转文本热句模型状态
    ///
    /// 通过该接口，用户可以修改语音消息转文本热句模型状态，上下线热句模型
    @inlinable
    public func modifyCustomizationState(modelId: String, toState: Int64, bizId: Int64, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<ModifyCustomizationStateResponse> {
        let input = ModifyCustomizationStateRequest(modelId: modelId, toState: toState, bizId: bizId)
        return self.client.execute(action: "ModifyCustomizationState", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 修改语音消息转文本热句模型状态
    ///
    /// 通过该接口，用户可以修改语音消息转文本热句模型状态，上下线热句模型
    @inlinable
    public func modifyCustomizationState(modelId: String, toState: Int64, bizId: Int64, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyCustomizationStateResponse {
        let input = ModifyCustomizationStateRequest(modelId: modelId, toState: toState, bizId: bizId)
        return try await self.client.execute(action: "ModifyCustomizationState", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
}
