//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Ocr {
    /// 菲律宾驾驶证识别
    ///
    /// 菲律宾驾驶证识别
    @inlinable
    public func recognizePhilippinesDrivingLicenseOCR(_ input: RecognizePhilippinesDrivingLicenseOCRRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < RecognizePhilippinesDrivingLicenseOCRResponse > {
        self.client.execute(action: "RecognizePhilippinesDrivingLicenseOCR", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 菲律宾驾驶证识别
    ///
    /// 菲律宾驾驶证识别
    @inlinable
    public func recognizePhilippinesDrivingLicenseOCR(_ input: RecognizePhilippinesDrivingLicenseOCRRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> RecognizePhilippinesDrivingLicenseOCRResponse {
        try await self.client.execute(action: "RecognizePhilippinesDrivingLicenseOCR", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// RecognizePhilippinesDrivingLicenseOCR请求参数结构体
    public struct RecognizePhilippinesDrivingLicenseOCRRequest: TCRequestModel {
        /// 图片的 Base64 值。
        /// 支持的图片格式：PNG、JPG、JPEG，暂不支持 GIF 格式。
        /// 支持的图片大小：所下载图片经Base64编码后不超过 7M。图片下载时间不超过 3 秒。
        /// 图片的 ImageUrl、ImageBase64 必须提供一个，如果都提供，只使用 ImageUrl。
        public let imageBase64: String?
        
        /// 图片的 Url 地址。
        /// 支持的图片格式：PNG、JPG、JPEG，暂不支持 GIF 格式。
        /// 支持的图片大小：所下载图片经 Base64 编码后不超过 7M。图片下载时间不超过 3 秒。
        /// 图片存储于腾讯云的 Url 可保障更高的下载速度和稳定性，建议图片存储于腾讯云。
        /// 非腾讯云存储的 Url 速度和稳定性可能受一定影响。
        public let imageUrl: String?
        
        /// 是否返回人像照片。
        public let returnHeadImage: Bool?
        
        public init (imageBase64: String?, imageUrl: String?, returnHeadImage: Bool?) {
            self.imageBase64 = imageBase64
            self.imageUrl = imageUrl
            self.returnHeadImage = returnHeadImage
        }
        
        enum CodingKeys: String, CodingKey {
            case imageBase64 = "ImageBase64"
            case imageUrl = "ImageUrl"
            case returnHeadImage = "ReturnHeadImage"
        }
    }
    
    /// RecognizePhilippinesDrivingLicenseOCR返回参数结构体
    public struct RecognizePhilippinesDrivingLicenseOCRResponse: TCResponseModel {
        /// 人像照片Base64后的结果
        public let headPortrait: TextDetectionResult
        
        /// 姓名
        public let name: TextDetectionResult
        
        /// 姓氏
        public let lastName: TextDetectionResult
        
        /// 首姓名
        public let firstName: TextDetectionResult
        
        /// 中间姓名
        public let middleName: TextDetectionResult
        
        /// 国籍
        public let nationality: TextDetectionResult
        
        /// 性别
        public let sex: TextDetectionResult
        
        /// 地址
        public let address: TextDetectionResult
        
        /// 证号
        public let licenseNo: TextDetectionResult
        
        /// 有效期
        public let expiresDate: TextDetectionResult
        
        /// 机构代码
        public let agencyCode: TextDetectionResult
        
        /// 出生日期
        public let birthday: TextDetectionResult
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case headPortrait = "HeadPortrait"
            case name = "Name"
            case lastName = "LastName"
            case firstName = "FirstName"
            case middleName = "MiddleName"
            case nationality = "Nationality"
            case sex = "Sex"
            case address = "Address"
            case licenseNo = "LicenseNo"
            case expiresDate = "ExpiresDate"
            case agencyCode = "AgencyCode"
            case birthday = "Birthday"
            case requestId = "RequestId"
        }
    }
}