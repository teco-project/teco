//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Ocr {
    /// CreateAIFormTask请求参数结构体
    public struct CreateAIFormTaskRequest: TCRequestModel {
        /// 多个文件的URL列表
        public let fileList: [SmartFormFileUrl]

        /// 备注信息1
        public let firstNotes: String?

        /// 备注信息2
        public let secondNotes: String?

        /// 文件类型
        public let fileType: UInt64?

        public init(fileList: [SmartFormFileUrl], firstNotes: String? = nil, secondNotes: String? = nil, fileType: UInt64? = nil) {
            self.fileList = fileList
            self.firstNotes = firstNotes
            self.secondNotes = secondNotes
            self.fileType = fileType
        }

        enum CodingKeys: String, CodingKey {
            case fileList = "FileList"
            case firstNotes = "FirstNotes"
            case secondNotes = "SecondNotes"
            case fileType = "FileType"
        }
    }

    /// CreateAIFormTask返回参数结构体
    public struct CreateAIFormTaskResponse: TCResponseModel {
        /// 本次识别任务的唯一身份ID
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let taskId: String?

        /// 本次识别任务的操作URL，有效期自生成之时起共24小时
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let operateUrl: String?

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case taskId = "TaskId"
            case operateUrl = "OperateUrl"
            case requestId = "RequestId"
        }
    }

    /// 创建智慧表单文件识别任务
    ///
    /// 本接口可创建智能表单录入任务，支持多个识别图片和PDF的URL上传，返回含有识别内容的操作页面URL。
    ///
    /// 智能表单录入产品提供高准确率的表单识别技术和人工核对工具，支持自定义字段，将识别结果自动填入到自定义条目中，并提供人工操作工具，完成整个表单识别过程。适用性强，可对票据、合同、货单等文件的识别，适用于金融、货代、保险、档案等领域。本产品免费公测中，您可以点击demo（超链接：https://ocr.smartform.cloud.tencent.com/）试用，如需购买请与商务团队联系。
    @inlinable
    public func createAIFormTask(_ input: CreateAIFormTaskRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<CreateAIFormTaskResponse> {
        self.client.execute(action: "CreateAIFormTask", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 创建智慧表单文件识别任务
    ///
    /// 本接口可创建智能表单录入任务，支持多个识别图片和PDF的URL上传，返回含有识别内容的操作页面URL。
    ///
    /// 智能表单录入产品提供高准确率的表单识别技术和人工核对工具，支持自定义字段，将识别结果自动填入到自定义条目中，并提供人工操作工具，完成整个表单识别过程。适用性强，可对票据、合同、货单等文件的识别，适用于金融、货代、保险、档案等领域。本产品免费公测中，您可以点击demo（超链接：https://ocr.smartform.cloud.tencent.com/）试用，如需购买请与商务团队联系。
    @inlinable
    public func createAIFormTask(_ input: CreateAIFormTaskRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> CreateAIFormTaskResponse {
        try await self.client.execute(action: "CreateAIFormTask", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 创建智慧表单文件识别任务
    ///
    /// 本接口可创建智能表单录入任务，支持多个识别图片和PDF的URL上传，返回含有识别内容的操作页面URL。
    ///
    /// 智能表单录入产品提供高准确率的表单识别技术和人工核对工具，支持自定义字段，将识别结果自动填入到自定义条目中，并提供人工操作工具，完成整个表单识别过程。适用性强，可对票据、合同、货单等文件的识别，适用于金融、货代、保险、档案等领域。本产品免费公测中，您可以点击demo（超链接：https://ocr.smartform.cloud.tencent.com/）试用，如需购买请与商务团队联系。
    @inlinable
    public func createAIFormTask(fileList: [SmartFormFileUrl], firstNotes: String? = nil, secondNotes: String? = nil, fileType: UInt64? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<CreateAIFormTaskResponse> {
        self.createAIFormTask(.init(fileList: fileList, firstNotes: firstNotes, secondNotes: secondNotes, fileType: fileType), region: region, logger: logger, on: eventLoop)
    }

    /// 创建智慧表单文件识别任务
    ///
    /// 本接口可创建智能表单录入任务，支持多个识别图片和PDF的URL上传，返回含有识别内容的操作页面URL。
    ///
    /// 智能表单录入产品提供高准确率的表单识别技术和人工核对工具，支持自定义字段，将识别结果自动填入到自定义条目中，并提供人工操作工具，完成整个表单识别过程。适用性强，可对票据、合同、货单等文件的识别，适用于金融、货代、保险、档案等领域。本产品免费公测中，您可以点击demo（超链接：https://ocr.smartform.cloud.tencent.com/）试用，如需购买请与商务团队联系。
    @inlinable
    public func createAIFormTask(fileList: [SmartFormFileUrl], firstNotes: String? = nil, secondNotes: String? = nil, fileType: UInt64? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> CreateAIFormTaskResponse {
        try await self.createAIFormTask(.init(fileList: fileList, firstNotes: firstNotes, secondNotes: secondNotes, fileType: fileType), region: region, logger: logger, on: eventLoop)
    }
}
