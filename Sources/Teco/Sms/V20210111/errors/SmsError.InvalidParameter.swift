//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension TCSmsError {
    public struct InvalidParameter: TCErrorType {
        enum Code: String {
            case appidAndBizId = "InvalidParameter.AppidAndBizId"
            case dirtyWordFound = "InvalidParameter.DirtyWordFound"
            case invalidParameters = "InvalidParameter.InvalidParameters"
            case other = "InvalidParameter"
        }
        
        private let error: Code
        
        public let context: TCErrorContext?
        
        public var errorCode: String {
            self.error.rawValue
        }
        
        public init ?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }
        
        internal init (_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }
        
        /// 账号与应用id不匹配。
        public static var appidAndBizId: InvalidParameter {
            InvalidParameter(.appidAndBizId)
        }
        
        /// 存在敏感词。
        public static var dirtyWordFound: InvalidParameter {
            InvalidParameter(.dirtyWordFound)
        }
        
        /// International 或者 SmsType 参数有误，如有需要请联系 <a href="https://cloud.tencent.com/document/product/382/3773#.E6.8A.80.E6.9C.AF.E4.BA.A4.E6.B5.81">腾讯云短信小助手</a>。
        public static var invalidParameters: InvalidParameter {
            InvalidParameter(.invalidParameters)
        }
        
        /// 参数错误。
        public static var other: InvalidParameter {
            InvalidParameter(.other)
        }
    }
}

extension TCSmsError.InvalidParameter: Equatable {
    public static func == (lhs: TCSmsError.InvalidParameter, rhs: TCSmsError.InvalidParameter) -> Bool {
        lhs.error == rhs.error
    }
}

extension TCSmsError.InvalidParameter: CustomStringConvertible {
    public var description: String {
        return "\(self.error.rawValue): \(message ?? "")"
    }
}

extension TCSmsError.InvalidParameter {
    public func toSmsError() -> TCSmsError {
        guard let code = TCSmsError.Code(rawValue: self.error.rawValue) else {
            fatalError("Unexpected internal conversion error!\nPlease file a bug at https://github.com/teco-project/teco to help address the problem.")
        }
        return TCSmsError(code, context: self.context)
    }
}