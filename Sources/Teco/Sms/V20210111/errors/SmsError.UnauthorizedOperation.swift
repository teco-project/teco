//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension TCSmsError {
    public struct UnauthorizedOperation: TCErrorType {
        enum Code: String {
            case individualUserMarketingSmsPermissionDeny = "UnauthorizedOperation.IndividualUserMarketingSmsPermissionDeny"
            case requestIpNotInWhitelist = "UnauthorizedOperation.RequestIpNotInWhitelist"
            case requestPermissionDeny = "UnauthorizedOperation.RequestPermissionDeny"
            case sdkAppIdIsDisabled = "UnauthorizedOperation.SdkAppIdIsDisabled"
            case serivceSuspendDueToArrears = "UnauthorizedOperation.SerivceSuspendDueToArrears"
            case smsSdkAppIdVerifyFail = "UnauthorizedOperation.SmsSdkAppIdVerifyFail"
        }
        
        private let error: Code
        
        public let context: TCErrorContext?
        
        public var errorCode: String {
            self.error.rawValue
        }
        
        public init ?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }
        
        internal init (_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }
        
        /// 个人用户没有发营销短信的权限，请参考 <a href="https://cloud.tencent.com/document/product/382/13444">权益区别</a>。
        public static var individualUserMarketingSmsPermissionDeny: UnauthorizedOperation {
            UnauthorizedOperation(.individualUserMarketingSmsPermissionDeny)
        }
        
        /// 请求 IP 不在白名单中，您配置了校验请求来源 IP，但是检测到当前请求 IP 不在配置列表中，如有需要请联系 <a href="https://cloud.tencent.com/document/product/382/3773#.E6.8A.80.E6.9C.AF.E4.BA.A4.E6.B5.81">腾讯云短信小助手</a>。
        public static var requestIpNotInWhitelist: UnauthorizedOperation {
            UnauthorizedOperation(.requestIpNotInWhitelist)
        }
        
        /// 请求没有权限，请联系 <a href="https://cloud.tencent.com/document/product/382/3773#.E6.8A.80.E6.9C.AF.E4.BA.A4.E6.B5.81">腾讯云短信小助手</a>。
        public static var requestPermissionDeny: UnauthorizedOperation {
            UnauthorizedOperation(.requestPermissionDeny)
        }
        
        /// 此 SdkAppId 禁止提供服务，如有需要请联系 <a href="https://cloud.tencent.com/document/product/382/3773#.E6.8A.80.E6.9C.AF.E4.BA.A4.E6.B5.81">腾讯云短信小助手</a>。
        public static var sdkAppIdIsDisabled: UnauthorizedOperation {
            UnauthorizedOperation(.sdkAppIdIsDisabled)
        }
        
        /// 欠费被停止服务，可自行登录腾讯云充值来缴清欠款。
        public static var serivceSuspendDueToArrears: UnauthorizedOperation {
            UnauthorizedOperation(.serivceSuspendDueToArrears)
        }
        
        /// SmsSdkAppId 校验失败，请检查 <a href="https://console.cloud.tencent.com/smsv2/app-manage">SmsSdkAppId</a> 是否属于 <a href="https://console.cloud.tencent.com/cam/capi">云API密钥</a> 的关联账户。
        public static var smsSdkAppIdVerifyFail: UnauthorizedOperation {
            UnauthorizedOperation(.smsSdkAppIdVerifyFail)
        }
    }
}

extension TCSmsError.UnauthorizedOperation: Equatable {
    public static func == (lhs: TCSmsError.UnauthorizedOperation, rhs: TCSmsError.UnauthorizedOperation) -> Bool {
        lhs.error == rhs.error
    }
}

extension TCSmsError.UnauthorizedOperation: CustomStringConvertible {
    public var description: String {
        return "\(self.error.rawValue): \(message ?? "")"
    }
}

extension TCSmsError.UnauthorizedOperation {
    public func toSmsError() -> TCSmsError {
        guard let code = TCSmsError.Code(rawValue: self.error.rawValue) else {
            fatalError("Unexpected internal conversion error!\nPlease file a bug at https://github.com/teco-project/teco to help address the problem.")
        }
        return TCSmsError(code, context: self.context)
    }
}