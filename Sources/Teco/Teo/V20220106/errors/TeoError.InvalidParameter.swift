//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import TecoCore

extension TCTeoError {
    public struct InvalidParameter: TCTeoErrorType {
        enum Code: String {
            case domainNotFound = "InvalidParameter.DomainNotFound"
            case parameterError = "InvalidParameter.ParameterError"
            case target = "InvalidParameter.Target"
            case taskNotGenerated = "InvalidParameter.TaskNotGenerated"
            case uploadUrl = "InvalidParameter.UploadUrl"
        }

        private let error: Code

        public let context: TCErrorContext?

        public var errorCode: String {
            self.error.rawValue
        }

        /// Initializer used by ``TCClient`` to match an error of this type.
        public init?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }

        internal init(_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }

        /// 域名不存在或不属于该账号。
        public static var domainNotFound: InvalidParameter {
            InvalidParameter(.domainNotFound)
        }

        /// 参数错误: 无效 "结束时间", 不在允许的查询范围内: [开始时间, 开始+ 7天]
        public static var parameterError: InvalidParameter {
            InvalidParameter(.parameterError)
        }

        /// 资源存在错误。
        public static var target: InvalidParameter {
            InvalidParameter(.target)
        }

        /// 任务无法生成。
        public static var taskNotGenerated: InvalidParameter {
            InvalidParameter(.taskNotGenerated)
        }

        /// 文件上传链接存在问题。
        public static var uploadUrl: InvalidParameter {
            InvalidParameter(.uploadUrl)
        }

        public func asTeoError() -> TCTeoError {
            let code: TCTeoError.Code
            switch self.error {
            case .domainNotFound:
                code = .invalidParameter_DomainNotFound
            case .parameterError:
                code = .invalidParameter_ParameterError
            case .target:
                code = .invalidParameter_Target
            case .taskNotGenerated:
                code = .invalidParameter_TaskNotGenerated
            case .uploadUrl:
                code = .invalidParameter_UploadUrl
            }
            return TCTeoError(code, context: self.context)
        }
    }
}
