//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import TecoCore

/// Service error type returned by `Teo`.
public protocol TCTeoErrorType: TCServiceErrorType {
    /// Get the service error as ``TCTeoError``.
    ///
    /// - Returns: ``TCTeoError`` that holds the same error code and context.
    func asTeoError() -> TCTeoError
}

public struct TCTeoError: TCTeoErrorType {
    enum Code: String {
        case dryRunOperation = "DryRunOperation"
        case failedOperation = "FailedOperation"
        case failedOperation_CertificateNotFound = "FailedOperation.CertificateNotFound"
        case failedOperation_InsufficientAccountBalance = "FailedOperation.InsufficientAccountBalance"
        case failedOperation_InvalidZoneStatus = "FailedOperation.InvalidZoneStatus"
        case failedOperation_ModifyFailed = "FailedOperation.ModifyFailed"
        case internalError = "InternalError"
        case internalError_BackendError = "InternalError.BackendError"
        case internalError_ConfigLocked = "InternalError.ConfigLocked"
        case internalError_DBError = "InternalError.DBError"
        case internalError_DomainConfig = "InternalError.DomainConfig"
        case internalError_FailedToGenerateUrl = "InternalError.FailedToGenerateUrl"
        case internalError_GetRoleError = "InternalError.GetRoleError"
        case internalError_ProxyServer = "InternalError.ProxyServer"
        case internalError_QuotaSystem = "InternalError.QuotaSystem"
        case internalError_RouteError = "InternalError.RouteError"
        case internalError_SystemError = "InternalError.SystemError"
        case internalError_UnknowError = "InternalError.UnknowError"
        case invalidParameter = "InvalidParameter"
        case invalidParameterValue = "InvalidParameterValue"
        case invalidParameterValue_ConflictRecord = "InvalidParameterValue.ConflictRecord"
        case invalidParameterValue_ConflictWithDNSSEC = "InvalidParameterValue.ConflictWithDNSSEC"
        case invalidParameterValue_ConflictWithNSRecord = "InvalidParameterValue.ConflictWithNSRecord"
        case invalidParameterValue_ContentSameAsName = "InvalidParameterValue.ContentSameAsName"
        case invalidParameterValue_DomainNotMatchZone = "InvalidParameterValue.DomainNotMatchZone"
        case invalidParameterValue_InvalidDNSContent = "InvalidParameterValue.InvalidDNSContent"
        case invalidParameterValue_InvalidDNSName = "InvalidParameterValue.InvalidDNSName"
        case invalidParameterValue_InvalidDomainStatus = "InvalidParameterValue.InvalidDomainStatus"
        case invalidParameterValue_ZoneSameAsName = "InvalidParameterValue.ZoneSameAsName"
        case invalidParameter_ActionInProgress = "InvalidParameter.ActionInProgress"
        case invalidParameter_AliasDomainNotSupportSMCert = "InvalidParameter.AliasDomainNotSupportSMCert"
        case invalidParameter_CacheKeyQueryStringTooManyValue = "InvalidParameter.CacheKeyQueryStringTooManyValue"
        case invalidParameter_CertNotMatchDomain = "InvalidParameter.CertNotMatchDomain"
        case invalidParameter_CertSystemError = "InvalidParameter.CertSystemError"
        case invalidParameter_CertToExpire = "InvalidParameter.CertToExpire"
        case invalidParameter_CertTooShortKeySize = "InvalidParameter.CertTooShortKeySize"
        case invalidParameter_ClientIpCountryConflictsWithIpv6 = "InvalidParameter.ClientIpCountryConflictsWithIpv6"
        case invalidParameter_CnameWildHostNotAllowApplyCertificate = "InvalidParameter.CnameWildHostNotAllowApplyCertificate"
        case invalidParameter_ConflictHostOrigin = "InvalidParameter.ConflictHostOrigin"
        case invalidParameter_DomainNotFound = "InvalidParameter.DomainNotFound"
        case invalidParameter_DomainOnTrafficScheduling = "InvalidParameter.DomainOnTrafficScheduling"
        case invalidParameter_ErrActionUnsupportTarget = "InvalidParameter.ErrActionUnsupportTarget"
        case invalidParameter_ErrInvalidAction = "InvalidParameter.ErrInvalidAction"
        case invalidParameter_ErrInvalidActionParam = "InvalidParameter.ErrInvalidActionParam"
        case invalidParameter_ErrInvalidActionParamAction = "InvalidParameter.ErrInvalidActionParamAction"
        case invalidParameter_ErrInvalidActionParamBadValueType = "InvalidParameter.ErrInvalidActionParamBadValueType"
        case invalidParameter_ErrInvalidActionParamDuplicateName = "InvalidParameter.ErrInvalidActionParamDuplicateName"
        case invalidParameter_ErrInvalidActionParamName = "InvalidParameter.ErrInvalidActionParamName"
        case invalidParameter_ErrInvalidActionParamTooManyValues = "InvalidParameter.ErrInvalidActionParamTooManyValues"
        case invalidParameter_ErrInvalidActionType = "InvalidParameter.ErrInvalidActionType"
        case invalidParameter_ErrInvalidConditionIgnoreCase = "InvalidParameter.ErrInvalidConditionIgnoreCase"
        case invalidParameter_ErrInvalidConditionNameBadName = "InvalidParameter.ErrInvalidConditionNameBadName"
        case invalidParameter_ErrInvalidConditionNameTargetNotSupportName = "InvalidParameter.ErrInvalidConditionNameTargetNotSupportName"
        case invalidParameter_ErrInvalidConditionValueBadRegular = "InvalidParameter.ErrInvalidConditionValueBadRegular"
        case invalidParameter_ErrInvalidConditionValueBadUrl = "InvalidParameter.ErrInvalidConditionValueBadUrl"
        case invalidParameter_ErrInvalidConditionValueBadValue = "InvalidParameter.ErrInvalidConditionValueBadValue"
        case invalidParameter_ErrInvalidConditionValueBadValueContainFileNameExtension = "InvalidParameter.ErrInvalidConditionValueBadValueContainFileNameExtension"
        case invalidParameter_ErrInvalidConditionValueTooLongValue = "InvalidParameter.ErrInvalidConditionValueTooLongValue"
        case invalidParameter_ErrInvalidConditionValueTooManyRegular = "InvalidParameter.ErrInvalidConditionValueTooManyRegular"
        case invalidParameter_ErrInvalidConditionValueTooManyValues = "InvalidParameter.ErrInvalidConditionValueTooManyValues"
        case invalidParameter_ErrInvalidConditionValueTooManyWildcard = "InvalidParameter.ErrInvalidConditionValueTooManyWildcard"
        case invalidParameter_ErrInvalidConditionValueZeroLength = "InvalidParameter.ErrInvalidConditionValueZeroLength"
        case invalidParameter_GrpcRequireHttp2 = "InvalidParameter.GrpcRequireHttp2"
        case invalidParameter_HostNotFound = "InvalidParameter.HostNotFound"
        case invalidParameter_HostStatusNotAllowApplyCertificate = "InvalidParameter.HostStatusNotAllowApplyCertificate"
        case invalidParameter_InvalidAccelerateType = "InvalidParameter.InvalidAccelerateType"
        case invalidParameter_InvalidAuthentication = "InvalidParameter.InvalidAuthentication"
        case invalidParameter_InvalidAuthenticationTypeSecretKey = "InvalidParameter.InvalidAuthenticationTypeSecretKey"
        case invalidParameter_InvalidAuthenticationTypeSignParam = "InvalidParameter.InvalidAuthenticationTypeSignParam"
        case invalidParameter_InvalidAuthenticationTypeTimeFormat = "InvalidParameter.InvalidAuthenticationTypeTimeFormat"
        case invalidParameter_InvalidAuthenticationTypeTimeParam = "InvalidParameter.InvalidAuthenticationTypeTimeParam"
        case invalidParameter_InvalidAwsPrivateAccess = "InvalidParameter.InvalidAwsPrivateAccess"
        case invalidParameter_InvalidBackupServerName = "InvalidParameter.InvalidBackupServerName"
        case invalidParameter_InvalidCacheConfigCache = "InvalidParameter.InvalidCacheConfigCache"
        case invalidParameter_InvalidCacheConfigFollowOrigin = "InvalidParameter.InvalidCacheConfigFollowOrigin"
        case invalidParameter_InvalidCacheKey = "InvalidParameter.InvalidCacheKey"
        case invalidParameter_InvalidCacheKeyIgnoreCase = "InvalidParameter.InvalidCacheKeyIgnoreCase"
        case invalidParameter_InvalidCacheKeyQueryStringValue = "InvalidParameter.InvalidCacheKeyQueryStringValue"
        case invalidParameter_InvalidCacheKeyScheme = "InvalidParameter.InvalidCacheKeyScheme"
        case invalidParameter_InvalidCacheOnlyOnSwitch = "InvalidParameter.InvalidCacheOnlyOnSwitch"
        case invalidParameter_InvalidCacheTime = "InvalidParameter.InvalidCacheTime"
        case invalidParameter_InvalidCertInfo = "InvalidParameter.InvalidCertInfo"
        case invalidParameter_InvalidClientIpHeaderName = "InvalidParameter.InvalidClientIpHeaderName"
        case invalidParameter_InvalidClientIpOrigin = "InvalidParameter.InvalidClientIpOrigin"
        case invalidParameter_InvalidDynamicRoutine = "InvalidParameter.InvalidDynamicRoutine"
        case invalidParameter_InvalidDynamicRoutineBilling = "InvalidParameter.InvalidDynamicRoutineBilling"
        case invalidParameter_InvalidErrorPage = "InvalidParameter.InvalidErrorPage"
        case invalidParameter_InvalidErrorPageRedirectUrl = "InvalidParameter.InvalidErrorPageRedirectUrl"
        case invalidParameter_InvalidHttps = "InvalidParameter.InvalidHttps"
        case invalidParameter_InvalidHttpsCertInfo = "InvalidParameter.InvalidHttpsCertInfo"
        case invalidParameter_InvalidHttpsCipherSuiteAndTlsVersion = "InvalidParameter.InvalidHttpsCipherSuiteAndTlsVersion"
        case invalidParameter_InvalidHttpsHstsMaxAge = "InvalidParameter.InvalidHttpsHstsMaxAge"
        case invalidParameter_InvalidHttpsTlsVersion = "InvalidParameter.InvalidHttpsTlsVersion"
        case invalidParameter_InvalidIpv6Switch = "InvalidParameter.InvalidIpv6Switch"
        case invalidParameter_InvalidMaxAgeTime = "InvalidParameter.InvalidMaxAgeTime"
        case invalidParameter_InvalidOrigin = "InvalidParameter.InvalidOrigin"
        case invalidParameter_InvalidOriginIp = "InvalidParameter.InvalidOriginIp"
        case invalidParameter_InvalidParameter = "InvalidParameter.InvalidParameter"
        case invalidParameter_InvalidPostMaxSizeBilling = "InvalidParameter.InvalidPostMaxSizeBilling"
        case invalidParameter_InvalidPostSizeValue = "InvalidParameter.InvalidPostSizeValue"
        case invalidParameter_InvalidPrivateAccessParams = "InvalidParameter.InvalidPrivateAccessParams"
        case invalidParameter_InvalidQuicBilling = "InvalidParameter.InvalidQuicBilling"
        case invalidParameter_InvalidRangeOriginPull = "InvalidParameter.InvalidRangeOriginPull"
        case invalidParameter_InvalidRequestHeaderName = "InvalidParameter.InvalidRequestHeaderName"
        case invalidParameter_InvalidRequestHeaderNameXff = "InvalidParameter.InvalidRequestHeaderNameXff"
        case invalidParameter_InvalidRequestHeaderValue = "InvalidParameter.InvalidRequestHeaderValue"
        case invalidParameter_InvalidResourceIdBilling = "InvalidParameter.InvalidResourceIdBilling"
        case invalidParameter_InvalidResponseHeaderName = "InvalidParameter.InvalidResponseHeaderName"
        case invalidParameter_InvalidResponseHeaderValue = "InvalidParameter.InvalidResponseHeaderValue"
        case invalidParameter_InvalidRuleEngineAction = "InvalidParameter.InvalidRuleEngineAction"
        case invalidParameter_InvalidRuleEngineNotFound = "InvalidParameter.InvalidRuleEngineNotFound"
        case invalidParameter_InvalidRuleEngineTarget = "InvalidParameter.InvalidRuleEngineTarget"
        case invalidParameter_InvalidRuleEngineTargetsExtension = "InvalidParameter.InvalidRuleEngineTargetsExtension"
        case invalidParameter_InvalidRuleEngineTargetsUrl = "InvalidParameter.InvalidRuleEngineTargetsUrl"
        case invalidParameter_InvalidServerName = "InvalidParameter.InvalidServerName"
        case invalidParameter_InvalidStandardDebugClientIp = "InvalidParameter.InvalidStandardDebugClientIp"
        case invalidParameter_InvalidStandardDebugExpireTimeLimit = "InvalidParameter.InvalidStandardDebugExpireTimeLimit"
        case invalidParameter_InvalidUpstreamRequestQueryStringValue = "InvalidParameter.InvalidUpstreamRequestQueryStringValue"
        case invalidParameter_InvalidUrlRedirectHost = "InvalidParameter.InvalidUrlRedirectHost"
        case invalidParameter_InvalidUrlRedirectUrl = "InvalidParameter.InvalidUrlRedirectUrl"
        case invalidParameter_InvalidWebSocketTimeout = "InvalidParameter.InvalidWebSocketTimeout"
        case invalidParameter_KeyRulesInvalidQueryStringValue = "InvalidParameter.KeyRulesInvalidQueryStringValue"
        case invalidParameter_LengthExceedsLimit = "InvalidParameter.LengthExceedsLimit"
        case invalidParameter_MultiplyLayerNotSupportSmartRouting = "InvalidParameter.MultiplyLayerNotSupportSmartRouting"
        case invalidParameter_NotSupportThisPreset = "InvalidParameter.NotSupportThisPreset"
        case invalidParameter_OriginIsInnerIp = "InvalidParameter.OriginIsInnerIp"
        case invalidParameter_OriginOriginGroupIdIsRequired = "InvalidParameter.OriginOriginGroupIdIsRequired"
        case invalidParameter_ParameterError = "InvalidParameter.ParameterError"
        case invalidParameter_PlanNotFound = "InvalidParameter.PlanNotFound"
        case invalidParameter_PostMaxSizeLimitExceeded = "InvalidParameter.PostMaxSizeLimitExceeded"
        case invalidParameter_Security = "InvalidParameter.Security"
        case invalidParameter_SettingInvalidParam = "InvalidParameter.SettingInvalidParam"
        case invalidParameter_Target = "InvalidParameter.Target"
        case invalidParameter_TaskNotGenerated = "InvalidParameter.TaskNotGenerated"
        case invalidParameter_TaskSystemError = "InvalidParameter.TaskSystemError"
        case invalidParameter_UploadUrl = "InvalidParameter.UploadUrl"
        case invalidParameter_ZoneHasBeenBound = "InvalidParameter.ZoneHasBeenBound"
        case invalidParameter_ZoneNotFound = "InvalidParameter.ZoneNotFound"
        case limitExceeded = "LimitExceeded"
        case limitExceeded_BatchQuota = "LimitExceeded.BatchQuota"
        case limitExceeded_DailyQuota = "LimitExceeded.DailyQuota"
        case limitExceeded_PackNotAllow = "LimitExceeded.PackNotAllow"
        case limitExceeded_QueryTimeLimitExceeded = "LimitExceeded.QueryTimeLimitExceeded"
        case limitExceeded_RateLimitExceeded = "LimitExceeded.RateLimitExceeded"
        case operationDenied = "OperationDenied"
        case operationDenied_AccelerateMainlandDisable = "OperationDenied.AccelerateMainlandDisable"
        case operationDenied_AccelerateMainlandIpv6Conflict = "OperationDenied.AccelerateMainlandIpv6Conflict"
        case operationDenied_DisableZoneNotCompleted = "OperationDenied.DisableZoneNotCompleted"
        case operationDenied_DomainInShareCnameGroup = "OperationDenied.DomainInShareCnameGroup"
        case operationDenied_DomainIsBlocked = "OperationDenied.DomainIsBlocked"
        case operationDenied_DomainNoICP = "OperationDenied.DomainNoICP"
        case operationDenied_ErrZoneIsAlreadyPaused = "OperationDenied.ErrZoneIsAlreadyPaused"
        case operationDenied_InvalidAdvancedDefenseSecurityType = "OperationDenied.InvalidAdvancedDefenseSecurityType"
        case operationDenied_InvalidAdvancedDefenseZoneArea = "OperationDenied.InvalidAdvancedDefenseZoneArea"
        case operationDenied_L4ProxyInBannedStatus = "OperationDenied.L4ProxyInBannedStatus"
        case operationDenied_L4ProxyInProgressStatus = "OperationDenied.L4ProxyInProgressStatus"
        case operationDenied_L4ProxyInStoppingStatus = "OperationDenied.L4ProxyInStoppingStatus"
        case operationDenied_L4StatusNotInOnline = "OperationDenied.L4StatusNotInOnline"
        case operationDenied_L7HostInProcessStatus = "OperationDenied.L7HostInProcessStatus"
        case operationDenied_MultipleCnameZone = "OperationDenied.MultipleCnameZone"
        case operationDenied_NSNotAllowTrafficStrategy = "OperationDenied.NSNotAllowTrafficStrategy"
        case operationDenied_RecordIsForbidden = "OperationDenied.RecordIsForbidden"
        case operationDenied_ResourceLockedTemporary = "OperationDenied.ResourceLockedTemporary"
        case resourceInUse = "ResourceInUse"
        case resourceInUse_AliasDomain = "ResourceInUse.AliasDomain"
        case resourceInUse_AliasName = "ResourceInUse.AliasName"
        case resourceInUse_Cname = "ResourceInUse.Cname"
        case resourceInUse_Dns = "ResourceInUse.Dns"
        case resourceInUse_DnsRecord = "ResourceInUse.DnsRecord"
        case resourceInUse_DuplicateName = "ResourceInUse.DuplicateName"
        case resourceInUse_GenericHost = "ResourceInUse.GenericHost"
        case resourceInUse_Host = "ResourceInUse.Host"
        case resourceInUse_NS = "ResourceInUse.NS"
        case resourceInUse_Others = "ResourceInUse.Others"
        case resourceInUse_OthersAliasDomain = "ResourceInUse.OthersAliasDomain"
        case resourceInUse_OthersCname = "ResourceInUse.OthersCname"
        case resourceInUse_OthersHost = "ResourceInUse.OthersHost"
        case resourceInUse_OthersNS = "ResourceInUse.OthersNS"
        case resourceInUse_SelfAndOthersCname = "ResourceInUse.SelfAndOthersCname"
        case resourceInUse_Zone = "ResourceInUse.Zone"
        case resourceInsufficient = "ResourceInsufficient"
        case resourceNotFound = "ResourceNotFound"
        case resourceNotFound_PostMaxSizeQuotaNotFound = "ResourceNotFound.PostMaxSizeQuotaNotFound"
        case resourceUnavailable = "ResourceUnavailable"
        case resourceUnavailable_CertNotFound = "ResourceUnavailable.CertNotFound"
        case resourceUnavailable_DomainAlreadyExists = "ResourceUnavailable.DomainAlreadyExists"
        case resourceUnavailable_DomainNotFound = "ResourceUnavailable.DomainNotFound"
        case resourceUnavailable_HostNotFound = "ResourceUnavailable.HostNotFound"
        case resourceUnavailable_ZoneNotFound = "ResourceUnavailable.ZoneNotFound"
        case resourcesSoldOut_L7LackOfResources = "ResourcesSoldOut.L7LackOfResources"
        case unauthorizedOperation = "UnauthorizedOperation"
        case unauthorizedOperation_CamUnauthorized = "UnauthorizedOperation.CamUnauthorized"
        case unauthorizedOperation_DomainEmpty = "UnauthorizedOperation.DomainEmpty"
        case unauthorizedOperation_NoPermission = "UnauthorizedOperation.NoPermission"
        case unauthorizedOperation_Unknown = "UnauthorizedOperation.Unknown"
        case unsupportedOperation = "UnsupportedOperation"
        case unsupportedOperation_TargetNameOriginTypeCos = "UnsupportedOperation.TargetNameOriginTypeCos"
    }

    /// Error domains affliated to ``TCTeoError``.
    public static var domains: [TCErrorType.Type] {
        [
            FailedOperation.self,
            InternalError.self,
            InvalidParameter.self,
            InvalidParameterValue.self,
            LimitExceeded.self,
            OperationDenied.self,
            ResourceInUse.self,
            ResourceNotFound.self,
            ResourceUnavailable.self,
            ResourcesSoldOut.self,
            UnauthorizedOperation.self,
            UnsupportedOperation.self
        ]
    }

    private let error: Code

    public let context: TCErrorContext?

    public var errorCode: String {
        self.error.rawValue
    }

    /// Initializer used by ``TCClient`` to match an error of this type.
    public init?(errorCode: String, context: TCErrorContext) {
        guard let error = Code(rawValue: errorCode) else {
            return nil
        }
        self.error = error
        self.context = context
    }

    internal init(_ error: Code, context: TCErrorContext? = nil) {
        self.error = error
        self.context = context
    }

    /// DryRun 操作，代表请求将会是成功的，只是多传了 DryRun 参数。
    public static var dryRunOperation: TCTeoError {
        TCTeoError(.dryRunOperation)
    }

    /// 操作失败。
    public static var failedOperation: TCTeoError {
        TCTeoError(.failedOperation)
    }

    /// 证书不存在。
    public static var failedOperation_CertificateNotFound: TCTeoError {
        TCTeoError(.failedOperation_CertificateNotFound)
    }

    /// 账户余额不足
    public static var failedOperation_InsufficientAccountBalance: TCTeoError {
        TCTeoError(.failedOperation_InsufficientAccountBalance)
    }

    /// 站点状态不正确。
    public static var failedOperation_InvalidZoneStatus: TCTeoError {
        TCTeoError(.failedOperation_InvalidZoneStatus)
    }

    /// 操作失败。
    public static var failedOperation_ModifyFailed: TCTeoError {
        TCTeoError(.failedOperation_ModifyFailed)
    }

    /// 内部错误。
    public static var internalError: TCTeoError {
        TCTeoError(.internalError)
    }

    /// 后台处理出错。
    public static var internalError_BackendError: TCTeoError {
        TCTeoError(.internalError_BackendError)
    }

    /// 配置已被锁定，请解除配置锁定之后在重试。
    public static var internalError_ConfigLocked: TCTeoError {
        TCTeoError(.internalError_ConfigLocked)
    }

    /// 数据库错误。
    public static var internalError_DBError: TCTeoError {
        TCTeoError(.internalError_DBError)
    }

    /// 获取配置失败。
    public static var internalError_DomainConfig: TCTeoError {
        TCTeoError(.internalError_DomainConfig)
    }

    /// 上传链接生成失败。
    public static var internalError_FailedToGenerateUrl: TCTeoError {
        TCTeoError(.internalError_FailedToGenerateUrl)
    }

    /// 获取角色失败。
    public static var internalError_GetRoleError: TCTeoError {
        TCTeoError(.internalError_GetRoleError)
    }

    /// 后端服务器发生未知错误。
    public static var internalError_ProxyServer: TCTeoError {
        TCTeoError(.internalError_ProxyServer)
    }

    /// 配额系统处理失败。
    public static var internalError_QuotaSystem: TCTeoError {
        TCTeoError(.internalError_QuotaSystem)
    }

    /// 后端服务路由地址错误。
    public static var internalError_RouteError: TCTeoError {
        TCTeoError(.internalError_RouteError)
    }

    /// 内部错误-系统错误。
    public static var internalError_SystemError: TCTeoError {
        TCTeoError(.internalError_SystemError)
    }

    /// 未知错误。
    public static var internalError_UnknowError: TCTeoError {
        TCTeoError(.internalError_UnknowError)
    }

    /// 参数错误。
    public static var invalidParameter: TCTeoError {
        TCTeoError(.invalidParameter)
    }

    /// 参数取值错误。
    public static var invalidParameterValue: TCTeoError {
        TCTeoError(.invalidParameterValue)
    }

    /// 与已经添加的记录冲突。
    public static var invalidParameterValue_ConflictRecord: TCTeoError {
        TCTeoError(.invalidParameterValue_ConflictRecord)
    }

    /// DNS 记录与 DNSSEC 功能冲突。
    public static var invalidParameterValue_ConflictWithDNSSEC: TCTeoError {
        TCTeoError(.invalidParameterValue_ConflictWithDNSSEC)
    }

    /// DNS 记录与 NS 记录冲突。
    public static var invalidParameterValue_ConflictWithNSRecord: TCTeoError {
        TCTeoError(.invalidParameterValue_ConflictWithNSRecord)
    }

    /// 主机记录与记录值不能取值相同。
    public static var invalidParameterValue_ContentSameAsName: TCTeoError {
        TCTeoError(.invalidParameterValue_ContentSameAsName)
    }

    /// 入参中的域名与站点参数不匹配，请更正后重试。
    public static var invalidParameterValue_DomainNotMatchZone: TCTeoError {
        TCTeoError(.invalidParameterValue_DomainNotMatchZone)
    }

    /// DNS 记录内容错误。
    public static var invalidParameterValue_InvalidDNSContent: TCTeoError {
        TCTeoError(.invalidParameterValue_InvalidDNSContent)
    }

    /// DNS 记录名称错误。
    public static var invalidParameterValue_InvalidDNSName: TCTeoError {
        TCTeoError(.invalidParameterValue_InvalidDNSName)
    }

    /// 加速域名状态不符合要求。
    public static var invalidParameterValue_InvalidDomainStatus: TCTeoError {
        TCTeoError(.invalidParameterValue_InvalidDomainStatus)
    }

    /// 该同名站点标识已被占用，请重新输入。
    ///
    /// 同名站点标识已被使用，用户需重新输入不一样的
    public static var invalidParameterValue_ZoneSameAsName: TCTeoError {
        TCTeoError(.invalidParameterValue_ZoneSameAsName)
    }

    /// 操作频繁，请稍后重试。
    public static var invalidParameter_ActionInProgress: TCTeoError {
        TCTeoError(.invalidParameter_ActionInProgress)
    }

    public static var invalidParameter_AliasDomainNotSupportSMCert: TCTeoError {
        TCTeoError(.invalidParameter_AliasDomainNotSupportSMCert)
    }

    /// 查询字符串规则超过了限制。
    public static var invalidParameter_CacheKeyQueryStringTooManyValue: TCTeoError {
        TCTeoError(.invalidParameter_CacheKeyQueryStringTooManyValue)
    }

    /// HTTPS证书和域名不匹配。
    public static var invalidParameter_CertNotMatchDomain: TCTeoError {
        TCTeoError(.invalidParameter_CertNotMatchDomain)
    }

    /// 内部错误。
    public static var invalidParameter_CertSystemError: TCTeoError {
        TCTeoError(.invalidParameter_CertSystemError)
    }

    /// HTTPS证书即将过期。
    public static var invalidParameter_CertToExpire: TCTeoError {
        TCTeoError(.invalidParameter_CertToExpire)
    }

    /// 证书错误。
    public static var invalidParameter_CertTooShortKeySize: TCTeoError {
        TCTeoError(.invalidParameter_CertTooShortKeySize)
    }

    /// IPv6 访问与客户端 IP 地理位置功能冲突。
    public static var invalidParameter_ClientIpCountryConflictsWithIpv6: TCTeoError {
        TCTeoError(.invalidParameter_ClientIpCountryConflictsWithIpv6)
    }

    /// CNAME模式下无法申请泛域名证书。
    public static var invalidParameter_CnameWildHostNotAllowApplyCertificate: TCTeoError {
        TCTeoError(.invalidParameter_CnameWildHostNotAllowApplyCertificate)
    }

    /// 源站不能和域名一致。
    public static var invalidParameter_ConflictHostOrigin: TCTeoError {
        TCTeoError(.invalidParameter_ConflictHostOrigin)
    }

    /// 域名不存在或不属于该账号。
    public static var invalidParameter_DomainNotFound: TCTeoError {
        TCTeoError(.invalidParameter_DomainNotFound)
    }

    /// 当前域名已开启流量调度功能。
    public static var invalidParameter_DomainOnTrafficScheduling: TCTeoError {
        TCTeoError(.invalidParameter_DomainOnTrafficScheduling)
    }

    /// 操作不支持条件。
    public static var invalidParameter_ErrActionUnsupportTarget: TCTeoError {
        TCTeoError(.invalidParameter_ErrActionUnsupportTarget)
    }

    /// 非法操作。
    public static var invalidParameter_ErrInvalidAction: TCTeoError {
        TCTeoError(.invalidParameter_ErrInvalidAction)
    }

    /// 非法操作-非法参数。
    public static var invalidParameter_ErrInvalidActionParam: TCTeoError {
        TCTeoError(.invalidParameter_ErrInvalidActionParam)
    }

    /// 非法操作-非法参数-无效action。
    public static var invalidParameter_ErrInvalidActionParamAction: TCTeoError {
        TCTeoError(.invalidParameter_ErrInvalidActionParamAction)
    }

    /// 非法操作-非法参数-无效参数值类型。
    public static var invalidParameter_ErrInvalidActionParamBadValueType: TCTeoError {
        TCTeoError(.invalidParameter_ErrInvalidActionParamBadValueType)
    }

    /// 非法操作-非法参数-参数名重复。
    public static var invalidParameter_ErrInvalidActionParamDuplicateName: TCTeoError {
        TCTeoError(.invalidParameter_ErrInvalidActionParamDuplicateName)
    }

    /// 非法操作-非法参数-无效参数值类型。
    public static var invalidParameter_ErrInvalidActionParamName: TCTeoError {
        TCTeoError(.invalidParameter_ErrInvalidActionParamName)
    }

    /// 非法操作-非法参数-参数值数量超出限制。
    public static var invalidParameter_ErrInvalidActionParamTooManyValues: TCTeoError {
        TCTeoError(.invalidParameter_ErrInvalidActionParamTooManyValues)
    }

    /// 非法操作-非法类型。
    public static var invalidParameter_ErrInvalidActionType: TCTeoError {
        TCTeoError(.invalidParameter_ErrInvalidActionType)
    }

    /// 非法条件-非法忽略大小写。
    public static var invalidParameter_ErrInvalidConditionIgnoreCase: TCTeoError {
        TCTeoError(.invalidParameter_ErrInvalidConditionIgnoreCase)
    }

    /// 非法条件-非法参数名称-无效的参数名称。
    public static var invalidParameter_ErrInvalidConditionNameBadName: TCTeoError {
        TCTeoError(.invalidParameter_ErrInvalidConditionNameBadName)
    }

    /// 非法条件-非法参数名称-匹配类型不支持参数名称。
    public static var invalidParameter_ErrInvalidConditionNameTargetNotSupportName: TCTeoError {
        TCTeoError(.invalidParameter_ErrInvalidConditionNameTargetNotSupportName)
    }

    /// 非法条件-非法参数值-无效的正则表达式。
    public static var invalidParameter_ErrInvalidConditionValueBadRegular: TCTeoError {
        TCTeoError(.invalidParameter_ErrInvalidConditionValueBadRegular)
    }

    /// 非法条件-非法参数值-无效的url。
    public static var invalidParameter_ErrInvalidConditionValueBadUrl: TCTeoError {
        TCTeoError(.invalidParameter_ErrInvalidConditionValueBadUrl)
    }

    /// 非法条件-非法参数值-无效的参数值。
    public static var invalidParameter_ErrInvalidConditionValueBadValue: TCTeoError {
        TCTeoError(.invalidParameter_ErrInvalidConditionValueBadValue)
    }

    /// 非法条件-非法参数值-无效的参数值-文件名不应包含文件后缀。
    public static var invalidParameter_ErrInvalidConditionValueBadValueContainFileNameExtension: TCTeoError {
        TCTeoError(.invalidParameter_ErrInvalidConditionValueBadValueContainFileNameExtension)
    }

    /// 非法条件-非法参数值-参数值长度超出限制。
    public static var invalidParameter_ErrInvalidConditionValueTooLongValue: TCTeoError {
        TCTeoError(.invalidParameter_ErrInvalidConditionValueTooLongValue)
    }

    /// 非法条件-非法参数值-正则表达式数量超出限制。
    public static var invalidParameter_ErrInvalidConditionValueTooManyRegular: TCTeoError {
        TCTeoError(.invalidParameter_ErrInvalidConditionValueTooManyRegular)
    }

    /// 非法条件-非法参数值-参数值数量超出限制。
    public static var invalidParameter_ErrInvalidConditionValueTooManyValues: TCTeoError {
        TCTeoError(.invalidParameter_ErrInvalidConditionValueTooManyValues)
    }

    /// 非法条件-非法参数值-通配符数量超出限制。
    public static var invalidParameter_ErrInvalidConditionValueTooManyWildcard: TCTeoError {
        TCTeoError(.invalidParameter_ErrInvalidConditionValueTooManyWildcard)
    }

    /// 非法条件-非法参数值-参数值数量为0。
    public static var invalidParameter_ErrInvalidConditionValueZeroLength: TCTeoError {
        TCTeoError(.invalidParameter_ErrInvalidConditionValueZeroLength)
    }

    /// 开启 Grpc 协议支持需要同时开启 HTTP/2 协议支持。
    public static var invalidParameter_GrpcRequireHttp2: TCTeoError {
        TCTeoError(.invalidParameter_GrpcRequireHttp2)
    }

    /// 域名不存在。
    public static var invalidParameter_HostNotFound: TCTeoError {
        TCTeoError(.invalidParameter_HostNotFound)
    }

    /// CNAME 未切换或者源站未路由到EO服务器。
    public static var invalidParameter_HostStatusNotAllowApplyCertificate: TCTeoError {
        TCTeoError(.invalidParameter_HostStatusNotAllowApplyCertificate)
    }

    /// 参数错误。
    public static var invalidParameter_InvalidAccelerateType: TCTeoError {
        TCTeoError(.invalidParameter_InvalidAccelerateType)
    }

    /// 无效的token鉴权。
    public static var invalidParameter_InvalidAuthentication: TCTeoError {
        TCTeoError(.invalidParameter_InvalidAuthentication)
    }

    /// 无效的token鉴权密钥。
    public static var invalidParameter_InvalidAuthenticationTypeSecretKey: TCTeoError {
        TCTeoError(.invalidParameter_InvalidAuthenticationTypeSecretKey)
    }

    /// 无效的token鉴权参数。
    public static var invalidParameter_InvalidAuthenticationTypeSignParam: TCTeoError {
        TCTeoError(.invalidParameter_InvalidAuthenticationTypeSignParam)
    }

    /// 无效的token鉴权时间格式。
    public static var invalidParameter_InvalidAuthenticationTypeTimeFormat: TCTeoError {
        TCTeoError(.invalidParameter_InvalidAuthenticationTypeTimeFormat)
    }

    /// 无效的token鉴权时间参数。
    public static var invalidParameter_InvalidAuthenticationTypeTimeParam: TCTeoError {
        TCTeoError(.invalidParameter_InvalidAuthenticationTypeTimeParam)
    }

    /// 无效的第三方对象存储。
    public static var invalidParameter_InvalidAwsPrivateAccess: TCTeoError {
        TCTeoError(.invalidParameter_InvalidAwsPrivateAccess)
    }

    /// 无效的备源回源Host。
    public static var invalidParameter_InvalidBackupServerName: TCTeoError {
        TCTeoError(.invalidParameter_InvalidBackupServerName)
    }

    /// 无效的节点缓存。
    public static var invalidParameter_InvalidCacheConfigCache: TCTeoError {
        TCTeoError(.invalidParameter_InvalidCacheConfigCache)
    }

    /// 无效的节点缓存，遵循源站行为。
    public static var invalidParameter_InvalidCacheConfigFollowOrigin: TCTeoError {
        TCTeoError(.invalidParameter_InvalidCacheConfigFollowOrigin)
    }

    /// 无效的缓存键。
    public static var invalidParameter_InvalidCacheKey: TCTeoError {
        TCTeoError(.invalidParameter_InvalidCacheKey)
    }

    /// 无效的缓存键忽略大小写。
    public static var invalidParameter_InvalidCacheKeyIgnoreCase: TCTeoError {
        TCTeoError(.invalidParameter_InvalidCacheKeyIgnoreCase)
    }

    /// 无效的查询字符串。
    public static var invalidParameter_InvalidCacheKeyQueryStringValue: TCTeoError {
        TCTeoError(.invalidParameter_InvalidCacheKeyQueryStringValue)
    }

    /// 无效的自定义Cache Key Scheme无效。
    public static var invalidParameter_InvalidCacheKeyScheme: TCTeoError {
        TCTeoError(.invalidParameter_InvalidCacheKeyScheme)
    }

    /// 无效的节点缓存。
    public static var invalidParameter_InvalidCacheOnlyOnSwitch: TCTeoError {
        TCTeoError(.invalidParameter_InvalidCacheOnlyOnSwitch)
    }

    /// 无效的节点缓存时间。
    public static var invalidParameter_InvalidCacheTime: TCTeoError {
        TCTeoError(.invalidParameter_InvalidCacheTime)
    }

    /// 证书信息错误。
    public static var invalidParameter_InvalidCertInfo: TCTeoError {
        TCTeoError(.invalidParameter_InvalidCertInfo)
    }

    /// 无效的客户端IP请求头。
    public static var invalidParameter_InvalidClientIpHeaderName: TCTeoError {
        TCTeoError(.invalidParameter_InvalidClientIpHeaderName)
    }

    /// 分区域回源的源站无效。
    public static var invalidParameter_InvalidClientIpOrigin: TCTeoError {
        TCTeoError(.invalidParameter_InvalidClientIpOrigin)
    }

    /// 无效的智能加速。
    public static var invalidParameter_InvalidDynamicRoutine: TCTeoError {
        TCTeoError(.invalidParameter_InvalidDynamicRoutine)
    }

    /// 套餐包不支持智能加速配置。
    public static var invalidParameter_InvalidDynamicRoutineBilling: TCTeoError {
        TCTeoError(.invalidParameter_InvalidDynamicRoutineBilling)
    }

    /// 无效的自定义错误页面。
    public static var invalidParameter_InvalidErrorPage: TCTeoError {
        TCTeoError(.invalidParameter_InvalidErrorPage)
    }

    /// 无效的自定义错误页面。
    public static var invalidParameter_InvalidErrorPageRedirectUrl: TCTeoError {
        TCTeoError(.invalidParameter_InvalidErrorPageRedirectUrl)
    }

    /// 无效的HTTPS。
    public static var invalidParameter_InvalidHttps: TCTeoError {
        TCTeoError(.invalidParameter_InvalidHttps)
    }

    /// 无效的HTTPS证书。
    public static var invalidParameter_InvalidHttpsCertInfo: TCTeoError {
        TCTeoError(.invalidParameter_InvalidHttpsCertInfo)
    }

    /// 加密套件与TLS版本不匹配。
    public static var invalidParameter_InvalidHttpsCipherSuiteAndTlsVersion: TCTeoError {
        TCTeoError(.invalidParameter_InvalidHttpsCipherSuiteAndTlsVersion)
    }

    /// 无效的HTTPS HSTS。
    public static var invalidParameter_InvalidHttpsHstsMaxAge: TCTeoError {
        TCTeoError(.invalidParameter_InvalidHttpsHstsMaxAge)
    }

    /// 无效的HTTPS TLS版本。
    public static var invalidParameter_InvalidHttpsTlsVersion: TCTeoError {
        TCTeoError(.invalidParameter_InvalidHttpsTlsVersion)
    }

    /// 无效的Ipv6开关配置。
    public static var invalidParameter_InvalidIpv6Switch: TCTeoError {
        TCTeoError(.invalidParameter_InvalidIpv6Switch)
    }

    /// 无效的浏览器缓存。
    public static var invalidParameter_InvalidMaxAgeTime: TCTeoError {
        TCTeoError(.invalidParameter_InvalidMaxAgeTime)
    }

    /// 无效的源站。
    public static var invalidParameter_InvalidOrigin: TCTeoError {
        TCTeoError(.invalidParameter_InvalidOrigin)
    }

    /// 请填写正确的回源地址，回源地址不能是内网IP、环回地址、保留地址。
    public static var invalidParameter_InvalidOriginIp: TCTeoError {
        TCTeoError(.invalidParameter_InvalidOriginIp)
    }

    /// 参数错误。
    public static var invalidParameter_InvalidParameter: TCTeoError {
        TCTeoError(.invalidParameter_InvalidParameter)
    }

    /// 套餐包不支持最大上传大小。
    public static var invalidParameter_InvalidPostMaxSizeBilling: TCTeoError {
        TCTeoError(.invalidParameter_InvalidPostMaxSizeBilling)
    }

    /// 无效的最大上传大小。
    public static var invalidParameter_InvalidPostSizeValue: TCTeoError {
        TCTeoError(.invalidParameter_InvalidPostSizeValue)
    }

    /// 请填写AccessKeyId、SecretAccessKey作为第三方对象存储私有访问参数。
    public static var invalidParameter_InvalidPrivateAccessParams: TCTeoError {
        TCTeoError(.invalidParameter_InvalidPrivateAccessParams)
    }

    /// 套餐包不支持Quic配置。
    public static var invalidParameter_InvalidQuicBilling: TCTeoError {
        TCTeoError(.invalidParameter_InvalidQuicBilling)
    }

    /// 无效的分片回源。
    public static var invalidParameter_InvalidRangeOriginPull: TCTeoError {
        TCTeoError(.invalidParameter_InvalidRangeOriginPull)
    }

    /// 无效的请求头header。
    public static var invalidParameter_InvalidRequestHeaderName: TCTeoError {
        TCTeoError(.invalidParameter_InvalidRequestHeaderName)
    }

    /// x-forwarded-for 请求头配置无效
    ///
    /// x-forwarded-for 请求头无法自定义，请删除后提交
    public static var invalidParameter_InvalidRequestHeaderNameXff: TCTeoError {
        TCTeoError(.invalidParameter_InvalidRequestHeaderNameXff)
    }

    /// 无效的请求头header。
    public static var invalidParameter_InvalidRequestHeaderValue: TCTeoError {
        TCTeoError(.invalidParameter_InvalidRequestHeaderValue)
    }

    /// 无套餐包。
    public static var invalidParameter_InvalidResourceIdBilling: TCTeoError {
        TCTeoError(.invalidParameter_InvalidResourceIdBilling)
    }

    /// 无效的响应头header。
    public static var invalidParameter_InvalidResponseHeaderName: TCTeoError {
        TCTeoError(.invalidParameter_InvalidResponseHeaderName)
    }

    /// 无效的响应头header。
    public static var invalidParameter_InvalidResponseHeaderValue: TCTeoError {
        TCTeoError(.invalidParameter_InvalidResponseHeaderValue)
    }

    /// 无效的规则引擎操作。
    public static var invalidParameter_InvalidRuleEngineAction: TCTeoError {
        TCTeoError(.invalidParameter_InvalidRuleEngineAction)
    }

    /// 规则不存在。
    public static var invalidParameter_InvalidRuleEngineNotFound: TCTeoError {
        TCTeoError(.invalidParameter_InvalidRuleEngineNotFound)
    }

    /// 无效的规则引擎条件。
    public static var invalidParameter_InvalidRuleEngineTarget: TCTeoError {
        TCTeoError(.invalidParameter_InvalidRuleEngineTarget)
    }

    /// 无效的规则引擎文件后缀条件。
    public static var invalidParameter_InvalidRuleEngineTargetsExtension: TCTeoError {
        TCTeoError(.invalidParameter_InvalidRuleEngineTargetsExtension)
    }

    /// 无效的规则引擎URL条件。
    public static var invalidParameter_InvalidRuleEngineTargetsUrl: TCTeoError {
        TCTeoError(.invalidParameter_InvalidRuleEngineTargetsUrl)
    }

    /// 无效的回源Host。
    public static var invalidParameter_InvalidServerName: TCTeoError {
        TCTeoError(.invalidParameter_InvalidServerName)
    }

    public static var invalidParameter_InvalidStandardDebugClientIp: TCTeoError {
        TCTeoError(.invalidParameter_InvalidStandardDebugClientIp)
    }

    public static var invalidParameter_InvalidStandardDebugExpireTimeLimit: TCTeoError {
        TCTeoError(.invalidParameter_InvalidStandardDebugExpireTimeLimit)
    }

    /// 无效的回源请求参数设置-无效查询字符串值。
    public static var invalidParameter_InvalidUpstreamRequestQueryStringValue: TCTeoError {
        TCTeoError(.invalidParameter_InvalidUpstreamRequestQueryStringValue)
    }

    /// URL重写的目标HOST无效。
    public static var invalidParameter_InvalidUrlRedirectHost: TCTeoError {
        TCTeoError(.invalidParameter_InvalidUrlRedirectHost)
    }

    /// URL重写的目标URL无效。
    public static var invalidParameter_InvalidUrlRedirectUrl: TCTeoError {
        TCTeoError(.invalidParameter_InvalidUrlRedirectUrl)
    }

    /// 无效的WebSocket。
    public static var invalidParameter_InvalidWebSocketTimeout: TCTeoError {
        TCTeoError(.invalidParameter_InvalidWebSocketTimeout)
    }

    /// 无效的缓存键。
    public static var invalidParameter_KeyRulesInvalidQueryStringValue: TCTeoError {
        TCTeoError(.invalidParameter_KeyRulesInvalidQueryStringValue)
    }

    /// 参数长度超过限制。
    public static var invalidParameter_LengthExceedsLimit: TCTeoError {
        TCTeoError(.invalidParameter_LengthExceedsLimit)
    }

    /// 不支持智能路由
    public static var invalidParameter_MultiplyLayerNotSupportSmartRouting: TCTeoError {
        TCTeoError(.invalidParameter_MultiplyLayerNotSupportSmartRouting)
    }

    public static var invalidParameter_NotSupportThisPreset: TCTeoError {
        TCTeoError(.invalidParameter_NotSupportThisPreset)
    }

    /// 源站是内网IP。
    public static var invalidParameter_OriginIsInnerIp: TCTeoError {
        TCTeoError(.invalidParameter_OriginIsInnerIp)
    }

    /// 修改源站操作中源站组Id必填。
    public static var invalidParameter_OriginOriginGroupIdIsRequired: TCTeoError {
        TCTeoError(.invalidParameter_OriginOriginGroupIdIsRequired)
    }

    /// 参数错误: 无效 "结束时间", 不在允许的查询范围内: [开始时间, 开始+ 7天]
    public static var invalidParameter_ParameterError: TCTeoError {
        TCTeoError(.invalidParameter_ParameterError)
    }

    /// 套餐不存在。
    public static var invalidParameter_PlanNotFound: TCTeoError {
        TCTeoError(.invalidParameter_PlanNotFound)
    }

    /// 最大上传大小超出限制
    public static var invalidParameter_PostMaxSizeLimitExceeded: TCTeoError {
        TCTeoError(.invalidParameter_PostMaxSizeLimitExceeded)
    }

    /// 参数错误
    public static var invalidParameter_Security: TCTeoError {
        TCTeoError(.invalidParameter_Security)
    }

    /// 配置项参数错误。
    public static var invalidParameter_SettingInvalidParam: TCTeoError {
        TCTeoError(.invalidParameter_SettingInvalidParam)
    }

    /// 资源存在错误。
    public static var invalidParameter_Target: TCTeoError {
        TCTeoError(.invalidParameter_Target)
    }

    /// 任务无法生成。
    public static var invalidParameter_TaskNotGenerated: TCTeoError {
        TCTeoError(.invalidParameter_TaskNotGenerated)
    }

    /// 内部错误。
    public static var invalidParameter_TaskSystemError: TCTeoError {
        TCTeoError(.invalidParameter_TaskSystemError)
    }

    /// 文件上传链接存在问题。
    public static var invalidParameter_UploadUrl: TCTeoError {
        TCTeoError(.invalidParameter_UploadUrl)
    }

    /// 站点已被绑定。
    public static var invalidParameter_ZoneHasBeenBound: TCTeoError {
        TCTeoError(.invalidParameter_ZoneHasBeenBound)
    }

    /// 站点不存在。
    public static var invalidParameter_ZoneNotFound: TCTeoError {
        TCTeoError(.invalidParameter_ZoneNotFound)
    }

    /// 超过配额限制。
    public static var limitExceeded: TCTeoError {
        TCTeoError(.limitExceeded)
    }

    /// 本次提交的资源数超过上限。
    public static var limitExceeded_BatchQuota: TCTeoError {
        TCTeoError(.limitExceeded_BatchQuota)
    }

    /// 当天提交的资源数超过上限。
    public static var limitExceeded_DailyQuota: TCTeoError {
        TCTeoError(.limitExceeded_DailyQuota)
    }

    /// 计费套餐不支持。
    public static var limitExceeded_PackNotAllow: TCTeoError {
        TCTeoError(.limitExceeded_PackNotAllow)
    }

    /// 查询时间范围超出限制。
    ///
    /// 减少时间查询范围
    public static var limitExceeded_QueryTimeLimitExceeded: TCTeoError {
        TCTeoError(.limitExceeded_QueryTimeLimitExceeded)
    }

    /// 单位时间内接口请求频率达到限制。
    public static var limitExceeded_RateLimitExceeded: TCTeoError {
        TCTeoError(.limitExceeded_RateLimitExceeded)
    }

    /// 操作被拒绝。
    public static var operationDenied: TCTeoError {
        TCTeoError(.operationDenied)
    }

    /// 请联系商务开启「中国大陆网络优化(国际加速)」功能。
    public static var operationDenied_AccelerateMainlandDisable: TCTeoError {
        TCTeoError(.operationDenied_AccelerateMainlandDisable)
    }

    /// 中国大陆加速与IPv6冲突，不能同时配置。
    public static var operationDenied_AccelerateMainlandIpv6Conflict: TCTeoError {
        TCTeoError(.operationDenied_AccelerateMainlandIpv6Conflict)
    }

    public static var operationDenied_DisableZoneNotCompleted: TCTeoError {
        TCTeoError(.operationDenied_DisableZoneNotCompleted)
    }

    /// 有域名在共享cname组内，不可切换接入类型。
    public static var operationDenied_DomainInShareCnameGroup: TCTeoError {
        TCTeoError(.operationDenied_DomainInShareCnameGroup)
    }

    /// 域名被封禁，暂时无法操作。
    public static var operationDenied_DomainIsBlocked: TCTeoError {
        TCTeoError(.operationDenied_DomainIsBlocked)
    }

    /// 域名尚未备案。
    public static var operationDenied_DomainNoICP: TCTeoError {
        TCTeoError(.operationDenied_DomainNoICP)
    }

    /// 站点处于停用状态，请开启后重试。
    public static var operationDenied_ErrZoneIsAlreadyPaused: TCTeoError {
        TCTeoError(.operationDenied_ErrZoneIsAlreadyPaused)
    }

    /// 开启高防时必须保证安全是开启状态。
    public static var operationDenied_InvalidAdvancedDefenseSecurityType: TCTeoError {
        TCTeoError(.operationDenied_InvalidAdvancedDefenseSecurityType)
    }

    /// 开启高防必须保证站点加速区域是国内。
    public static var operationDenied_InvalidAdvancedDefenseZoneArea: TCTeoError {
        TCTeoError(.operationDenied_InvalidAdvancedDefenseZoneArea)
    }

    /// 4层代理资源处于封禁中，禁止操作。
    public static var operationDenied_L4ProxyInBannedStatus: TCTeoError {
        TCTeoError(.operationDenied_L4ProxyInBannedStatus)
    }

    public static var operationDenied_L4ProxyInProgressStatus: TCTeoError {
        TCTeoError(.operationDenied_L4ProxyInProgressStatus)
    }

    public static var operationDenied_L4ProxyInStoppingStatus: TCTeoError {
        TCTeoError(.operationDenied_L4ProxyInStoppingStatus)
    }

    /// 绑定4层实例有处于非运行中的状态，禁止操作。
    public static var operationDenied_L4StatusNotInOnline: TCTeoError {
        TCTeoError(.operationDenied_L4StatusNotInOnline)
    }

    public static var operationDenied_L7HostInProcessStatus: TCTeoError {
        TCTeoError(.operationDenied_L7HostInProcessStatus)
    }

    /// 已存在多个Cname接入站点，不允许切换至NS。
    public static var operationDenied_MultipleCnameZone: TCTeoError {
        TCTeoError(.operationDenied_MultipleCnameZone)
    }

    /// NS接入模式不支持域名流量调度功能。
    public static var operationDenied_NSNotAllowTrafficStrategy: TCTeoError {
        TCTeoError(.operationDenied_NSNotAllowTrafficStrategy)
    }

    /// DNS 记录不允许添加。
    public static var operationDenied_RecordIsForbidden: TCTeoError {
        TCTeoError(.operationDenied_RecordIsForbidden)
    }

    /// 当前有互相排斥的请求操作并行发起，请稍后重试。
    public static var operationDenied_ResourceLockedTemporary: TCTeoError {
        TCTeoError(.operationDenied_ResourceLockedTemporary)
    }

    /// 资源被占用。
    public static var resourceInUse: TCTeoError {
        TCTeoError(.resourceInUse)
    }

    /// 资源被本账号别称域名占用。
    public static var resourceInUse_AliasDomain: TCTeoError {
        TCTeoError(.resourceInUse_AliasDomain)
    }

    /// 当前已存在相同的别称域名，不支持重复添加
    public static var resourceInUse_AliasName: TCTeoError {
        TCTeoError(.resourceInUse_AliasName)
    }

    /// 资源被本账号Cname接入占用。
    public static var resourceInUse_Cname: TCTeoError {
        TCTeoError(.resourceInUse_Cname)
    }

    /// Dns资源被占用。
    public static var resourceInUse_Dns: TCTeoError {
        TCTeoError(.resourceInUse_Dns)
    }

    /// 该域名正在解析中，如果您需要开启加速，请前往 DNS 记录页开启加速。
    public static var resourceInUse_DnsRecord: TCTeoError {
        TCTeoError(.resourceInUse_DnsRecord)
    }

    /// 已存在相同的别称域名。
    public static var resourceInUse_DuplicateName: TCTeoError {
        TCTeoError(.resourceInUse_DuplicateName)
    }

    /// 资源已被泛域名占用。
    public static var resourceInUse_GenericHost: TCTeoError {
        TCTeoError(.resourceInUse_GenericHost)
    }

    /// 资源被本账号的子域名占用。
    public static var resourceInUse_Host: TCTeoError {
        TCTeoError(.resourceInUse_Host)
    }

    /// 资源被本账号NS接入占用。
    public static var resourceInUse_NS: TCTeoError {
        TCTeoError(.resourceInUse_NS)
    }

    /// 资源被其他用户接入。
    public static var resourceInUse_Others: TCTeoError {
        TCTeoError(.resourceInUse_Others)
    }

    /// 资源被其他账号别称域名占用。
    public static var resourceInUse_OthersAliasDomain: TCTeoError {
        TCTeoError(.resourceInUse_OthersAliasDomain)
    }

    /// 资源被其他账号Cname接入占用。
    public static var resourceInUse_OthersCname: TCTeoError {
        TCTeoError(.resourceInUse_OthersCname)
    }

    /// 资源被其他账号的子域名占用。
    public static var resourceInUse_OthersHost: TCTeoError {
        TCTeoError(.resourceInUse_OthersHost)
    }

    /// 资源被其他账号NS接入占用。
    public static var resourceInUse_OthersNS: TCTeoError {
        TCTeoError(.resourceInUse_OthersNS)
    }

    /// 资源被本账号和其他账号同时Cname接入占用。
    public static var resourceInUse_SelfAndOthersCname: TCTeoError {
        TCTeoError(.resourceInUse_SelfAndOthersCname)
    }

    /// 别称域名已站点接入。
    public static var resourceInUse_Zone: TCTeoError {
        TCTeoError(.resourceInUse_Zone)
    }

    /// 资源不足。
    public static var resourceInsufficient: TCTeoError {
        TCTeoError(.resourceInsufficient)
    }

    /// 资源不存在。
    public static var resourceNotFound: TCTeoError {
        TCTeoError(.resourceNotFound)
    }

    /// 最大上传大小额度未配置
    public static var resourceNotFound_PostMaxSizeQuotaNotFound: TCTeoError {
        TCTeoError(.resourceNotFound_PostMaxSizeQuotaNotFound)
    }

    /// 资源不可用。
    public static var resourceUnavailable: TCTeoError {
        TCTeoError(.resourceUnavailable)
    }

    /// 证书不存在或未授权。
    public static var resourceUnavailable_CertNotFound: TCTeoError {
        TCTeoError(.resourceUnavailable_CertNotFound)
    }

    /// 当前域名已接入EdgeOne，如确认需要接入到当前账号，请进行域名找回。
    public static var resourceUnavailable_DomainAlreadyExists: TCTeoError {
        TCTeoError(.resourceUnavailable_DomainAlreadyExists)
    }

    /// 请求的加速域名不存在，请更正后重试。
    public static var resourceUnavailable_DomainNotFound: TCTeoError {
        TCTeoError(.resourceUnavailable_DomainNotFound)
    }

    /// 域名不存在或未开启代理。
    public static var resourceUnavailable_HostNotFound: TCTeoError {
        TCTeoError(.resourceUnavailable_HostNotFound)
    }

    /// 站点不存在或不属于该账号。
    public static var resourceUnavailable_ZoneNotFound: TCTeoError {
        TCTeoError(.resourceUnavailable_ZoneNotFound)
    }

    /// 资源售卖火爆，已售罄，正在加紧补货中，当前无法新增域名，请您耐心等待。
    public static var resourcesSoldOut_L7LackOfResources: TCTeoError {
        TCTeoError(.resourcesSoldOut_L7LackOfResources)
    }

    /// 未授权操作。
    public static var unauthorizedOperation: TCTeoError {
        TCTeoError(.unauthorizedOperation)
    }

    /// Cam 未授权。
    public static var unauthorizedOperation_CamUnauthorized: TCTeoError {
        TCTeoError(.unauthorizedOperation_CamUnauthorized)
    }

    /// 鉴权错误。
    public static var unauthorizedOperation_DomainEmpty: TCTeoError {
        TCTeoError(.unauthorizedOperation_DomainEmpty)
    }

    /// 子账户没有操作权限，请添加权限后继续操作。
    public static var unauthorizedOperation_NoPermission: TCTeoError {
        TCTeoError(.unauthorizedOperation_NoPermission)
    }

    /// 后端服务器发生未知错误。
    public static var unauthorizedOperation_Unknown: TCTeoError {
        TCTeoError(.unauthorizedOperation_Unknown)
    }

    /// 操作不支持。
    public static var unsupportedOperation: TCTeoError {
        TCTeoError(.unsupportedOperation)
    }

    /// 别称域名不支持目标域名源站类型为对象存储。
    public static var unsupportedOperation_TargetNameOriginTypeCos: TCTeoError {
        TCTeoError(.unsupportedOperation_TargetNameOriginTypeCos)
    }

    public func asTeoError() -> TCTeoError {
        return self
    }
}
