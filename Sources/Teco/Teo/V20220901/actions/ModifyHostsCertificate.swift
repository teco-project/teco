//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Teo {
    /// ModifyHostsCertificate请求参数结构体
    public struct ModifyHostsCertificateRequest: TCRequest {
        /// 站点 ID。
        public let zoneId: String

        /// 需要修改证书配置的加速域名。
        public let hosts: [String]

        /// 配置证书的模式，取值有：
        /// - disable：不配置证书；
        /// - eofreecert：配置 EdgeOne 免费证书；
        /// - sslcert：配置 SSL 证书。
        /// 不填时默认取值为 disable。
        public let mode: String?

        /// SSL 证书配置，本参数仅在 mode = sslcert 时生效，传入对应证书的 CertId 即可。您可以前往 [SSL 证书列表](https://console.cloud.tencent.com/certoverview) 查看 CertId。
        public let serverCertInfo: [ServerCertInfo]?

        /// 托管类型，取值有：
        /// - none：不托管EO；
        /// - apply：托管EO
        ///
        /// 不填，默认取值为none。
        @available(*, deprecated)
        public let applyType: String? = nil

        public init(zoneId: String, hosts: [String], mode: String? = nil, serverCertInfo: [ServerCertInfo]? = nil) {
            self.zoneId = zoneId
            self.hosts = hosts
            self.mode = mode
            self.serverCertInfo = serverCertInfo
        }

        @available(*, deprecated, renamed: "init(zoneId:hosts:mode:serverCertInfo:)", message: "'applyType' is deprecated in 'ModifyHostsCertificateRequest'. Setting this parameter has no effect.")
        public init(zoneId: String, hosts: [String], mode: String? = nil, serverCertInfo: [ServerCertInfo]? = nil, applyType: String? = nil) {
            self.zoneId = zoneId
            self.hosts = hosts
            self.mode = mode
            self.serverCertInfo = serverCertInfo
        }

        enum CodingKeys: String, CodingKey {
            case zoneId = "ZoneId"
            case hosts = "Hosts"
            case mode = "Mode"
            case serverCertInfo = "ServerCertInfo"
            case applyType = "ApplyType"
        }
    }

    /// ModifyHostsCertificate返回参数结构体
    public struct ModifyHostsCertificateResponse: TCResponse {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }

    /// 配置域名证书
    ///
    /// 完成域名创建之后，您可以为域名配置自有证书，也可以使用 EdgeOne 为您提供的 [免费证书](https://cloud.tencent.com/document/product/1552/90437)。
    /// 如果您需要配置自有证书，请先将证书上传至 [SSL证书控制台](https://console.cloud.tencent.com/certoverview)，然后在本接口中传入对应的证书 ID。详情参考 [部署自有证书至 EdgeOne 域名
    /// ](https://cloud.tencent.com/document/product/1552/88874)。
    @inlinable @discardableResult
    public func modifyHostsCertificate(_ input: ModifyHostsCertificateRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<ModifyHostsCertificateResponse> {
        self.client.execute(action: "ModifyHostsCertificate", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 配置域名证书
    ///
    /// 完成域名创建之后，您可以为域名配置自有证书，也可以使用 EdgeOne 为您提供的 [免费证书](https://cloud.tencent.com/document/product/1552/90437)。
    /// 如果您需要配置自有证书，请先将证书上传至 [SSL证书控制台](https://console.cloud.tencent.com/certoverview)，然后在本接口中传入对应的证书 ID。详情参考 [部署自有证书至 EdgeOne 域名
    /// ](https://cloud.tencent.com/document/product/1552/88874)。
    @inlinable @discardableResult
    public func modifyHostsCertificate(_ input: ModifyHostsCertificateRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyHostsCertificateResponse {
        try await self.client.execute(action: "ModifyHostsCertificate", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 配置域名证书
    ///
    /// 完成域名创建之后，您可以为域名配置自有证书，也可以使用 EdgeOne 为您提供的 [免费证书](https://cloud.tencent.com/document/product/1552/90437)。
    /// 如果您需要配置自有证书，请先将证书上传至 [SSL证书控制台](https://console.cloud.tencent.com/certoverview)，然后在本接口中传入对应的证书 ID。详情参考 [部署自有证书至 EdgeOne 域名
    /// ](https://cloud.tencent.com/document/product/1552/88874)。
    @inlinable @discardableResult
    public func modifyHostsCertificate(zoneId: String, hosts: [String], mode: String? = nil, serverCertInfo: [ServerCertInfo]? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<ModifyHostsCertificateResponse> {
        self.modifyHostsCertificate(.init(zoneId: zoneId, hosts: hosts, mode: mode, serverCertInfo: serverCertInfo), region: region, logger: logger, on: eventLoop)
    }

    /// 配置域名证书
    ///
    /// 完成域名创建之后，您可以为域名配置自有证书，也可以使用 EdgeOne 为您提供的 [免费证书](https://cloud.tencent.com/document/product/1552/90437)。
    /// 如果您需要配置自有证书，请先将证书上传至 [SSL证书控制台](https://console.cloud.tencent.com/certoverview)，然后在本接口中传入对应的证书 ID。详情参考 [部署自有证书至 EdgeOne 域名
    /// ](https://cloud.tencent.com/document/product/1552/88874)。
    @available(*, deprecated, renamed: "modifyHostsCertificate(zoneId:hosts:mode:serverCertInfo:region:logger:on:)", message: "'applyType' is deprecated. Setting this parameter has no effect.")
    @inlinable @discardableResult
    public func modifyHostsCertificate(zoneId: String, hosts: [String], mode: String? = nil, serverCertInfo: [ServerCertInfo]? = nil, applyType: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<ModifyHostsCertificateResponse> {
        self.modifyHostsCertificate(.init(zoneId: zoneId, hosts: hosts, mode: mode, serverCertInfo: serverCertInfo, applyType: applyType), region: region, logger: logger, on: eventLoop)
    }

    /// 配置域名证书
    ///
    /// 完成域名创建之后，您可以为域名配置自有证书，也可以使用 EdgeOne 为您提供的 [免费证书](https://cloud.tencent.com/document/product/1552/90437)。
    /// 如果您需要配置自有证书，请先将证书上传至 [SSL证书控制台](https://console.cloud.tencent.com/certoverview)，然后在本接口中传入对应的证书 ID。详情参考 [部署自有证书至 EdgeOne 域名
    /// ](https://cloud.tencent.com/document/product/1552/88874)。
    @inlinable @discardableResult
    public func modifyHostsCertificate(zoneId: String, hosts: [String], mode: String? = nil, serverCertInfo: [ServerCertInfo]? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyHostsCertificateResponse {
        try await self.modifyHostsCertificate(.init(zoneId: zoneId, hosts: hosts, mode: mode, serverCertInfo: serverCertInfo), region: region, logger: logger, on: eventLoop)
    }

    /// 配置域名证书
    ///
    /// 完成域名创建之后，您可以为域名配置自有证书，也可以使用 EdgeOne 为您提供的 [免费证书](https://cloud.tencent.com/document/product/1552/90437)。
    /// 如果您需要配置自有证书，请先将证书上传至 [SSL证书控制台](https://console.cloud.tencent.com/certoverview)，然后在本接口中传入对应的证书 ID。详情参考 [部署自有证书至 EdgeOne 域名
    /// ](https://cloud.tencent.com/document/product/1552/88874)。
    @available(*, deprecated, renamed: "modifyHostsCertificate(zoneId:hosts:mode:serverCertInfo:region:logger:on:)", message: "'applyType' is deprecated. Setting this parameter has no effect.")
    @inlinable @discardableResult
    public func modifyHostsCertificate(zoneId: String, hosts: [String], mode: String? = nil, serverCertInfo: [ServerCertInfo]? = nil, applyType: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyHostsCertificateResponse {
        try await self.modifyHostsCertificate(.init(zoneId: zoneId, hosts: hosts, mode: mode, serverCertInfo: serverCertInfo, applyType: applyType), region: region, logger: logger, on: eventLoop)
    }
}
