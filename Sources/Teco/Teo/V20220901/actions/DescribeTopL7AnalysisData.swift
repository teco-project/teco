//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import struct Foundation.Date
import Logging
import NIOCore
import TecoCore
import TecoDateHelpers

extension Teo {
    /// DescribeTopL7AnalysisData请求参数结构体
    public struct DescribeTopL7AnalysisDataRequest: TCRequestModel {
        /// 开始时间。
        ///
        /// While the wrapped date value is immutable just like other fields, you can customize the projected
        /// string value (through `$`-prefix) in case the synthesized encoding is incorrect.
        @TCTimestampISO8601Encoding public var startTime: Date

        /// 结束时间。
        ///
        /// While the wrapped date value is immutable just like other fields, you can customize the projected
        /// string value (through `$`-prefix) in case the synthesized encoding is incorrect.
        @TCTimestampISO8601Encoding public var endTime: Date

        /// 查询的指标，取值有：
        /// <li> l7Flow_outFlux_country：按国家/地区维度统计流量指标；</li>
        /// <li> l7Flow_outFlux_statusCode：按状态码维度统计流量指标；</li>
        /// <li> l7Flow_outFlux_domain：按域名维度统计流量指标；</li>
        /// <li> l7Flow_outFlux_url：按URL维度统计流量指标; </li>
        /// <li> l7Flow_outFlux_resourceType：按资源类型维度统计流量指标；</li>
        /// <li> l7Flow_outFlux_sip：按客户端的源IP维度统计流量指标；</li>
        /// <li> l7Flow_outFlux_referers：按refer信息维度统计流量指标；</li>
        /// <li> l7Flow_outFlux_ua_device：按设备类型维度统计流量指标; </li>
        /// <li> l7Flow_outFlux_ua_browser：按浏览器类型维度统计流量指标；</li>
        /// <li> l7Flow_outFlux_us_os：按操作系统类型维度统计流量指标；</li>
        /// <li> l7Flow_request_country：按国家/地区维度统计请求数指标；</li>
        /// <li> l7Flow_request_statusCode：按状态码维度统计请求数指标；</li>
        /// <li> l7Flow_request_domain：按域名维度统计请求数指标；</li>
        /// <li> l7Flow_request_url：按URL维度统计请求数指标; </li>
        /// <li> l7Flow_request_resourceType：按资源类型维度统计请求数指标；</li>
        /// <li> l7Flow_request_sip：按客户端的源IP维度统计请求数指标；</li>
        /// <li> l7Flow_request_referer：按refer信息维度统计请求数指标；</li>
        /// <li> l7Flow_request_ua_device：按设备类型维度统计请求数指标; </li>
        /// <li> l7Flow_request_ua_browser：按浏览器类型维度统计请求数指标；</li>
        /// <li> l7Flow_request_us_os：按操作系统类型维度统计请求数指标。</li>
        public let metricName: String

        /// 站点集合，此参数必填，不填默认查询为空。
        public let zoneIds: [String]?

        /// 查询前多少个数据，最大值为1000，不填默认默认为: 10， 表示查询前top10的数据。
        public let limit: Int64?

        /// 过滤条件，详细的过滤条件Key值如下：
        /// <li>country
        ///
        /// 按照【<strong>国家/地区</strong>】进行过滤，国家/地区遵循<a href="https://zh.wikipedia.org/wiki/ISO_3166-1">ISO 3166</a>规范。</li>
        /// <li>province
        ///
        /// 按照【<strong>省份</strong>】进行过滤，此参数只支持服务区域为中国大陆。</li>
        /// <li>isp
        ///
        /// 按照【<strong>运营商</strong>】进行过滤，此参数只支持服务区域为中国大陆。
        ///
        /// 对应的Value可选项如下：
        ///
        /// 2：中国电信；
        ///
        /// 26：中国联通；
        ///
        /// 1046：中国移动；
        ///
        /// 3947：中国铁通；
        ///
        /// 38：教育网；
        ///
        /// 43：长城宽带；
        ///
        /// 0：其他运营商。</li>
        /// <li>domain
        ///
        /// 按照【<strong>子域名</strong>】进行过滤，子域名形如： test.example.com。</li>
        /// <li>url
        ///
        /// 按照【<strong>URL Path</strong>】进行过滤，URL Path形如：/content或/content/test.jpg。
        ///
        /// 若只填写url参数，则最多可查询近30天的数据；
        ///
        /// 若同时填写url+Zonelds参数，则支持的查询数据范围为套餐支持的<a href="https://cloud.tencent.com/document/product/1552/77380#edgeone-.E5.A5.97.E9.A4.90">数据分析最大查询范围</a>与30天两者中的较小值。</li>
        /// <li>referer
        ///
        /// 按照【<strong>Referer头信息</strong>】进行过滤, Referer形如：example.com。
        ///
        /// 若只填写referer参数，则最多可查询近30天的数据；
        ///
        /// 若同时填写referer+Zonelds参数，则支持的查询数据范围为套餐支持的<a href="https://cloud.tencent.com/document/product/1552/77380#edgeone-.E5.A5.97.E9.A4.90">数据分析最大查询范围</a>与30天两者中的较小值。</li>
        /// <li>resourceType
        ///
        /// 按照【<strong>资源类型</strong>】进行过滤，资源类型一般是文件后缀，形如: .jpg, .css。
        ///
        /// 若只填写resourceType参数，则最多可查询近30天的数据；
        ///
        /// 若同时填写resourceType+Zonelds参数，则支持的查询数据范围为套餐支持的<a href="https://cloud.tencent.com/document/product/1552/77380#edgeone-.E5.A5.97.E9.A4.90">数据分析最大查询范围</a>与30天两者中的较小值。</li>
        /// <li>protocol
        ///
        /// 按照【<strong>HTTP协议版本</strong>】进行过滤。
        ///
        /// 对应的Value可选项如下：
        ///
        /// HTTP/1.0：HTTP 1.0；
        ///
        /// HTTP/1.1：HTTP 1.1；
        ///
        /// HTTP/2.0：HTTP 2.0；
        ///
        /// HTTP/3.0：HTTP 3.0；
        ///
        /// WebSocket：WebSocket。</li>
        /// <li>socket
        ///
        /// 按照【<strong>HTTP协议类型</strong>】进行过滤。
        ///
        /// 对应的Value可选项如下：
        ///
        /// HTTP：HTTP 协议；
        ///
        /// HTTPS：HTTPS协议；
        ///
        /// QUIC：QUIC协议。</li>
        /// <li>statusCode
        ///
        /// 按照【<strong>状态码</strong>】进行过滤。
        ///
        /// 若只填写statusCode参数，则最多可查询近30天的数据；
        ///
        /// 若同时填写statusCode+Zonelds参数，则支持的查询数据范围为套餐支持的<a href="https://cloud.tencent.com/document/product/1552/77380#edgeone-.E5.A5.97.E9.A4.90">数据分析最大查询范围</a>与30天两者中的较小值。
        ///
        /// 对应的Value可选项如下：
        ///
        /// 1XX：1xx类型的状态码；
        ///
        /// 100：100状态码；
        ///
        /// 101：101状态码；
        ///
        /// 102：102状态码；
        ///
        /// 2XX：2xx类型的状态码；
        ///
        /// 200：200状态码；
        ///
        /// 201：201状态码；
        ///
        /// 202：202状态码；
        ///
        /// 203：203状态码；
        ///
        /// 204：204状态码；
        ///
        /// 205：205状态码；
        ///
        /// 206：206状态码；
        ///
        /// 207：207状态码；
        ///
        /// 3XX：3xx类型的状态码；
        ///
        /// 300：300状态码；
        ///
        /// 301：301状态码；
        ///
        /// 302：302状态码；
        ///
        /// 303：303状态码；
        ///
        /// 304：304状态码；
        ///
        /// 305：305状态码；
        ///
        /// 307：307状态码；
        ///
        /// 4XX：4xx类型的状态码；
        ///
        /// 400：400状态码；
        ///
        /// 401：401状态码；
        ///
        /// 402：402状态码；
        ///
        /// 403：403状态码；
        ///
        /// 404：404状态码；
        ///
        /// 405：405状态码；
        ///
        /// 406：406状态码；
        ///
        /// 407：407状态码；
        ///
        /// 408：408状态码；
        ///
        /// 409：409状态码；
        ///
        /// 410：410状态码；
        ///
        /// 411：411状态码；
        ///
        /// 412：412状态码；
        ///
        /// 412：413状态码；
        ///
        /// 414：414状态码；
        ///
        /// 415：415状态码；
        ///
        /// 416：416状态码；
        ///
        /// 417：417状态码；
        ///
        /// 422：422状态码；
        ///
        /// 423：423状态码；
        ///
        /// 424：424状态码；
        ///
        /// 426：426状态码；
        ///
        /// 451：451状态码；
        ///
        /// 5XX：5xx类型的状态码；
        ///
        /// 500：500状态码；
        ///
        /// 501：501状态码；
        ///
        /// 502：502状态码；
        ///
        /// 503：503状态码；
        ///
        /// 504：504状态码；
        ///
        /// 505：505状态码；
        ///
        /// 506：506状态码；
        ///
        /// 507：507状态码；
        ///
        /// 510：510状态码；
        ///
        /// 514：514状态码；
        ///
        /// 544：544状态码。</li>
        /// <li>browserType
        ///
        /// 按照【<strong>浏览器类型</strong>】进行过滤。
        ///
        /// 若只填写browserType参数，则最多可查询近30天的数据；
        ///
        /// 若同时填写browserType+Zonelds参数，则支持的查询数据范围为套餐支持的<a href="https://cloud.tencent.com/document/product/1552/77380#edgeone-.E5.A5.97.E9.A4.90">数据分析最大查询范围</a>与30天两者中的较小值。
        ///
        /// 对应Value的可选项如下：
        ///
        /// Firefox：Firefox浏览器；
        ///
        /// Chrome：Chrome浏览器；
        ///
        /// Safari：Safari浏览器；
        ///
        /// Other：其他浏览器类型；
        ///
        /// Empty：浏览器类型为空；
        ///
        /// Bot：搜索引擎爬虫；
        ///
        /// MicrosoftEdge：MicrosoftEdge浏览器；
        ///
        /// IE：IE浏览器；
        ///
        /// Opera：Opera浏览器；
        ///
        /// QQBrowser：QQ浏览器；
        ///
        /// LBBrowser：LB浏览器；
        ///
        /// MaxthonBrowser：Maxthon浏览器；
        ///
        /// SouGouBrowser：搜狗浏览器；
        ///
        /// BIDUBrowser：百度浏览器；
        ///
        /// TaoBrowser：淘浏览器；
        ///
        /// UBrowser：UC浏览器。</li>
        /// <li>deviceType
        ///
        /// 按照【<strong>设备类型</strong>】进行过滤。
        ///
        /// 若只填写deviceType参数，则最多可查询近30天的数据；
        ///
        /// 若同时填写deviceType+Zonelds参数，则支持的查询数据范围为套餐支持的<a href="https://cloud.tencent.com/document/product/1552/77380#edgeone-.E5.A5.97.E9.A4.90">数据分析最大查询范围</a>与30天两者中的较小值。
        ///
        /// 对应Value的可选项如下：
        ///
        /// TV：TV设备；
        ///
        /// Tablet：Tablet设备；
        ///
        /// Mobile：Mobile设备；
        ///
        /// Desktop：Desktop设备；
        ///
        /// Other：其他设备类型；
        ///
        /// Empty：设备类型为空。</li>
        /// <li>operatingSystemType
        ///
        /// 按照【<strong>操作系统类型</strong>】进行过滤。
        ///
        /// 若只填写operatingSystemType参数，则最多可查询近30天的数据；
        ///
        /// 若同时填写operatingSystemType+Zonelds参数，则支持的查询数据范围为套餐支持的<a href="https://cloud.tencent.com/document/product/1552/77380#edgeone-.E5.A5.97.E9.A4.90">数据分析最大查询范围</a>与30天两者中的较小值。
        ///
        /// 对应Value的可选项如下：
        ///
        /// Linux：Linux操作系统；
        ///
        /// MacOS：MacOs操作系统；
        ///
        /// Android：Android操作系统；
        ///
        /// IOS：IOS操作系统；
        ///
        /// Windows：Windows操作系统；
        ///
        /// NetBSD：NetBSD；
        ///
        /// ChromiumOS：ChromiumOS；
        ///
        /// Bot：搜索引擎爬虫；
        ///
        /// Other：其他类型的操作系统；
        ///
        /// Empty：操作系统为空。</li>
        /// <li>tlsVersion
        ///
        /// 按照【<strong>TLS版本</strong>】进行过滤。
        ///
        /// 若只填写tlsVersion参数，则最多可查询近30天的数据；
        ///
        /// 若同时填写tlsVersion+Zonelds参数，则支持的查询数据范围为套餐支持的<a href="https://cloud.tencent.com/document/product/1552/77380#edgeone-.E5.A5.97.E9.A4.90">数据分析最大查询范围</a>与30天两者中的较小值。
        ///
        /// 对应Value的可选项如下：
        ///
        /// TLS1.0：TLS 1.0；
        ///
        /// TLS1.1：TLS 1.1；
        ///
        /// TLS1.2：TLS 1.2；
        ///
        /// TLS1.3：TLS 1.3。</li>
        /// <li>ipVersion
        ///
        /// 按照【<strong>IP版本</strong>】进行过滤。
        ///
        /// 对应Value的可选项如下：
        ///
        /// 4：Ipv4；
        ///
        /// 6：Ipv6。</li>
        /// <li>tagKey
        ///
        /// 按照【<strong>标签Key</strong>】进行过滤。</li>
        /// <li>tagValue
        ///
        /// 按照【<strong>标签Value</strong>】进行过滤。</li>
        public let filters: [QueryCondition]?

        /// 查询时间粒度，取值有：
        /// <li>min：1分钟；</li>
        /// <li>5min：5分钟；</li>
        /// <li>hour：1小时；</li>
        /// <li>day：1天。</li>不填将根据开始时间跟结束时间的间距自动推算粒度，具体为：一小时范围内以min粒度查询，两天范围内以5min粒度查询，七天范围内以hour粒度查询，超过七天以day粒度查询。
        public let interval: String?

        /// 数据归属地区，取值有：
        /// <li>overseas：全球（除中国大陆地区）数据；</li>
        /// <li>mainland：中国大陆地区数据；</li>
        /// <li>global：全球数据。</li>不填默认取值为global。
        public let area: String?

        public init(startTime: Date, endTime: Date, metricName: String, zoneIds: [String]? = nil, limit: Int64? = nil, filters: [QueryCondition]? = nil, interval: String? = nil, area: String? = nil) {
            self._startTime = .init(wrappedValue: startTime)
            self._endTime = .init(wrappedValue: endTime)
            self.metricName = metricName
            self.zoneIds = zoneIds
            self.limit = limit
            self.filters = filters
            self.interval = interval
            self.area = area
        }

        enum CodingKeys: String, CodingKey {
            case startTime = "StartTime"
            case endTime = "EndTime"
            case metricName = "MetricName"
            case zoneIds = "ZoneIds"
            case limit = "Limit"
            case filters = "Filters"
            case interval = "Interval"
            case area = "Area"
        }
    }

    /// DescribeTopL7AnalysisData返回参数结构体
    public struct DescribeTopL7AnalysisDataResponse: TCResponseModel {
        /// 查询结果的总条数。
        public let totalCount: UInt64

        /// 七层流量前topN数据列表。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let data: [TopDataRecord]?

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case totalCount = "TotalCount"
            case data = "Data"
            case requestId = "RequestId"
        }
    }

    /// 查询流量分析Top数据
    ///
    /// 本接口（DescribeTopL7AnalysisData）用于查询七层流量前topN的数据。
    @inlinable
    public func describeTopL7AnalysisData(_ input: DescribeTopL7AnalysisDataRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeTopL7AnalysisDataResponse> {
        self.client.execute(action: "DescribeTopL7AnalysisData", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 查询流量分析Top数据
    ///
    /// 本接口（DescribeTopL7AnalysisData）用于查询七层流量前topN的数据。
    @inlinable
    public func describeTopL7AnalysisData(_ input: DescribeTopL7AnalysisDataRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeTopL7AnalysisDataResponse {
        try await self.client.execute(action: "DescribeTopL7AnalysisData", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 查询流量分析Top数据
    ///
    /// 本接口（DescribeTopL7AnalysisData）用于查询七层流量前topN的数据。
    @inlinable
    public func describeTopL7AnalysisData(startTime: Date, endTime: Date, metricName: String, zoneIds: [String]? = nil, limit: Int64? = nil, filters: [QueryCondition]? = nil, interval: String? = nil, area: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeTopL7AnalysisDataResponse> {
        self.describeTopL7AnalysisData(.init(startTime: startTime, endTime: endTime, metricName: metricName, zoneIds: zoneIds, limit: limit, filters: filters, interval: interval, area: area), region: region, logger: logger, on: eventLoop)
    }

    /// 查询流量分析Top数据
    ///
    /// 本接口（DescribeTopL7AnalysisData）用于查询七层流量前topN的数据。
    @inlinable
    public func describeTopL7AnalysisData(startTime: Date, endTime: Date, metricName: String, zoneIds: [String]? = nil, limit: Int64? = nil, filters: [QueryCondition]? = nil, interval: String? = nil, area: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeTopL7AnalysisDataResponse {
        try await self.describeTopL7AnalysisData(.init(startTime: startTime, endTime: endTime, metricName: metricName, zoneIds: zoneIds, limit: limit, filters: filters, interval: interval, area: area), region: region, logger: logger, on: eventLoop)
    }
}
