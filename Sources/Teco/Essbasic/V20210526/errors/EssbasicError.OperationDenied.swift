//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension TCEssbasicError {
    public struct OperationDenied: TCEssbasicErrorType {
        enum Code: String {
            case authTag = "OperationDenied.AuthTag"
            case bannedApplication = "OperationDenied.BannedApplication"
            case byFilesServerSignForbid = "OperationDenied.ByFilesServerSignForbid"
            case downLoadMoreThanOne = "OperationDenied.DownLoadMoreThanOne"
            case errNoResourceAccess = "OperationDenied.ErrNoResourceAccess"
            case fileDeleted = "OperationDenied.FileDeleted"
            case flowHasTerminated = "OperationDenied.FlowHasTerminated"
            case flowStatusForbid = "OperationDenied.FlowStatusForbid"
            case forbid = "OperationDenied.Forbid"
            case invalidApproverAge = "OperationDenied.InvalidApproverAge"
            case noApiAuth = "OperationDenied.NoApiAuth"
            case noFlowPermission = "OperationDenied.NoFlowPermission"
            case noIdentityVerify = "OperationDenied.NoIdentityVerify"
            case noQuota = "OperationDenied.NoQuota"
            case notBelongSuperAdminOrLegalPerson = "OperationDenied.NotBelongSuperAdminOrLegalPerson"
            case operateType = "OperationDenied.OperateType"
            case operatorHasNoPermission = "OperationDenied.OperatorHasNoPermission"
            case outQueryLimit = "OperationDenied.OutQueryLimit"
            case overseaAbilityNotOpen = "OperationDenied.OverseaAbilityNotOpen"
            case proveNoQuota = "OperationDenied.ProveNoQuota"
            case userNotInOrganization = "OperationDenied.UserNotInOrganization"
            case whiteListForbid = "OperationDenied.WhiteListForbid"
            case other = "OperationDenied"
        }

        private let error: Code

        public let context: TCErrorContext?

        public var errorCode: String {
            self.error.rawValue
        }

        /// Initializer used by ``TCClient`` to match an error of this type.
        public init?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }

        internal init(_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }

        /// 不支持的可见性标识。
        public static var authTag: OperationDenied {
            OperationDenied(.authTag)
        }

        /// 应用号已被禁止。
        ///
        /// 当前应用号已经被禁止，请联系运营人员处理。
        public static var bannedApplication: OperationDenied {
            OperationDenied(.bannedApplication)
        }

        /// 文件发起静默签未开通白名单。
        public static var byFilesServerSignForbid: OperationDenied {
            OperationDenied(.byFilesServerSignForbid)
        }

        /// 只支持下载单个。
        public static var downLoadMoreThanOne: OperationDenied {
            OperationDenied(.downLoadMoreThanOne)
        }

        /// 无资源访问权限。
        public static var errNoResourceAccess: OperationDenied {
            OperationDenied(.errNoResourceAccess)
        }

        /// 文件已删除。
        public static var fileDeleted: OperationDenied {
            OperationDenied(.fileDeleted)
        }

        /// 流程已终止。
        public static var flowHasTerminated: OperationDenied {
            OperationDenied(.flowHasTerminated)
        }

        /// 签署流程状态不正确，请检查后重试。
        public static var flowStatusForbid: OperationDenied {
            OperationDenied(.flowStatusForbid)
        }

        /// 禁止操作。
        ///
        /// 请检查是否有足够的权限。再重试，若仍未解决，请联系工作人员 ，并提供有报错的requestid。
        public static var forbid: OperationDenied {
            OperationDenied(.forbid)
        }

        /// 签署人未达到合法年龄。
        public static var invalidApproverAge: OperationDenied {
            OperationDenied(.invalidApproverAge)
        }

        /// 没有API权限。
        ///
        /// 请参考实际的错误描述进行处理，请仔细阅读API文档，优先检查参数及重试，如重试多次仍未解决，请联系开发人员。
        public static var noApiAuth: OperationDenied {
            OperationDenied(.noApiAuth)
        }

        /// 无权操作合同。
        public static var noFlowPermission: OperationDenied {
            OperationDenied(.noFlowPermission)
        }

        /// 未通过个人实名。
        ///
        /// 请检查证件信息是否正确、人脸是否匹配。再重试，若仍未解决，请联系工作人员 ，并提供有报错的requestid。
        public static var noIdentityVerify: OperationDenied {
            OperationDenied(.noIdentityVerify)
        }

        /// 流程配额不足。
        ///
        /// 请检查企业的配额是否充足。若仍未解决，请联系工作人员 ，并提供有报错的requestid。
        public static var noQuota: OperationDenied {
            OperationDenied(.noQuota)
        }

        /// 不属于企业超管或者法人。
        ///
        /// 不属于企业超管或者法人，请超管/法人权限用户操作
        public static var notBelongSuperAdminOrLegalPerson: OperationDenied {
            OperationDenied(.notBelongSuperAdminOrLegalPerson)
        }

        /// 操作类型不支持。
        public static var operateType: OperationDenied {
            OperationDenied(.operateType)
        }

        /// 操作者权限不足。
        ///
        /// 联系管理员获取权限。
        public static var operatorHasNoPermission: OperationDenied {
            OperationDenied(.operatorHasNoPermission)
        }

        /// 超出查询上限。
        public static var outQueryLimit: OperationDenied {
            OperationDenied(.outQueryLimit)
        }

        /// 当前企业员工没有开通境外签署能力。
        public static var overseaAbilityNotOpen: OperationDenied {
            OperationDenied(.overseaAbilityNotOpen)
        }

        /// 出证计费额度不足。
        public static var proveNoQuota: OperationDenied {
            OperationDenied(.proveNoQuota)
        }

        /// 用户不归属于当前企业，无法操作，请检查后重试。
        ///
        /// 请确认用户是否已经在企业中。若仍未解决，请联系工作人员 ，并提供有报错的requestid。
        public static var userNotInOrganization: OperationDenied {
            OperationDenied(.userNotInOrganization)
        }

        /// 接口功能暂未开放，请联系客户经理申请白名单使用
        public static var whiteListForbid: OperationDenied {
            OperationDenied(.whiteListForbid)
        }

        /// 操作被拒绝。
        public static var other: OperationDenied {
            OperationDenied(.other)
        }

        public func asEssbasicError() -> TCEssbasicError {
            let code: TCEssbasicError.Code
            switch self.error {
            case .authTag:
                code = .operationDenied_AuthTag
            case .bannedApplication:
                code = .operationDenied_BannedApplication
            case .byFilesServerSignForbid:
                code = .operationDenied_ByFilesServerSignForbid
            case .downLoadMoreThanOne:
                code = .operationDenied_DownLoadMoreThanOne
            case .errNoResourceAccess:
                code = .operationDenied_ErrNoResourceAccess
            case .fileDeleted:
                code = .operationDenied_FileDeleted
            case .flowHasTerminated:
                code = .operationDenied_FlowHasTerminated
            case .flowStatusForbid:
                code = .operationDenied_FlowStatusForbid
            case .forbid:
                code = .operationDenied_Forbid
            case .invalidApproverAge:
                code = .operationDenied_InvalidApproverAge
            case .noApiAuth:
                code = .operationDenied_NoApiAuth
            case .noFlowPermission:
                code = .operationDenied_NoFlowPermission
            case .noIdentityVerify:
                code = .operationDenied_NoIdentityVerify
            case .noQuota:
                code = .operationDenied_NoQuota
            case .notBelongSuperAdminOrLegalPerson:
                code = .operationDenied_NotBelongSuperAdminOrLegalPerson
            case .operateType:
                code = .operationDenied_OperateType
            case .operatorHasNoPermission:
                code = .operationDenied_OperatorHasNoPermission
            case .outQueryLimit:
                code = .operationDenied_OutQueryLimit
            case .overseaAbilityNotOpen:
                code = .operationDenied_OverseaAbilityNotOpen
            case .proveNoQuota:
                code = .operationDenied_ProveNoQuota
            case .userNotInOrganization:
                code = .operationDenied_UserNotInOrganization
            case .whiteListForbid:
                code = .operationDenied_WhiteListForbid
            case .other:
                code = .operationDenied
            }
            return TCEssbasicError(code, context: self.context)
        }
    }
}
