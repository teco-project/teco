//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Emr {
    /// 查询流程作业状态
    ///
    /// 查询流程任务
    @inlinable
    public func describeJobFlow(_ input: DescribeJobFlowRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeJobFlowResponse > {
        self.client.execute(action: "DescribeJobFlow", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 查询流程作业状态
    ///
    /// 查询流程任务
    @inlinable
    public func describeJobFlow(_ input: DescribeJobFlowRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeJobFlowResponse {
        try await self.client.execute(action: "DescribeJobFlow", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribeJobFlow请求参数结构体
    public struct DescribeJobFlowRequest: TCRequestModel {
        /// 流程任务Id，RunJobFlow接口返回的值。
        public let jobFlowId: Int64
        
        public init (jobFlowId: Int64) {
            self.jobFlowId = jobFlowId
        }
        
        enum CodingKeys: String, CodingKey {
            case jobFlowId = "JobFlowId"
        }
    }
    
    /// DescribeJobFlow返回参数结构体
    public struct DescribeJobFlowResponse: TCResponseModel {
        /// 流程任务状态，可以为以下值：
        /// JobFlowInit，流程任务初始化。
        /// JobFlowResourceApplied，资源申请中，通常为JobFlow需要新建集群时的状态。
        /// JobFlowResourceReady，执行流程任务的资源就绪。
        /// JobFlowStepsRunning，流程任务步骤已提交。
        /// JobFlowStepsComplete，流程任务步骤已完成。
        /// JobFlowTerminating，流程任务所需资源销毁中。
        /// JobFlowFinish，流程任务已完成。
        public let state: String
        
        /// 流程任务步骤结果。
        public let details: [JobResult]
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case state = "State"
            case details = "Details"
            case requestId = "RequestId"
        }
    }
}