//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Cdb {
    /// OpenDBInstanceEncryption请求参数结构体
    public struct OpenDBInstanceEncryptionRequest: TCRequestModel {
        /// 云数据库实例 ID。
        public let instanceId: String

        /// 用户自定义密钥ID，CMK唯一标识符。该值为空时，将使用腾讯云自动生成的密钥KMS-CDB。
        public let keyId: String?

        /// 用户自定义密钥的存储地域。如：ap-guangzhou 。KeyId不为空时，该参数必填。
        public let keyRegion: String?

        public init(instanceId: String, keyId: String? = nil, keyRegion: String? = nil) {
            self.instanceId = instanceId
            self.keyId = keyId
            self.keyRegion = keyRegion
        }

        enum CodingKeys: String, CodingKey {
            case instanceId = "InstanceId"
            case keyId = "KeyId"
            case keyRegion = "KeyRegion"
        }
    }

    /// OpenDBInstanceEncryption返回参数结构体
    public struct OpenDBInstanceEncryptionResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }

    /// 启用数据存储加密
    ///
    /// 本接口(OpenDBInstanceEncryption)用于启用实例数据存储加密功能，支持用户指定自定义密钥。
    ///
    /// 注意，启用实例数据存储加密之前，需要进行以下操作：
    ///
    /// 1、进行 [实例初始化](https://cloud.tencent.com/document/api/236/15873) 操作；
    ///
    /// 2、开启 [KMS服务](https://console.cloud.tencent.com/kms2)；
    ///
    /// 3、对云数据库(MySQL)[授予访问KMS密钥的权限](https://console.cloud.tencent.com/cam/role)，角色名为MySQL_QCSRole，预设策略名为QcloudAccessForMySQLRole；
    ///
    /// 该 API 耗时可能到10s，客户端可能超时，如果调用 API 返回 InternalError ，请您调用DescribeDBInstanceInfo 确认后端加密是否开通成功。
    @inlinable @discardableResult
    public func openDBInstanceEncryption(_ input: OpenDBInstanceEncryptionRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<OpenDBInstanceEncryptionResponse> {
        self.client.execute(action: "OpenDBInstanceEncryption", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 启用数据存储加密
    ///
    /// 本接口(OpenDBInstanceEncryption)用于启用实例数据存储加密功能，支持用户指定自定义密钥。
    ///
    /// 注意，启用实例数据存储加密之前，需要进行以下操作：
    ///
    /// 1、进行 [实例初始化](https://cloud.tencent.com/document/api/236/15873) 操作；
    ///
    /// 2、开启 [KMS服务](https://console.cloud.tencent.com/kms2)；
    ///
    /// 3、对云数据库(MySQL)[授予访问KMS密钥的权限](https://console.cloud.tencent.com/cam/role)，角色名为MySQL_QCSRole，预设策略名为QcloudAccessForMySQLRole；
    ///
    /// 该 API 耗时可能到10s，客户端可能超时，如果调用 API 返回 InternalError ，请您调用DescribeDBInstanceInfo 确认后端加密是否开通成功。
    @inlinable @discardableResult
    public func openDBInstanceEncryption(_ input: OpenDBInstanceEncryptionRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> OpenDBInstanceEncryptionResponse {
        try await self.client.execute(action: "OpenDBInstanceEncryption", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 启用数据存储加密
    ///
    /// 本接口(OpenDBInstanceEncryption)用于启用实例数据存储加密功能，支持用户指定自定义密钥。
    ///
    /// 注意，启用实例数据存储加密之前，需要进行以下操作：
    ///
    /// 1、进行 [实例初始化](https://cloud.tencent.com/document/api/236/15873) 操作；
    ///
    /// 2、开启 [KMS服务](https://console.cloud.tencent.com/kms2)；
    ///
    /// 3、对云数据库(MySQL)[授予访问KMS密钥的权限](https://console.cloud.tencent.com/cam/role)，角色名为MySQL_QCSRole，预设策略名为QcloudAccessForMySQLRole；
    ///
    /// 该 API 耗时可能到10s，客户端可能超时，如果调用 API 返回 InternalError ，请您调用DescribeDBInstanceInfo 确认后端加密是否开通成功。
    @inlinable @discardableResult
    public func openDBInstanceEncryption(instanceId: String, keyId: String? = nil, keyRegion: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<OpenDBInstanceEncryptionResponse> {
        self.openDBInstanceEncryption(.init(instanceId: instanceId, keyId: keyId, keyRegion: keyRegion), region: region, logger: logger, on: eventLoop)
    }

    /// 启用数据存储加密
    ///
    /// 本接口(OpenDBInstanceEncryption)用于启用实例数据存储加密功能，支持用户指定自定义密钥。
    ///
    /// 注意，启用实例数据存储加密之前，需要进行以下操作：
    ///
    /// 1、进行 [实例初始化](https://cloud.tencent.com/document/api/236/15873) 操作；
    ///
    /// 2、开启 [KMS服务](https://console.cloud.tencent.com/kms2)；
    ///
    /// 3、对云数据库(MySQL)[授予访问KMS密钥的权限](https://console.cloud.tencent.com/cam/role)，角色名为MySQL_QCSRole，预设策略名为QcloudAccessForMySQLRole；
    ///
    /// 该 API 耗时可能到10s，客户端可能超时，如果调用 API 返回 InternalError ，请您调用DescribeDBInstanceInfo 确认后端加密是否开通成功。
    @inlinable @discardableResult
    public func openDBInstanceEncryption(instanceId: String, keyId: String? = nil, keyRegion: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> OpenDBInstanceEncryptionResponse {
        try await self.openDBInstanceEncryption(.init(instanceId: instanceId, keyId: keyId, keyRegion: keyRegion), region: region, logger: logger, on: eventLoop)
    }
}
