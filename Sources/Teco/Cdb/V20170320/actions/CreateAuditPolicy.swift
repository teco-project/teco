//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Cdb {
    /// 创建审计策略
    ///
    /// 本接口(CreateAuditPolicy)用于创建云数据库实例的审计策略，即将审计规则绑定到具体的云数据库实例上。
    @inlinable
    public func createAuditPolicy(_ input: CreateAuditPolicyRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < CreateAuditPolicyResponse > {
        self.client.execute(action: "CreateAuditPolicy", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 创建审计策略
    ///
    /// 本接口(CreateAuditPolicy)用于创建云数据库实例的审计策略，即将审计规则绑定到具体的云数据库实例上。
    @inlinable
    public func createAuditPolicy(_ input: CreateAuditPolicyRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> CreateAuditPolicyResponse {
        try await self.client.execute(action: "CreateAuditPolicy", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// CreateAuditPolicy请求参数结构体
    public struct CreateAuditPolicyRequest: TCRequestModel {
        /// 审计策略名称。
        public let name: String
        
        /// 审计规则 ID。
        public let ruleId: String
        
        /// 实例 ID，格式如：cdb-c1nl9rpv 或者 cdbro-c1nl9rpv，与云数据库控制台页面中显示的实例 ID 相同。
        public let instanceId: String
        
        /// 审计日志保存时长。支持值包括：
        /// 7 - 一周
        /// 30 - 一个月；
        /// 180 - 六个月；
        /// 365 - 一年；
        /// 1095 - 三年；
        /// 1825 - 五年；
        /// 实例首次开通审计策略时，可传该值，用于设置存储日志保存天数，默认为 30 天。若实例已存在审计策略，则此参数无效，可使用 更改审计服务配置 接口修改日志存储时长。
        public let logExpireDay: Int64?
        
        public init (name: String, ruleId: String, instanceId: String, logExpireDay: Int64?) {
            self.name = name
            self.ruleId = ruleId
            self.instanceId = instanceId
            self.logExpireDay = logExpireDay
        }
        
        enum CodingKeys: String, CodingKey {
            case name = "Name"
            case ruleId = "RuleId"
            case instanceId = "InstanceId"
            case logExpireDay = "LogExpireDay"
        }
    }
    
    /// CreateAuditPolicy返回参数结构体
    public struct CreateAuditPolicyResponse: TCResponseModel {
        /// 审计策略 ID。
        public let policyId: String
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case policyId = "PolicyId"
            case requestId = "RequestId"
        }
    }
}