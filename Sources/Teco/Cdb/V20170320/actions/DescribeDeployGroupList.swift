//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Cdb {
    /// 查询置放群组列表
    ///
    /// 本接口(DescribeDeployGroupList)用于查询用户的置放群组列表，可以指定置放群组 ID 或置放群组名称。
    @inlinable
    public func describeDeployGroupList(_ input: DescribeDeployGroupListRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeDeployGroupListResponse > {
        self.client.execute(action: "DescribeDeployGroupList", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 查询置放群组列表
    ///
    /// 本接口(DescribeDeployGroupList)用于查询用户的置放群组列表，可以指定置放群组 ID 或置放群组名称。
    @inlinable
    public func describeDeployGroupList(_ input: DescribeDeployGroupListRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeDeployGroupListResponse {
        try await self.client.execute(action: "DescribeDeployGroupList", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribeDeployGroupList请求参数结构体
    public struct DescribeDeployGroupListRequest: TCRequestModel {
        /// 置放群组 ID。
        public let deployGroupId: String?
        
        /// 置放群组名称。
        public let deployGroupName: String?
        
        /// 返回数量，默认为20，最大值为100。
        public let limit: Int64?
        
        /// 偏移量，默认为0。
        public let offset: Int64?
        
        public init (deployGroupId: String?, deployGroupName: String?, limit: Int64?, offset: Int64?) {
            self.deployGroupId = deployGroupId
            self.deployGroupName = deployGroupName
            self.limit = limit
            self.offset = offset
        }
        
        enum CodingKeys: String, CodingKey {
            case deployGroupId = "DeployGroupId"
            case deployGroupName = "DeployGroupName"
            case limit = "Limit"
            case offset = "Offset"
        }
    }
    
    /// DescribeDeployGroupList返回参数结构体
    public struct DescribeDeployGroupListResponse: TCResponseModel {
        /// 符合条件的记录总数。
        public let total: Int64
        
        /// 返回列表。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let items: [DeployGroupInfo]?
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case total = "Total"
            case items = "Items"
            case requestId = "RequestId"
        }
    }
}
