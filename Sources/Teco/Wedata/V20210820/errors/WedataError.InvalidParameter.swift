//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension TCWedataError {
    public struct InvalidParameter: TCWedataErrorType {
        enum Code: String {
            case duplicateName = "InvalidParameter.DuplicateName"
            case invalidFilterParameter = "InvalidParameter.InvalidFilterParameter"
            case ruleNotExist = "InvalidParameter.RuleNotExist"
            case serviceIsBusy = "InvalidParameter.ServiceIsBusy"
            case workspaceNotExist = "InvalidParameter.WorkspaceNotExist"
            case other = "InvalidParameter"
        }
        
        private let error: Code
        
        public let context: TCErrorContext?
        
        public var errorCode: String {
            self.error.rawValue
        }
        
        /// Initializer used by ``TCClient`` to match an error of this type.
        public init ?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }
        
        internal init (_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }
        
        /// 名称重复。
        public static var duplicateName: InvalidParameter {
            InvalidParameter(.duplicateName)
        }
        
        /// 查询过滤条件参数错误。
        ///
        /// 查询过滤条件参数错误
        public static var invalidFilterParameter: InvalidParameter {
            InvalidParameter(.invalidFilterParameter)
        }
        
        /// 规则不存在。
        public static var ruleNotExist: InvalidParameter {
            InvalidParameter(.ruleNotExist)
        }
        
        /// 服务繁忙，请稍后重试。
        ///
        /// 服务繁忙，请稍后重试
        public static var serviceIsBusy: InvalidParameter {
            InvalidParameter(.serviceIsBusy)
        }
        
        /// 工作空间不存在。
        public static var workspaceNotExist: InvalidParameter {
            InvalidParameter(.workspaceNotExist)
        }
        
        /// 参数错误。
        public static var other: InvalidParameter {
            InvalidParameter(.other)
        }
        
        public func asWedataError() -> TCWedataError {
            let code: TCWedataError.Code
            switch self.error {
            case .duplicateName: 
                code = .invalidParameter_DuplicateName
            case .invalidFilterParameter: 
                code = .invalidParameter_InvalidFilterParameter
            case .ruleNotExist: 
                code = .invalidParameter_RuleNotExist
            case .serviceIsBusy: 
                code = .invalidParameter_ServiceIsBusy
            case .workspaceNotExist: 
                code = .invalidParameter_WorkspaceNotExist
            case .other: 
                code = .invalidParameter
            }
            return TCWedataError(code, context: self.context)
        }
    }
}
