//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Wedata {
    /// 数据质量数据监测情况接口
    ///
    /// 数据质量的概览页面数据监测情况接口
    @inlinable
    public func describeDataCheckStat(_ input: DescribeDataCheckStatRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeDataCheckStatResponse > {
        self.client.execute(action: "DescribeDataCheckStat", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 数据质量数据监测情况接口
    ///
    /// 数据质量的概览页面数据监测情况接口
    @inlinable
    public func describeDataCheckStat(_ input: DescribeDataCheckStatRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeDataCheckStatResponse {
        try await self.client.execute(action: "DescribeDataCheckStat", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribeDataCheckStat请求参数结构体
    public struct DescribeDataCheckStatRequest: TCRequestModel {
        /// Project id
        public let projectId: String
        
        /// 开始时间，时间戳到秒
        public let beginDate: String
        
        /// 结束时间，时间戳到秒
        public let endDate: String
        
        public init (projectId: String, beginDate: String, endDate: String) {
            self.projectId = projectId
            self.beginDate = beginDate
            self.endDate = endDate
        }
        
        enum CodingKeys: String, CodingKey {
            case projectId = "ProjectId"
            case beginDate = "BeginDate"
            case endDate = "EndDate"
        }
    }
    
    /// DescribeDataCheckStat返回参数结构体
    public struct DescribeDataCheckStatResponse: TCResponseModel {
        /// 结果
        public let data: DataCheckStat
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case data = "Data"
            case requestId = "RequestId"
        }
    }
}