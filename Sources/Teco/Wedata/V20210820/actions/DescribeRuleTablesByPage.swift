//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Wedata {
    /// 获取表列表
    ///
    /// 获取表列表
    @inlinable
    public func describeRuleTablesByPage(_ input: DescribeRuleTablesByPageRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeRuleTablesByPageResponse > {
        self.client.execute(action: "DescribeRuleTablesByPage", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 获取表列表
    ///
    /// 获取表列表
    @inlinable
    public func describeRuleTablesByPage(_ input: DescribeRuleTablesByPageRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeRuleTablesByPageResponse {
        try await self.client.execute(action: "DescribeRuleTablesByPage", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribeRuleTablesByPage请求参数结构体
    public struct DescribeRuleTablesByPageRequest: TCRequestModel {
        /// 项目Id
        public let projectId: String?
        
        /// 分页序号
        public let pageSize: UInt64?
        
        /// 分页大小
        public let pageNumber: UInt64?
        
        /// 过滤条件
        public let filters: [Filter]?
        
        /// 排序条件
        public let orderFields: [OrderField]?
        
        public init (projectId: String?, pageSize: UInt64?, pageNumber: UInt64?, filters: [Filter]?, orderFields: [OrderField]?) {
            self.projectId = projectId
            self.pageSize = pageSize
            self.pageNumber = pageNumber
            self.filters = filters
            self.orderFields = orderFields
        }
        
        enum CodingKeys: String, CodingKey {
            case projectId = "ProjectId"
            case pageSize = "PageSize"
            case pageNumber = "PageNumber"
            case filters = "Filters"
            case orderFields = "OrderFields"
        }
    }
    
    /// DescribeRuleTablesByPage返回参数结构体
    public struct DescribeRuleTablesByPageResponse: TCResponseModel {
        /// 表列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let data: RuleGroupPage
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case data = "Data"
            case requestId = "RequestId"
        }
    }
}