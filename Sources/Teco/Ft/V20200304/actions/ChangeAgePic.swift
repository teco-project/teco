//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Ft {
    /// ChangeAgePic请求参数结构体
    public struct ChangeAgePicRequest: TCRequest {
        /// 人脸变老变年轻信息。
        /// 您可以输入最多3个 AgeInfo 来实现给一张图中的最多3张人脸变老变年轻。
        public let ageInfos: [AgeInfo]

        /// 图片 base64 数据，base64 编码后大小不可超过5M。
        /// 支持PNG、JPG、JPEG、BMP，不支持 GIF 图片。
        public let image: String?

        /// 图片的 Url ，对应图片 base64 编码后大小不可超过5M。
        /// 图片的 Url、Image必须提供一个，如果都提供，只使用 Url。
        /// 图片存储于腾讯云的 Url 可保障更高下载速度和稳定性，建议图片存储于腾讯云。
        /// 非腾讯云存储的Url速度和稳定性可能受一定影响。
        /// 支持PNG、JPG、JPEG、BMP，不支持 GIF 图片。
        public let url: String?

        /// 返回图像方式（base64 或 url ) ，二选一。url有效期为1天。
        public let rspImgType: String?

        public init(ageInfos: [AgeInfo], image: String? = nil, url: String? = nil, rspImgType: String? = nil) {
            self.ageInfos = ageInfos
            self.image = image
            self.url = url
            self.rspImgType = rspImgType
        }

        enum CodingKeys: String, CodingKey {
            case ageInfos = "AgeInfos"
            case image = "Image"
            case url = "Url"
            case rspImgType = "RspImgType"
        }
    }

    /// ChangeAgePic返回参数结构体
    public struct ChangeAgePicResponse: TCResponse {
        /// RspImgType 为 base64 时，返回处理后的图片 base64 数据。默认返回base64
        public let resultImage: String

        /// RspImgType 为 url 时，返回处理后的图片 url 数据。
        public let resultUrl: String

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case resultImage = "ResultImage"
            case resultUrl = "ResultUrl"
            case requestId = "RequestId"
        }
    }

    /// 人脸年龄变化
    ///
    /// 用户上传一张人脸图片，基于人脸编辑与生成算法，输出一张人脸变老或变年轻的图片，支持实现人脸不同年龄的变化。
    @inlinable
    public func changeAgePic(_ input: ChangeAgePicRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<ChangeAgePicResponse> {
        self.client.execute(action: "ChangeAgePic", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 人脸年龄变化
    ///
    /// 用户上传一张人脸图片，基于人脸编辑与生成算法，输出一张人脸变老或变年轻的图片，支持实现人脸不同年龄的变化。
    @inlinable
    public func changeAgePic(_ input: ChangeAgePicRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ChangeAgePicResponse {
        try await self.client.execute(action: "ChangeAgePic", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 人脸年龄变化
    ///
    /// 用户上传一张人脸图片，基于人脸编辑与生成算法，输出一张人脸变老或变年轻的图片，支持实现人脸不同年龄的变化。
    @inlinable
    public func changeAgePic(ageInfos: [AgeInfo], image: String? = nil, url: String? = nil, rspImgType: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<ChangeAgePicResponse> {
        self.changeAgePic(.init(ageInfos: ageInfos, image: image, url: url, rspImgType: rspImgType), region: region, logger: logger, on: eventLoop)
    }

    /// 人脸年龄变化
    ///
    /// 用户上传一张人脸图片，基于人脸编辑与生成算法，输出一张人脸变老或变年轻的图片，支持实现人脸不同年龄的变化。
    @inlinable
    public func changeAgePic(ageInfos: [AgeInfo], image: String? = nil, url: String? = nil, rspImgType: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ChangeAgePicResponse {
        try await self.changeAgePic(.init(ageInfos: ageInfos, image: image, url: url, rspImgType: rspImgType), region: region, logger: logger, on: eventLoop)
    }
}
