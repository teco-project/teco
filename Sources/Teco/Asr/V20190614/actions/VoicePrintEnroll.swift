//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Asr {
    /// VoicePrintEnroll请求参数结构体
    public struct VoicePrintEnrollRequest: TCRequestModel {
        /// 音频格式 0: pcm, 1: wav
        public let voiceFormat: Int64

        /// 音频采样率，目前支持16000，单位：Hz，必填
        public let sampleRate: Int64

        /// 音频数据, base64 编码, 音频时长不能超过30s，数据大小不超过2M
        public let data: String

        /// 说话人昵称  不超过32字节
        public let speakerNick: String?

        public init(voiceFormat: Int64, sampleRate: Int64, data: String, speakerNick: String? = nil) {
            self.voiceFormat = voiceFormat
            self.sampleRate = sampleRate
            self.data = data
            self.speakerNick = speakerNick
        }

        enum CodingKeys: String, CodingKey {
            case voiceFormat = "VoiceFormat"
            case sampleRate = "SampleRate"
            case data = "Data"
            case speakerNick = "SpeakerNick"
        }
    }

    /// VoicePrintEnroll返回参数结构体
    public struct VoicePrintEnrollResponse: TCResponseModel {
        /// 说话人基本数据
        public let data: VoicePrintBaseData

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case data = "Data"
            case requestId = "RequestId"
        }
    }

    /// 说话人注册
    ///
    /// 说话人注册接口用于注册一个指定音频，生成一个唯一的说话人id，后续可通过说话人验证接口验证其它音频和已有的说话人ID匹配度，注册时可指定说话人昵称，方便标识说话人ID，  说话人昵称可重复配置。
    /// （注: 一个appid最多可以注册1000个说话人ID，一个说话人ID仅支持一条音频注册，后续可通过更新接口进行更新）
    ///
    /// 使用须知
    /// 支持的输入格式：编码文件(PCM, WAV)、16 bit采样位数、单声道（mono）。
    ///
    /// 支持的音频采样率：16000 Hz。
    @inlinable
    public func voicePrintEnroll(_ input: VoicePrintEnrollRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<VoicePrintEnrollResponse> {
        self.client.execute(action: "VoicePrintEnroll", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 说话人注册
    ///
    /// 说话人注册接口用于注册一个指定音频，生成一个唯一的说话人id，后续可通过说话人验证接口验证其它音频和已有的说话人ID匹配度，注册时可指定说话人昵称，方便标识说话人ID，  说话人昵称可重复配置。
    /// （注: 一个appid最多可以注册1000个说话人ID，一个说话人ID仅支持一条音频注册，后续可通过更新接口进行更新）
    ///
    /// 使用须知
    /// 支持的输入格式：编码文件(PCM, WAV)、16 bit采样位数、单声道（mono）。
    ///
    /// 支持的音频采样率：16000 Hz。
    @inlinable
    public func voicePrintEnroll(_ input: VoicePrintEnrollRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> VoicePrintEnrollResponse {
        try await self.client.execute(action: "VoicePrintEnroll", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 说话人注册
    ///
    /// 说话人注册接口用于注册一个指定音频，生成一个唯一的说话人id，后续可通过说话人验证接口验证其它音频和已有的说话人ID匹配度，注册时可指定说话人昵称，方便标识说话人ID，  说话人昵称可重复配置。
    /// （注: 一个appid最多可以注册1000个说话人ID，一个说话人ID仅支持一条音频注册，后续可通过更新接口进行更新）
    ///
    /// 使用须知
    /// 支持的输入格式：编码文件(PCM, WAV)、16 bit采样位数、单声道（mono）。
    ///
    /// 支持的音频采样率：16000 Hz。
    @inlinable
    public func voicePrintEnroll(voiceFormat: Int64, sampleRate: Int64, data: String, speakerNick: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<VoicePrintEnrollResponse> {
        self.voicePrintEnroll(.init(voiceFormat: voiceFormat, sampleRate: sampleRate, data: data, speakerNick: speakerNick), region: region, logger: logger, on: eventLoop)
    }

    /// 说话人注册
    ///
    /// 说话人注册接口用于注册一个指定音频，生成一个唯一的说话人id，后续可通过说话人验证接口验证其它音频和已有的说话人ID匹配度，注册时可指定说话人昵称，方便标识说话人ID，  说话人昵称可重复配置。
    /// （注: 一个appid最多可以注册1000个说话人ID，一个说话人ID仅支持一条音频注册，后续可通过更新接口进行更新）
    ///
    /// 使用须知
    /// 支持的输入格式：编码文件(PCM, WAV)、16 bit采样位数、单声道（mono）。
    ///
    /// 支持的音频采样率：16000 Hz。
    @inlinable
    public func voicePrintEnroll(voiceFormat: Int64, sampleRate: Int64, data: String, speakerNick: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> VoicePrintEnrollResponse {
        try await self.voicePrintEnroll(.init(voiceFormat: voiceFormat, sampleRate: sampleRate, data: data, speakerNick: speakerNick), region: region, logger: logger, on: eventLoop)
    }
}
