//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Gse {
    /// GetInstanceAccess请求参数结构体
    public struct GetInstanceAccessRequest: TCRequestModel {
        /// 服务器舰队ID
        public let fleetId: String

        /// 实例Id
        public let instanceId: String

        public init(fleetId: String, instanceId: String) {
            self.fleetId = fleetId
            self.instanceId = instanceId
        }

        enum CodingKeys: String, CodingKey {
            case fleetId = "FleetId"
            case instanceId = "InstanceId"
        }
    }

    /// GetInstanceAccess返回参数结构体
    public struct GetInstanceAccessResponse: TCResponseModel {
        /// 实例登录所需要的凭据
        public let instanceAccess: InstanceAccess

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case instanceAccess = "InstanceAccess"
            case requestId = "RequestId"
        }
    }

    /// 获取实例登录所需要的凭据
    ///
    /// 本接口（GetInstanceAccess）用于获取实例登录所需要的凭据。
    @available(*, unavailable, message: "此接口无法使用，游戏服务器引擎GSE已于6.1正式下架，感谢您的支持")
    @inlinable
    public func getInstanceAccess(_ input: GetInstanceAccessRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<GetInstanceAccessResponse> {
        fatalError("GetInstanceAccess is no longer available.")
    }

    /// 获取实例登录所需要的凭据
    ///
    /// 本接口（GetInstanceAccess）用于获取实例登录所需要的凭据。
    @available(*, unavailable, message: "此接口无法使用，游戏服务器引擎GSE已于6.1正式下架，感谢您的支持")
    @inlinable
    public func getInstanceAccess(_ input: GetInstanceAccessRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> GetInstanceAccessResponse {
        fatalError("GetInstanceAccess is no longer available.")
    }

    /// 获取实例登录所需要的凭据
    ///
    /// 本接口（GetInstanceAccess）用于获取实例登录所需要的凭据。
    @available(*, unavailable, message: "此接口无法使用，游戏服务器引擎GSE已于6.1正式下架，感谢您的支持")
    @inlinable
    public func getInstanceAccess(fleetId: String, instanceId: String, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<GetInstanceAccessResponse> {
        fatalError("GetInstanceAccess is no longer available.")
    }

    /// 获取实例登录所需要的凭据
    ///
    /// 本接口（GetInstanceAccess）用于获取实例登录所需要的凭据。
    @available(*, unavailable, message: "此接口无法使用，游戏服务器引擎GSE已于6.1正式下架，感谢您的支持")
    @inlinable
    public func getInstanceAccess(fleetId: String, instanceId: String, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> GetInstanceAccessResponse {
        fatalError("GetInstanceAccess is no longer available.")
    }
}
