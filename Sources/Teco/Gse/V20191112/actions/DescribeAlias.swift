//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Gse {
    /// DescribeAlias请求参数结构体
    public struct DescribeAliasRequest: TCRequestModel {
        /// 要检索的队列别名的唯一标识符
        public let aliasId: String

        public init(aliasId: String) {
            self.aliasId = aliasId
        }

        enum CodingKeys: String, CodingKey {
            case aliasId = "AliasId"
        }
    }

    /// DescribeAlias返回参数结构体
    public struct DescribeAliasResponse: TCResponseModel {
        /// 别名对象
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let alias: Alias?

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case alias = "Alias"
            case requestId = "RequestId"
        }
    }

    /// 获取别名详情
    ///
    /// 本接口（DescribeAlias）用于获取别名详情。
    @available(*, unavailable, message: "此接口无法使用，游戏服务器引擎GSE已于6.1正式下架，感谢您的支持")
    @inlinable
    public func describeAlias(_ input: DescribeAliasRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeAliasResponse> {
        fatalError("DescribeAlias is no longer available.")
    }

    /// 获取别名详情
    ///
    /// 本接口（DescribeAlias）用于获取别名详情。
    @available(*, unavailable, message: "此接口无法使用，游戏服务器引擎GSE已于6.1正式下架，感谢您的支持")
    @inlinable
    public func describeAlias(_ input: DescribeAliasRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeAliasResponse {
        fatalError("DescribeAlias is no longer available.")
    }

    /// 获取别名详情
    ///
    /// 本接口（DescribeAlias）用于获取别名详情。
    @available(*, unavailable, message: "此接口无法使用，游戏服务器引擎GSE已于6.1正式下架，感谢您的支持")
    @inlinable
    public func describeAlias(aliasId: String, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeAliasResponse> {
        fatalError("DescribeAlias is no longer available.")
    }

    /// 获取别名详情
    ///
    /// 本接口（DescribeAlias）用于获取别名详情。
    @available(*, unavailable, message: "此接口无法使用，游戏服务器引擎GSE已于6.1正式下架，感谢您的支持")
    @inlinable
    public func describeAlias(aliasId: String, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeAliasResponse {
        fatalError("DescribeAlias is no longer available.")
    }
}
