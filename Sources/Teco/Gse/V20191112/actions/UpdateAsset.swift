//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Gse {
    /// UpdateAsset请求参数结构体
    public struct UpdateAssetRequest: TCRequestModel {
        /// 生成包ID
        public let assetId: String

        /// 生成包名字，最小长度为1，最大长度为64
        public let assetName: String

        /// 生成包版本，最小长度为1，最大长度为64
        public let assetVersion: String

        public init(assetId: String, assetName: String, assetVersion: String) {
            self.assetId = assetId
            self.assetName = assetName
            self.assetVersion = assetVersion
        }

        enum CodingKeys: String, CodingKey {
            case assetId = "AssetId"
            case assetName = "AssetName"
            case assetVersion = "AssetVersion"
        }
    }

    /// UpdateAsset返回参数结构体
    public struct UpdateAssetResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }

    /// 修改生成包信息
    ///
    /// 本接口（UpdateAsset）用于修改生成包信息。
    @available(*, deprecated, message: "此接口无法使用，游戏服务器引擎GSE已于6.1正式下架，感谢您的支持")
    @inlinable @discardableResult
    public func updateAsset(_ input: UpdateAssetRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<UpdateAssetResponse> {
        self.client.execute(action: "UpdateAsset", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 修改生成包信息
    ///
    /// 本接口（UpdateAsset）用于修改生成包信息。
    @available(*, deprecated, message: "此接口无法使用，游戏服务器引擎GSE已于6.1正式下架，感谢您的支持")
    @inlinable @discardableResult
    public func updateAsset(_ input: UpdateAssetRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> UpdateAssetResponse {
        try await self.client.execute(action: "UpdateAsset", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 修改生成包信息
    ///
    /// 本接口（UpdateAsset）用于修改生成包信息。
    @available(*, deprecated, message: "此接口无法使用，游戏服务器引擎GSE已于6.1正式下架，感谢您的支持")
    @inlinable @discardableResult
    public func updateAsset(assetId: String, assetName: String, assetVersion: String, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<UpdateAssetResponse> {
        let input = UpdateAssetRequest(assetId: assetId, assetName: assetName, assetVersion: assetVersion)
        return self.client.execute(action: "UpdateAsset", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 修改生成包信息
    ///
    /// 本接口（UpdateAsset）用于修改生成包信息。
    @available(*, deprecated, message: "此接口无法使用，游戏服务器引擎GSE已于6.1正式下架，感谢您的支持")
    @inlinable @discardableResult
    public func updateAsset(assetId: String, assetName: String, assetVersion: String, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> UpdateAssetResponse {
        let input = UpdateAssetRequest(assetId: assetId, assetName: assetName, assetVersion: assetVersion)
        return try await self.client.execute(action: "UpdateAsset", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
}
