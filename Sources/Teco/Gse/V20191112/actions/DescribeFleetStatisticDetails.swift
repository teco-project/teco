//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import struct Foundation.Date
import Logging
import NIOCore
import TecoCore
import TecoDateHelpers
import TecoPaginationHelpers

extension Gse {
    /// DescribeFleetStatisticDetails请求参数结构体
    public struct DescribeFleetStatisticDetailsRequest: TCPaginatedRequest {
        /// 服务器舰队ID
        public let fleetId: String?

        /// 查询开始时间，时间格式：YYYY-MM-DD hh:mm:ss
        ///
        /// While the wrapped date value is immutable just like other fields, you can customize the projected
        /// string value (through `$`-prefix) in case the synthesized encoding is incorrect.
        @TCTimestampEncoding public var beginTime: Date?

        /// 查询结束时间，时间格式：YYYY-MM-DD hh:mm:ss
        ///
        /// While the wrapped date value is immutable just like other fields, you can customize the projected
        /// string value (through `$`-prefix) in case the synthesized encoding is incorrect.
        @TCTimestampEncoding public var endTime: Date?

        /// 结果返回最大数量，最小值0，最大值100
        public let limit: UInt64?

        /// 返回结果偏移，最小值0
        public let offset: UInt64?

        public init(fleetId: String? = nil, beginTime: Date? = nil, endTime: Date? = nil, limit: UInt64? = nil, offset: UInt64? = nil) {
            self.fleetId = fleetId
            self._beginTime = .init(wrappedValue: beginTime)
            self._endTime = .init(wrappedValue: endTime)
            self.limit = limit
            self.offset = offset
        }

        enum CodingKeys: String, CodingKey {
            case fleetId = "FleetId"
            case beginTime = "BeginTime"
            case endTime = "EndTime"
            case limit = "Limit"
            case offset = "Offset"
        }

        /// Compute the next request based on API response.
        public func makeNextRequest(with response: DescribeFleetStatisticDetailsResponse) -> DescribeFleetStatisticDetailsRequest? {
            guard !response.getItems().isEmpty else {
                return nil
            }
            return DescribeFleetStatisticDetailsRequest(fleetId: self.fleetId, beginTime: self.beginTime, endTime: self.endTime, limit: self.limit, offset: (self.offset ?? 0) + .init(response.getItems().count))
        }
    }

    /// DescribeFleetStatisticDetails返回参数结构体
    public struct DescribeFleetStatisticDetailsResponse: TCPaginatedResponse {
        /// 服务部署统计详情列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let detailList: [FleetStatisticDetail]?

        /// 记录总数
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let totalCount: UInt64?

        /// 统计时间类型
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let timeType: String?

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case detailList = "DetailList"
            case totalCount = "TotalCount"
            case timeType = "TimeType"
            case requestId = "RequestId"
        }

        /// Extract the returned ``FleetStatisticDetail`` list from the paginated response.
        public func getItems() -> [FleetStatisticDetail] {
            self.detailList ?? []
        }

        /// Extract the total count from the paginated response.
        public func getTotalCount() -> UInt64? {
            self.totalCount
        }
    }

    /// 查询服务部署统计详情
    ///
    /// 本接口（DescribeFleetStatisticDetails）用于查询服务部署统计详情。
    @available(*, unavailable, message: "此接口无法使用，游戏服务器引擎GSE已于6.1正式下架，感谢您的支持")
    @inlinable
    public func describeFleetStatisticDetails(_ input: DescribeFleetStatisticDetailsRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeFleetStatisticDetailsResponse> {
        fatalError("DescribeFleetStatisticDetails is no longer available.")
    }

    /// 查询服务部署统计详情
    ///
    /// 本接口（DescribeFleetStatisticDetails）用于查询服务部署统计详情。
    @available(*, unavailable, message: "此接口无法使用，游戏服务器引擎GSE已于6.1正式下架，感谢您的支持")
    @inlinable
    public func describeFleetStatisticDetails(_ input: DescribeFleetStatisticDetailsRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeFleetStatisticDetailsResponse {
        fatalError("DescribeFleetStatisticDetails is no longer available.")
    }

    /// 查询服务部署统计详情
    ///
    /// 本接口（DescribeFleetStatisticDetails）用于查询服务部署统计详情。
    @available(*, unavailable, message: "此接口无法使用，游戏服务器引擎GSE已于6.1正式下架，感谢您的支持")
    @inlinable
    public func describeFleetStatisticDetails(fleetId: String? = nil, beginTime: Date? = nil, endTime: Date? = nil, limit: UInt64? = nil, offset: UInt64? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<DescribeFleetStatisticDetailsResponse> {
        fatalError("DescribeFleetStatisticDetails is no longer available.")
    }

    /// 查询服务部署统计详情
    ///
    /// 本接口（DescribeFleetStatisticDetails）用于查询服务部署统计详情。
    @available(*, unavailable, message: "此接口无法使用，游戏服务器引擎GSE已于6.1正式下架，感谢您的支持")
    @inlinable
    public func describeFleetStatisticDetails(fleetId: String? = nil, beginTime: Date? = nil, endTime: Date? = nil, limit: UInt64? = nil, offset: UInt64? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeFleetStatisticDetailsResponse {
        fatalError("DescribeFleetStatisticDetails is no longer available.")
    }

    /// 查询服务部署统计详情
    ///
    /// 本接口（DescribeFleetStatisticDetails）用于查询服务部署统计详情。
    @available(*, unavailable, message: "此接口无法使用，游戏服务器引擎GSE已于6.1正式下架，感谢您的支持")
    @inlinable
    public func describeFleetStatisticDetailsPaginated(_ input: DescribeFleetStatisticDetailsRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<(UInt64?, [FleetStatisticDetail])> {
        fatalError("DescribeFleetStatisticDetails is no longer available.")
    }

    /// 查询服务部署统计详情
    ///
    /// 本接口（DescribeFleetStatisticDetails）用于查询服务部署统计详情。
    @available(*, unavailable, message: "此接口无法使用，游戏服务器引擎GSE已于6.1正式下架，感谢您的支持")
    @inlinable @discardableResult
    public func describeFleetStatisticDetailsPaginated(_ input: DescribeFleetStatisticDetailsRequest, region: TCRegion? = nil, onResponse: @escaping (DescribeFleetStatisticDetailsResponse, EventLoop) -> EventLoopFuture<Bool>, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<Void> {
        fatalError("DescribeFleetStatisticDetails is no longer available.")
    }

    /// 查询服务部署统计详情
    ///
    /// 本接口（DescribeFleetStatisticDetails）用于查询服务部署统计详情。
    ///
    /// - Returns: `AsyncSequence`s of `FleetStatisticDetail` and `DescribeFleetStatisticDetailsResponse` that can be iterated over asynchronously on demand.
    @available(*, unavailable, message: "此接口无法使用，游戏服务器引擎GSE已于6.1正式下架，感谢您的支持")
    @inlinable
    public func describeFleetStatisticDetailsPaginator(_ input: DescribeFleetStatisticDetailsRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> TCClient.PaginatorSequences<DescribeFleetStatisticDetailsRequest> {
        fatalError("DescribeFleetStatisticDetails is no longer available.")
    }
}
