//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Bsca {
    /// 查询知识库组件漏洞
    ///
    /// 本接口(DescribeKBComponentVulnerability)用于在知识库中查询开源组件的漏洞信息。
    @inlinable
    public func describeKBComponentVulnerability(_ input: DescribeKBComponentVulnerabilityRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeKBComponentVulnerabilityResponse > {
        self.client.execute(action: "DescribeKBComponentVulnerability", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 查询知识库组件漏洞
    ///
    /// 本接口(DescribeKBComponentVulnerability)用于在知识库中查询开源组件的漏洞信息。
    @inlinable
    public func describeKBComponentVulnerability(_ input: DescribeKBComponentVulnerabilityRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeKBComponentVulnerabilityResponse {
        try await self.client.execute(action: "DescribeKBComponentVulnerability", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribeKBComponentVulnerability请求参数结构体
    public struct DescribeKBComponentVulnerabilityRequest: TCRequestModel {
        /// 组件的PURL，其中Name和Version为必填字段
        public let purl: PURL
        
        public init (purl: PURL) {
            self.purl = purl
        }
        
        enum CodingKeys: String, CodingKey {
            case purl = "PURL"
        }
    }
    
    /// DescribeKBComponentVulnerability返回参数结构体
    public struct DescribeKBComponentVulnerabilityResponse: TCResponseModel {
        /// 漏洞信息列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let vulnerabilityList: [ComponentVulnerabilityUnion]?
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case vulnerabilityList = "VulnerabilityList"
            case requestId = "RequestId"
        }
    }
}