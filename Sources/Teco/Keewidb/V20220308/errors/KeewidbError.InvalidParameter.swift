//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension TCKeewidbError {
    public struct InvalidParameter: TCKeewidbErrorType {
        enum Code: String {
            case emptyParam = "InvalidParameter.EmptyParam"
            case illegalParameterError = "InvalidParameter.IllegalParameterError"
            case invalidParameter = "InvalidParameter.InvalidParameter"
            case notSupported = "InvalidParameter.NotSupported"
            case period = "InvalidParameter.Period"
            case permissionDenied = "InvalidParameter.PermissionDenied"
            case specNotSupported = "InvalidParameter.SpecNotSupported"
            case other = "InvalidParameter"
        }

        private let error: Code

        public let context: TCErrorContext?

        public var errorCode: String {
            self.error.rawValue
        }

        /// Initializer used by ``TCClient`` to match an error of this type.
        public init?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }

        internal init(_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }

        /// 参数为空。
        public static var emptyParam: InvalidParameter {
            InvalidParameter(.emptyParam)
        }

        /// 非法参数错误。
        public static var illegalParameterError: InvalidParameter {
            InvalidParameter(.illegalParameterError)
        }

        /// 业务参数错误。
        public static var invalidParameter: InvalidParameter {
            InvalidParameter(.invalidParameter)
        }

        /// 参数错误，不支持操作。
        public static var notSupported: InvalidParameter {
            InvalidParameter(.notSupported)
        }

        /// 时间格式或者范围不符合要求。
        public static var period: InvalidParameter {
            InvalidParameter(.period)
        }

        /// 接口没有cam权限。
        public static var permissionDenied: InvalidParameter {
            InvalidParameter(.permissionDenied)
        }

        /// 不支持的实例规格。
        public static var specNotSupported: InvalidParameter {
            InvalidParameter(.specNotSupported)
        }

        /// 参数错误。
        public static var other: InvalidParameter {
            InvalidParameter(.other)
        }

        public func asKeewidbError() -> TCKeewidbError {
            let code: TCKeewidbError.Code
            switch self.error {
            case .emptyParam:
                code = .invalidParameter_EmptyParam
            case .illegalParameterError:
                code = .invalidParameter_IllegalParameterError
            case .invalidParameter:
                code = .invalidParameter_InvalidParameter
            case .notSupported:
                code = .invalidParameter_NotSupported
            case .period:
                code = .invalidParameter_Period
            case .permissionDenied:
                code = .invalidParameter_PermissionDenied
            case .specNotSupported:
                code = .invalidParameter_SpecNotSupported
            case .other:
                code = .invalidParameter
            }
            return TCKeewidbError(code, context: self.context)
        }
    }
}
