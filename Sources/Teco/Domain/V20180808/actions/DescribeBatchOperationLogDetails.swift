//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Domain {
    /// DescribeBatchOperationLogDetails请求参数结构体
    public struct DescribeBatchOperationLogDetailsRequest: TCRequestModel {
        /// 日志ID。
        public let logId: Int64
        
        /// 偏移量，默认为0。
        public let offset: Int64?
        
        /// 返回数量，默认为20，最大值为200。
        public let limit: Int64?
        
        public init (logId: Int64, offset: Int64? = nil, limit: Int64? = nil) {
            self.logId = logId
            self.offset = offset
            self.limit = limit
        }
        
        enum CodingKeys: String, CodingKey {
            case logId = "LogId"
            case offset = "Offset"
            case limit = "Limit"
        }
    }
    
    /// DescribeBatchOperationLogDetails返回参数结构体
    public struct DescribeBatchOperationLogDetailsResponse: TCResponseModel {
        /// 总数量。
        public let totalCount: Int64
        
        /// 日志详情列表。
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let domainBatchDetailSet: [DomainBatchDetailSet]?
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case totalCount = "TotalCount"
            case domainBatchDetailSet = "DomainBatchDetailSet"
            case requestId = "RequestId"
        }
    }
    
    /// 批量操作日志详情
    ///
    /// 本接口 ( DescribeBatchOperationLogDetails ) 用于获取批量操作日志详情。
    @inlinable
    public func describeBatchOperationLogDetails(_ input: DescribeBatchOperationLogDetailsRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeBatchOperationLogDetailsResponse > {
        self.client.execute(action: "DescribeBatchOperationLogDetails", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 批量操作日志详情
    ///
    /// 本接口 ( DescribeBatchOperationLogDetails ) 用于获取批量操作日志详情。
    @inlinable
    public func describeBatchOperationLogDetails(_ input: DescribeBatchOperationLogDetailsRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeBatchOperationLogDetailsResponse {
        try await self.client.execute(action: "DescribeBatchOperationLogDetails", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
}
