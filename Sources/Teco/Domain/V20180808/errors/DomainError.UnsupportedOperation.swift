//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import TecoCore

extension TCDomainError {
    public struct UnsupportedOperation: TCDomainErrorType {
        enum Code: String {
            case accountRealName = "UnsupportedOperation.AccountRealName"
            case domainNotVerified = "UnsupportedOperation.DomainNotVerified"
            case modifyDomainInfoUnsupported = "UnsupportedOperation.ModifyDomainInfoUnsupported"
            case modifyDomainUnsupported = "UnsupportedOperation.ModifyDomainUnsupported"
        }

        private let error: Code

        public let context: TCErrorContext?

        public var errorCode: String {
            self.error.rawValue
        }

        /// Initializer used by ``TCClient`` to match an error of this type.
        public init?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }

        internal init(_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }

        /// 账户实名认证未通过。
        public static var accountRealName: UnsupportedOperation {
            UnsupportedOperation(.accountRealName)
        }

        /// 当前域名未完成实名认证，无法完成该操作。
        public static var domainNotVerified: UnsupportedOperation {
            UnsupportedOperation(.domainNotVerified)
        }

        /// 当前域名状态不支持修改。
        public static var modifyDomainInfoUnsupported: UnsupportedOperation {
            UnsupportedOperation(.modifyDomainInfoUnsupported)
        }

        /// 当前域名状态不支持修改。
        public static var modifyDomainUnsupported: UnsupportedOperation {
            UnsupportedOperation(.modifyDomainUnsupported)
        }

        public func asDomainError() -> TCDomainError {
            let code: TCDomainError.Code
            switch self.error {
            case .accountRealName:
                code = .unsupportedOperation_AccountRealName
            case .domainNotVerified:
                code = .unsupportedOperation_DomainNotVerified
            case .modifyDomainInfoUnsupported:
                code = .unsupportedOperation_ModifyDomainInfoUnsupported
            case .modifyDomainUnsupported:
                code = .unsupportedOperation_ModifyDomainUnsupported
            }
            return TCDomainError(code, context: self.context)
        }
    }
}
