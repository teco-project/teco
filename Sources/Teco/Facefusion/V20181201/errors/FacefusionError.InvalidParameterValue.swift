//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension TCFacefusionError {
    public struct InvalidParameterValue: TCErrorType {
        enum Code: String {
            case activityIdNotFound = "InvalidParameterValue.ActivityIdNotFound"
            case engineValueError = "InvalidParameterValue.EngineValueError"
            case faceRectParameterValueError = "InvalidParameterValue.FaceRectParameterValueError"
            case imageEmpty = "InvalidParameterValue.ImageEmpty"
            case materialIdNotFound = "InvalidParameterValue.MaterialIdNotFound"
            case noFaceInPhoto = "InvalidParameterValue.NoFaceInPhoto"
            case parameterValueError = "InvalidParameterValue.ParameterValueError"
        }
        
        private let error: Code
        
        public let context: TCErrorContext?
        
        public var errorCode: String {
            self.error.rawValue
        }
        
        public init ?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }
        
        internal init (_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }
        
        /// 未查找到活动id。
        public static var activityIdNotFound: InvalidParameterValue {
            InvalidParameterValue(.activityIdNotFound)
        }
        
        /// 活动算法版本值错误。
        public static var engineValueError: InvalidParameterValue {
            InvalidParameterValue(.engineValueError)
        }
        
        /// 人脸框参数有误或者人脸框太小。
        public static var faceRectParameterValueError: InvalidParameterValue {
            InvalidParameterValue(.faceRectParameterValueError)
        }
        
        /// 人脸检测-图片为空。
        public static var imageEmpty: InvalidParameterValue {
            InvalidParameterValue(.imageEmpty)
        }
        
        /// 未查找到素材Id。
        public static var materialIdNotFound: InvalidParameterValue {
            InvalidParameterValue(.materialIdNotFound)
        }
        
        /// 人脸检测-图片没有人脸。
        public static var noFaceInPhoto: InvalidParameterValue {
            InvalidParameterValue(.noFaceInPhoto)
        }
        
        /// 参数字段或者值有误。
        public static var parameterValueError: InvalidParameterValue {
            InvalidParameterValue(.parameterValueError)
        }
    }
}

extension TCFacefusionError.InvalidParameterValue: Equatable {
    public static func == (lhs: TCFacefusionError.InvalidParameterValue, rhs: TCFacefusionError.InvalidParameterValue) -> Bool {
        lhs.error == rhs.error
    }
}

extension TCFacefusionError.InvalidParameterValue: CustomStringConvertible {
    public var description: String {
        return "\(self.error.rawValue): \(message ?? "")"
    }
}

extension TCFacefusionError.InvalidParameterValue {
    public func toFacefusionError() -> TCFacefusionError {
        guard let code = TCFacefusionError.Code(rawValue: self.error.rawValue) else {
            fatalError("Unexpected internal conversion error!\nPlease file a bug at https://github.com/teco-project/teco to help address the problem.")
        }
        return TCFacefusionError(code, context: self.context)
    }
}