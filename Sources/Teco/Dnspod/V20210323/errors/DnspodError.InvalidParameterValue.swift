//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension TCDnspodError {
    public struct InvalidParameterValue: TCErrorType {
        enum Code: String {
            case domainGradeInvalid = "InvalidParameterValue.DomainGradeInvalid"
            case domainNotExists = "InvalidParameterValue.DomainNotExists"
            case limitInvalid = "InvalidParameterValue.LimitInvalid"
            case upgradeTermInvalid = "InvalidParameterValue.UpgradeTermInvalid"
            case userIdInvalid = "InvalidParameterValue.UserIdInvalid"
            case other = "InvalidParameterValue"
        }
        
        private let error: Code
        
        public let context: TCErrorContext?
        
        public var errorCode: String {
            self.error.rawValue
        }
        
        public init ?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }
        
        internal init (_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }
        
        /// 域名等级不正确。
        public static var domainGradeInvalid: InvalidParameterValue {
            InvalidParameterValue(.domainGradeInvalid)
        }
        
        /// 当前域名有误，请返回重新操作。
        public static var domainNotExists: InvalidParameterValue {
            InvalidParameterValue(.domainNotExists)
        }
        
        /// 分页长度数量错误。
        public static var limitInvalid: InvalidParameterValue {
            InvalidParameterValue(.limitInvalid)
        }
        
        /// 升级年限不正确。
        public static var upgradeTermInvalid: InvalidParameterValue {
            InvalidParameterValue(.upgradeTermInvalid)
        }
        
        /// 用户编号不正确。
        public static var userIdInvalid: InvalidParameterValue {
            InvalidParameterValue(.userIdInvalid)
        }
        
        /// 参数取值错误。
        public static var other: InvalidParameterValue {
            InvalidParameterValue(.other)
        }
    }
}

extension TCDnspodError.InvalidParameterValue: Equatable {
    public static func == (lhs: TCDnspodError.InvalidParameterValue, rhs: TCDnspodError.InvalidParameterValue) -> Bool {
        lhs.error == rhs.error
    }
}

extension TCDnspodError.InvalidParameterValue: CustomStringConvertible {
    public var description: String {
        return "\(self.error.rawValue): \(message ?? "")"
    }
}

extension TCDnspodError.InvalidParameterValue {
    public func toDnspodError() -> TCDnspodError {
        guard let code = TCDnspodError.Code(rawValue: self.error.rawValue) else {
            fatalError("Unexpected internal conversion error!\nPlease file a bug at https://github.com/teco-project/teco to help address the problem.")
        }
        return TCDnspodError(code, context: self.context)
    }
}