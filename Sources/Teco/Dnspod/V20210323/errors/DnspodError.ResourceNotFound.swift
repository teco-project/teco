//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

// Test PR teco-project/teco-code-generator#23.

import TecoCore

extension TCDnspodError {
    public struct ResourceNotFound: TCDnspodErrorType {
        enum Code: String {
            case noDataOfDomain = "ResourceNotFound.NoDataOfDomain"
            case noDataOfDomainAlias = "ResourceNotFound.NoDataOfDomainAlias"
            case noDataOfGift = "ResourceNotFound.NoDataOfGift"
            case noDataOfRecord = "ResourceNotFound.NoDataOfRecord"
            case other = "ResourceNotFound"
        }

        private let error: Code

        public let context: TCErrorContext?

        public var errorCode: String {
            self.error.rawValue
        }

        /// Initializer used by ``TCClient`` to match an error of this type.
        public init?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }

        internal init(_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }

        /// 域名列表为空。
        public static var noDataOfDomain: ResourceNotFound {
            ResourceNotFound(.noDataOfDomain)
        }

        /// 没有域名别名。
        public static var noDataOfDomainAlias: ResourceNotFound {
            ResourceNotFound(.noDataOfDomainAlias)
        }

        /// 还没有任何礼券。
        public static var noDataOfGift: ResourceNotFound {
            ResourceNotFound(.noDataOfGift)
        }

        /// 记录列表为空。
        public static var noDataOfRecord: ResourceNotFound {
            ResourceNotFound(.noDataOfRecord)
        }

        /// 资源不存在。
        public static var other: ResourceNotFound {
            ResourceNotFound(.other)
        }

        public func asDnspodError() -> TCDnspodError {
            let code: TCDnspodError.Code
            switch self.error {
            case .noDataOfDomain:
                code = .resourceNotFound_NoDataOfDomain
            case .noDataOfDomainAlias:
                code = .resourceNotFound_NoDataOfDomainAlias
            case .noDataOfGift:
                code = .resourceNotFound_NoDataOfGift
            case .noDataOfRecord:
                code = .resourceNotFound_NoDataOfRecord
            case .other:
                code = .resourceNotFound
            }
            return TCDnspodError(code, context: self.context)
        }
    }
}
