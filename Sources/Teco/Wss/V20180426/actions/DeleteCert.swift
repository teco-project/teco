//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Wss {
    /// 删除证书
    ///
    /// 本接口（DeleteCert）用于删除证书。
    @inlinable
    public func deleteCert(_ input: DeleteCertRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DeleteCertResponse > {
        self.client.execute(action: "DeleteCert", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 删除证书
    ///
    /// 本接口（DeleteCert）用于删除证书。
    @inlinable
    public func deleteCert(_ input: DeleteCertRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DeleteCertResponse {
        try await self.client.execute(action: "DeleteCert", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DeleteCert请求参数结构体
    public struct DeleteCertRequest: TCRequestModel {
        /// 证书 ID，即通过 GetList 拿到的证书列表的 ID 字段。
        public let id: String
        
        /// 模块名称，应填 ssl。
        public let moduleType: String
        
        public init (id: String, moduleType: String) {
            self.id = id
            self.moduleType = moduleType
        }
        
        enum CodingKeys: String, CodingKey {
            case id = "Id"
            case moduleType = "ModuleType"
        }
    }
    
    /// DeleteCert返回参数结构体
    public struct DeleteCertResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }
}