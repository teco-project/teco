//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

// Test PR teco-project/teco-code-generator#23.

import Logging
import NIOCore
import TecoCore

extension Cme {
    /// GenerateVideoSegmentationSchemeByAi请求参数结构体
    public struct GenerateVideoSegmentationSchemeByAiRequest: TCRequestModel {
        /// 平台 Id，指定访问的平台。关于平台概念，请参见文档 [平台](https://cloud.tencent.com/document/product/1156/43767)。
        public let platform: String

        /// 视频拆条项目 Id 。
        public let projectId: String

        /// 操作者。如不填，默认为 `cmeid_system`，表示平台管理员操作，可以对任务视频拆条项目发起拆条任务。如果指定操作者，则操作者必须为项目所有者。
        public let `operator`: String?

        public init(platform: String, projectId: String, operator: String? = nil) {
            self.platform = platform
            self.projectId = projectId
            self.operator = `operator`
        }

        enum CodingKeys: String, CodingKey {
            case platform = "Platform"
            case projectId = "ProjectId"
            case `operator` = "Operator"
        }
    }

    /// GenerateVideoSegmentationSchemeByAi返回参数结构体
    public struct GenerateVideoSegmentationSchemeByAiResponse: TCResponseModel {
        /// 视频智能拆条任务 Id 。
        public let taskId: String

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case taskId = "TaskId"
            case requestId = "RequestId"
        }
    }

    /// 视频智能拆条
    ///
    /// <li>发起视频智能拆条任务，支持智能生成和平精英集锦、王者荣耀集锦、足球集锦、篮球集锦 、人物集锦、新闻拆条等任务。</li>
    /// <li>和平精英集锦和王者荣耀集锦根据击杀场景进行拆条，足球集锦和篮球集锦根据进球场景进行拆条，人物集锦根据人物人脸特征进行拆条，新闻拆条根据导播进行拆条。</li>
    /// <li>【本接口内测中，暂不建议使用】</li>
    @inlinable
    public func generateVideoSegmentationSchemeByAi(_ input: GenerateVideoSegmentationSchemeByAiRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<GenerateVideoSegmentationSchemeByAiResponse> {
        self.client.execute(action: "GenerateVideoSegmentationSchemeByAi", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 视频智能拆条
    ///
    /// <li>发起视频智能拆条任务，支持智能生成和平精英集锦、王者荣耀集锦、足球集锦、篮球集锦 、人物集锦、新闻拆条等任务。</li>
    /// <li>和平精英集锦和王者荣耀集锦根据击杀场景进行拆条，足球集锦和篮球集锦根据进球场景进行拆条，人物集锦根据人物人脸特征进行拆条，新闻拆条根据导播进行拆条。</li>
    /// <li>【本接口内测中，暂不建议使用】</li>
    @inlinable
    public func generateVideoSegmentationSchemeByAi(_ input: GenerateVideoSegmentationSchemeByAiRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> GenerateVideoSegmentationSchemeByAiResponse {
        try await self.client.execute(action: "GenerateVideoSegmentationSchemeByAi", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 视频智能拆条
    ///
    /// <li>发起视频智能拆条任务，支持智能生成和平精英集锦、王者荣耀集锦、足球集锦、篮球集锦 、人物集锦、新闻拆条等任务。</li>
    /// <li>和平精英集锦和王者荣耀集锦根据击杀场景进行拆条，足球集锦和篮球集锦根据进球场景进行拆条，人物集锦根据人物人脸特征进行拆条，新闻拆条根据导播进行拆条。</li>
    /// <li>【本接口内测中，暂不建议使用】</li>
    @inlinable
    public func generateVideoSegmentationSchemeByAi(platform: String, projectId: String, operator: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<GenerateVideoSegmentationSchemeByAiResponse> {
        self.generateVideoSegmentationSchemeByAi(.init(platform: platform, projectId: projectId, operator: `operator`), region: region, logger: logger, on: eventLoop)
    }

    /// 视频智能拆条
    ///
    /// <li>发起视频智能拆条任务，支持智能生成和平精英集锦、王者荣耀集锦、足球集锦、篮球集锦 、人物集锦、新闻拆条等任务。</li>
    /// <li>和平精英集锦和王者荣耀集锦根据击杀场景进行拆条，足球集锦和篮球集锦根据进球场景进行拆条，人物集锦根据人物人脸特征进行拆条，新闻拆条根据导播进行拆条。</li>
    /// <li>【本接口内测中，暂不建议使用】</li>
    @inlinable
    public func generateVideoSegmentationSchemeByAi(platform: String, projectId: String, operator: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> GenerateVideoSegmentationSchemeByAiResponse {
        try await self.generateVideoSegmentationSchemeByAi(.init(platform: platform, projectId: projectId, operator: `operator`), region: region, logger: logger, on: eventLoop)
    }
}
