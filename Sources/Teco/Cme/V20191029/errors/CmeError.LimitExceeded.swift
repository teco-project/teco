//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension TCCmeError {
    public struct LimitExceeded: TCErrorType {
        enum Code: String {
            case billItemLiveDispatchDuration = "LimitExceeded.BillItemLiveDispatchDuration"
            case billItemLiveDispatchMaxCount = "LimitExceeded.BillItemLiveDispatchMaxCount"
            case billItemStorage = "LimitExceeded.BillItemStorage"
            case billItemVideoEditExportDuration = "LimitExceeded.BillItemVideoEditExportDuration"
            case other = "LimitExceeded"
        }
        
        private let error: Code
        
        public let context: TCErrorContext?
        
        public var errorCode: String {
            self.error.rawValue
        }
        
        public init ?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }
        
        internal init (_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }
        
        /// 您已超过推流时长限制，若还需使用，请升级会员版本或购买资源包。
        public static var billItemLiveDispatchDuration: LimitExceeded {
            LimitExceeded(.billItemLiveDispatchDuration)
        }
        
        /// 您已达到转推并发数上限，若还需使用，请升级会员版本或购买资源包。
        public static var billItemLiveDispatchMaxCount: LimitExceeded {
            LimitExceeded(.billItemLiveDispatchMaxCount)
        }
        
        /// 存储空间不足，请查看会员权益，购买资源包或会员版本后继续使用。
        public static var billItemStorage: LimitExceeded {
            LimitExceeded(.billItemStorage)
        }
        
        /// 您已达到导出视频时长上限，若还需使用，请升级会员版本或购买资源包。
        public static var billItemVideoEditExportDuration: LimitExceeded {
            LimitExceeded(.billItemVideoEditExportDuration)
        }
        
        /// 超过配额限制。
        public static var other: LimitExceeded {
            LimitExceeded(.other)
        }
    }
}

extension TCCmeError.LimitExceeded: Equatable {
    public static func == (lhs: TCCmeError.LimitExceeded, rhs: TCCmeError.LimitExceeded) -> Bool {
        lhs.error == rhs.error
    }
}

extension TCCmeError.LimitExceeded: CustomStringConvertible {
    public var description: String {
        return "\(self.error.rawValue): \(message ?? "")"
    }
}

extension TCCmeError.LimitExceeded {
    public func toCmeError() -> TCCmeError {
        guard let code = TCCmeError.Code(rawValue: self.error.rawValue) else {
            fatalError("Unexpected internal conversion error!\nPlease file a bug at https://github.com/teco-project/teco to help address the problem.")
        }
        return TCCmeError(code, context: self.context)
    }
}