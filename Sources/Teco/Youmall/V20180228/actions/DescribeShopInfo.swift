//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Youmall {
    /// 获取客户所属门店列表
    ///
    /// 根据客户身份标识获取客户下所有的门店信息列表
    @inlinable
    public func describeShopInfo(_ input: DescribeShopInfoRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeShopInfoResponse > {
        self.client.execute(action: "DescribeShopInfo", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 获取客户所属门店列表
    ///
    /// 根据客户身份标识获取客户下所有的门店信息列表
    @inlinable
    public func describeShopInfo(_ input: DescribeShopInfoRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeShopInfoResponse {
        try await self.client.execute(action: "DescribeShopInfo", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribeShopInfo请求参数结构体
    public struct DescribeShopInfoRequest: TCRequestModel {
        /// 偏移量：分页控制参数，第一页传0，第n页Offset=(n-1)*Limit
        public let offset: UInt64
        
        /// Limit:每页的数据项，最大100，超过100会被强制指定为100
        public let limit: UInt64
        
        public init (offset: UInt64, limit: UInt64) {
            self.offset = offset
            self.limit = limit
        }
        
        enum CodingKeys: String, CodingKey {
            case offset = "Offset"
            case limit = "Limit"
        }
    }
    
    /// DescribeShopInfo返回参数结构体
    public struct DescribeShopInfoResponse: TCResponseModel {
        /// 门店总数
        public let totalCount: UInt64
        
        /// 门店列表信息
        public let shopInfoSet: [ShopInfo]
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case totalCount = "TotalCount"
            case shopInfoSet = "ShopInfoSet"
            case requestId = "RequestId"
        }
    }
}