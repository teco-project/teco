//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Cwp {
    /// DescribeProtectDirRelatedServer请求参数结构体
    public struct DescribeProtectDirRelatedServerRequest: TCRequestModel {
        /// 唯一ID
        public let id: String
        
        /// 分页条数 最大100条
        public let limit: UInt64
        
        /// 偏移量
        public let offset: UInt64
        
        /// 过滤参数 ProtectStatus
        public let filters: [Filter]?
        
        /// 排序方式
        public let order: String?
        
        /// 排序值
        public let by: String?
        
        public init (id: String, limit: UInt64, offset: UInt64, filters: [Filter]? = nil, order: String? = nil, by: String? = nil) {
            self.id = id
            self.limit = limit
            self.offset = offset
            self.filters = filters
            self.order = order
            self.by = by
        }
        
        enum CodingKeys: String, CodingKey {
            case id = "Id"
            case limit = "Limit"
            case offset = "Offset"
            case filters = "Filters"
            case order = "Order"
            case by = "By"
        }
    }
    
    /// DescribeProtectDirRelatedServer返回参数结构体
    public struct DescribeProtectDirRelatedServerResponse: TCResponseModel {
        /// 网站关联服务器列表信息
        public let list: [ProtectDirRelatedServer]
        
        /// 总数
        public let totalCount: UInt64
        
        /// 已开启防护总数
        public let protectServerCount: UInt64
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case list = "List"
            case totalCount = "TotalCount"
            case protectServerCount = "ProtectServerCount"
            case requestId = "RequestId"
        }
    }
    
    /// 查询防护目录关联服务器
    ///
    /// 查询防护目录关联服务器列表信息
    @inlinable
    public func describeProtectDirRelatedServer(_ input: DescribeProtectDirRelatedServerRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeProtectDirRelatedServerResponse > {
        self.client.execute(action: "DescribeProtectDirRelatedServer", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 查询防护目录关联服务器
    ///
    /// 查询防护目录关联服务器列表信息
    @inlinable
    public func describeProtectDirRelatedServer(_ input: DescribeProtectDirRelatedServerRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeProtectDirRelatedServerResponse {
        try await self.client.execute(action: "DescribeProtectDirRelatedServer", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// 查询防护目录关联服务器
    ///
    /// 查询防护目录关联服务器列表信息
    @inlinable
    public func describeProtectDirRelatedServer(id: String, limit: UInt64, offset: UInt64, filters: [Filter]? = nil, order: String? = nil, by: String? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeProtectDirRelatedServerResponse > {
        self.describeProtectDirRelatedServer(DescribeProtectDirRelatedServerRequest(id: id, limit: limit, offset: offset, filters: filters, order: order, by: by), logger: logger, on: eventLoop)
    }
    
    /// 查询防护目录关联服务器
    ///
    /// 查询防护目录关联服务器列表信息
    @inlinable
    public func describeProtectDirRelatedServer(id: String, limit: UInt64, offset: UInt64, filters: [Filter]? = nil, order: String? = nil, by: String? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeProtectDirRelatedServerResponse {
        try await self.describeProtectDirRelatedServer(DescribeProtectDirRelatedServerRequest(id: id, limit: limit, offset: offset, filters: filters, order: order, by: by), logger: logger, on: eventLoop)
    }
}
