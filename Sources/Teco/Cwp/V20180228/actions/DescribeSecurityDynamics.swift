//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Cwp {
    /// DescribeSecurityDynamics请求参数结构体
    public struct DescribeSecurityDynamicsRequest: TCRequestModel {
        /// 返回数量，最大值为100。
        public let limit: UInt64?
        
        /// 偏移量，默认为0。
        public let offset: UInt64?
        
        public init (limit: UInt64? = nil, offset: UInt64? = nil) {
            self.limit = limit
            self.offset = offset
        }
        
        enum CodingKeys: String, CodingKey {
            case limit = "Limit"
            case offset = "Offset"
        }
    }
    
    /// DescribeSecurityDynamics返回参数结构体
    public struct DescribeSecurityDynamicsResponse: TCResponseModel {
        /// 安全事件消息数组。
        public let securityDynamics: [SecurityDynamic]
        
        /// 记录总数。
        public let totalCount: UInt64
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case securityDynamics = "SecurityDynamics"
            case totalCount = "TotalCount"
            case requestId = "RequestId"
        }
    }
    
    /// 获取安全事件动态消息
    ///
    /// 本接口 (DescribeSecurityDynamics) 用于获取安全事件动态消息数据。
    @inlinable
    public func describeSecurityDynamics(_ input: DescribeSecurityDynamicsRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeSecurityDynamicsResponse > {
        self.client.execute(action: "DescribeSecurityDynamics", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 获取安全事件动态消息
    ///
    /// 本接口 (DescribeSecurityDynamics) 用于获取安全事件动态消息数据。
    @inlinable
    public func describeSecurityDynamics(_ input: DescribeSecurityDynamicsRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeSecurityDynamicsResponse {
        try await self.client.execute(action: "DescribeSecurityDynamics", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
}
