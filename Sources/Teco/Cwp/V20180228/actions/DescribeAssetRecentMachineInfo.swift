//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

@_exported import struct Foundation.Date

extension Cwp {
    /// 获取主机概况趋势
    ///
    /// 获取主机最近趋势情况
    @inlinable
    public func describeAssetRecentMachineInfo(_ input: DescribeAssetRecentMachineInfoRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeAssetRecentMachineInfoResponse > {
        self.client.execute(action: "DescribeAssetRecentMachineInfo", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 获取主机概况趋势
    ///
    /// 获取主机最近趋势情况
    @inlinable
    public func describeAssetRecentMachineInfo(_ input: DescribeAssetRecentMachineInfoRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeAssetRecentMachineInfoResponse {
        try await self.client.execute(action: "DescribeAssetRecentMachineInfo", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribeAssetRecentMachineInfo请求参数结构体
    public struct DescribeAssetRecentMachineInfoRequest: TCRequestModel {
        /// 开始时间，如：2020-09-22
        // FIXME: Codable support not implemented for date yet.
        public let beginDate: Date
        
        /// 结束时间，如：2020-09-22
        // FIXME: Codable support not implemented for date yet.
        public let endDate: Date
        
        public init (beginDate: Date, endDate: Date) {
            self.beginDate = beginDate
            self.endDate = endDate
        }
        
        enum CodingKeys: String, CodingKey {
            case beginDate = "BeginDate"
            case endDate = "EndDate"
        }
    }
    
    /// DescribeAssetRecentMachineInfo返回参数结构体
    public struct DescribeAssetRecentMachineInfoResponse: TCResponseModel {
        /// 总数量列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let totalList: [AssetKeyVal]?
        
        /// 在线数量列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let liveList: [AssetKeyVal]?
        
        /// 离线数量列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let offlineList: [AssetKeyVal]?
        
        /// 风险数量列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let riskList: [AssetKeyVal]?
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case totalList = "TotalList"
            case liveList = "LiveList"
            case offlineList = "OfflineList"
            case riskList = "RiskList"
            case requestId = "RequestId"
        }
    }
}