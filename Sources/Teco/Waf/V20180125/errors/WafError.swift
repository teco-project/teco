//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import TecoCore

/// Service error type returned by `Waf`.
public protocol TCWafErrorType: TCServiceErrorType {
    /// Get the service error as ``TCWafError``.
    ///
    /// - Returns: ``TCWafError`` that holds the same error code and context.
    func asWafError() -> TCWafError
}

public struct TCWafError: TCWafErrorType {
    enum Code: String {
        case authFailure = "AuthFailure"
        case dryRunOperation = "DryRunOperation"
        case failedOperation = "FailedOperation"
        case failedOperation_CLSDBOperationFailed = "FailedOperation.CLSDBOperationFailed"
        case failedOperation_CLSInternalError = "FailedOperation.CLSInternalError"
        case failedOperation_ClickHouseOperationFailed = "FailedOperation.ClickHouseOperationFailed"
        case failedOperation_MysqlDBOperationFailed = "FailedOperation.MysqlDBOperationFailed"
        case failedOperation_RedisOperationFailed = "FailedOperation.RedisOperationFailed"
        case failedOperation_SessionInUsed = "FailedOperation.SessionInUsed"
        case failedOperation_TheNumberOfAddedBlackAndWhiteListExceedsTheUpperLimit = "FailedOperation.TheNumberOfAddedBlackAndWhiteListExceedsTheUpperLimit"
        case failedOperation_TheNumberOfOneTimeDeletionsReachedTheUpperLimit = "FailedOperation.TheNumberOfOneTimeDeletionsReachedTheUpperLimit"
        case internalError = "InternalError"
        case internalError_AsynchronousCallFailed = "InternalError.AsynchronousCallFailed"
        case internalError_DBErr = "InternalError.DBErr"
        case internalError_UnknownErr = "InternalError.UnknownErr"
        case invalidParameter = "InvalidParameter"
        case invalidParameterValue = "InvalidParameterValue"
        case invalidParameter_CertificationParameterErr = "InvalidParameter.CertificationParameterErr"
        case invalidParameter_DomainExceedsLimitErr = "InvalidParameter.DomainExceedsLimitErr"
        case invalidParameter_DomainNotRecord = "InvalidParameter.DomainNotRecord"
        case invalidParameter_InvalidCertificate = "InvalidParameter.InvalidCertificate"
        case invalidParameter_LogicErr = "InvalidParameter.LogicErr"
        case invalidParameter_PortParameterErr = "InvalidParameter.PortParameterErr"
        case invalidParameter_ProtectionDomainParameterErr = "InvalidParameter.ProtectionDomainParameterErr"
        case invalidParameter_QueryCertBySSLIDFailed = "InvalidParameter.QueryCertBySSLIDFailed"
        case invalidParameter_QueryStringSyntaxErr = "InvalidParameter.QueryStringSyntaxErr"
        case invalidParameter_SQLSyntaxErr = "InvalidParameter.SQLSyntaxErr"
        case invalidParameter_SupportTLSConfFailed = "InvalidParameter.SupportTLSConfFailed"
        case invalidParameter_TLSParameterErr = "InvalidParameter.TLSParameterErr"
        case invalidParameter_TypeMismatch = "InvalidParameter.TypeMismatch"
        case invalidParameter_UnauthorizedOperationParameterErr = "InvalidParameter.UnauthorizedOperationParameterErr"
        case invalidParameter_UnknownAction = "InvalidParameter.UnknownAction"
        case invalidParameter_UpstreamParameterErr = "InvalidParameter.UpstreamParameterErr"
        case limitExceeded = "LimitExceeded"
        case limitExceeded_SpecificationErr = "LimitExceeded.SpecificationErr"
        case missingParameter = "MissingParameter"
        case operationDenied = "OperationDenied"
        case requestLimitExceeded = "RequestLimitExceeded"
        case resourceInUse = "ResourceInUse"
        case resourceInUse_EmptyErr = "ResourceInUse.EmptyErr"
        case resourceInsufficient = "ResourceInsufficient"
        case resourceNotFound = "ResourceNotFound"
        case resourceUnavailable = "ResourceUnavailable"
        case resourceUnavailable_DomainIpv6InConfigErr = "ResourceUnavailable.DomainIpv6InConfigErr"
        case resourcesSoldOut = "ResourcesSoldOut"
        case unauthorizedOperation = "UnauthorizedOperation"
        case unknownParameter = "UnknownParameter"
        case unsupportedOperation = "UnsupportedOperation"
        case unsupportedOperation_InvalidRequest = "UnsupportedOperation.InvalidRequest"
    }

    /// Error domains affliated to ``TCWafError``.
    public static var domains: [TCErrorType.Type] {
        [
            FailedOperation.self,
            InternalError.self,
            InvalidParameter.self,
            LimitExceeded.self,
            ResourceInUse.self,
            ResourceUnavailable.self,
            UnsupportedOperation.self
        ]
    }

    private let error: Code

    public let context: TCErrorContext?

    public var errorCode: String {
        self.error.rawValue
    }

    /// Initializer used by ``TCClient`` to match an error of this type.
    public init?(errorCode: String, context: TCErrorContext) {
        guard let error = Code(rawValue: errorCode) else {
            return nil
        }
        self.error = error
        self.context = context
    }

    internal init(_ error: Code, context: TCErrorContext? = nil) {
        self.error = error
        self.context = context
    }

    /// CAM签名/鉴权错误。
    public static var authFailure: TCWafError {
        TCWafError(.authFailure)
    }

    /// DryRun 操作，代表请求将会是成功的，只是多传了 DryRun 参数。
    public static var dryRunOperation: TCWafError {
        TCWafError(.dryRunOperation)
    }

    /// 操作失败。
    public static var failedOperation: TCWafError {
        TCWafError(.failedOperation)
    }

    /// 调用CLS日志服务API失败
    public static var failedOperation_CLSDBOperationFailed: TCWafError {
        TCWafError(.failedOperation_CLSDBOperationFailed)
    }

    /// CLS内部错误。
    ///
    /// 错误表示WAF的API后端访问CLS接口失败,包括接口失败,语法失败,参数校验不通过等。
    public static var failedOperation_CLSInternalError: TCWafError {
        TCWafError(.failedOperation_CLSInternalError)
    }

    /// 操作CH数据库失败
    public static var failedOperation_ClickHouseOperationFailed: TCWafError {
        TCWafError(.failedOperation_ClickHouseOperationFailed)
    }

    /// 操作Mysql数据库失败
    public static var failedOperation_MysqlDBOperationFailed: TCWafError {
        TCWafError(.failedOperation_MysqlDBOperationFailed)
    }

    /// 操作Redis数据库失败
    public static var failedOperation_RedisOperationFailed: TCWafError {
        TCWafError(.failedOperation_RedisOperationFailed)
    }

    public static var failedOperation_SessionInUsed: TCWafError {
        TCWafError(.failedOperation_SessionInUsed)
    }

    public static var failedOperation_TheNumberOfAddedBlackAndWhiteListExceedsTheUpperLimit: TCWafError {
        TCWafError(.failedOperation_TheNumberOfAddedBlackAndWhiteListExceedsTheUpperLimit)
    }

    public static var failedOperation_TheNumberOfOneTimeDeletionsReachedTheUpperLimit: TCWafError {
        TCWafError(.failedOperation_TheNumberOfOneTimeDeletionsReachedTheUpperLimit)
    }

    /// 内部错误。
    public static var internalError: TCWafError {
        TCWafError(.internalError)
    }

    /// 异步调用失败
    public static var internalError_AsynchronousCallFailed: TCWafError {
        TCWafError(.internalError_AsynchronousCallFailed)
    }

    /// DBErr
    public static var internalError_DBErr: TCWafError {
        TCWafError(.internalError_DBErr)
    }

    public static var internalError_UnknownErr: TCWafError {
        TCWafError(.internalError_UnknownErr)
    }

    /// 参数错误。
    public static var invalidParameter: TCWafError {
        TCWafError(.invalidParameter)
    }

    /// 参数取值错误。
    public static var invalidParameterValue: TCWafError {
        TCWafError(.invalidParameterValue)
    }

    /// 证书信息参数错误
    public static var invalidParameter_CertificationParameterErr: TCWafError {
        TCWafError(.invalidParameter_CertificationParameterErr)
    }

    /// 域名数量超出限制错误
    public static var invalidParameter_DomainExceedsLimitErr: TCWafError {
        TCWafError(.invalidParameter_DomainExceedsLimitErr)
    }

    /// 域名未备案
    public static var invalidParameter_DomainNotRecord: TCWafError {
        TCWafError(.invalidParameter_DomainNotRecord)
    }

    /// 证书内容非法。
    public static var invalidParameter_InvalidCertificate: TCWafError {
        TCWafError(.invalidParameter_InvalidCertificate)
    }

    public static var invalidParameter_LogicErr: TCWafError {
        TCWafError(.invalidParameter_LogicErr)
    }

    /// 端口信息参数错误
    public static var invalidParameter_PortParameterErr: TCWafError {
        TCWafError(.invalidParameter_PortParameterErr)
    }

    /// 防护域名参数错误
    public static var invalidParameter_ProtectionDomainParameterErr: TCWafError {
        TCWafError(.invalidParameter_ProtectionDomainParameterErr)
    }

    /// 根据ID查询证书失败。
    public static var invalidParameter_QueryCertBySSLIDFailed: TCWafError {
        TCWafError(.invalidParameter_QueryCertBySSLIDFailed)
    }

    public static var invalidParameter_QueryStringSyntaxErr: TCWafError {
        TCWafError(.invalidParameter_QueryStringSyntaxErr)
    }

    public static var invalidParameter_SQLSyntaxErr: TCWafError {
        TCWafError(.invalidParameter_SQLSyntaxErr)
    }

    /// 当前实例版本不支持开启TLS自定义，请升级到高级版及以上
    public static var invalidParameter_SupportTLSConfFailed: TCWafError {
        TCWafError(.invalidParameter_SupportTLSConfFailed)
    }

    /// TLS或加密套件参数错误
    public static var invalidParameter_TLSParameterErr: TCWafError {
        TCWafError(.invalidParameter_TLSParameterErr)
    }

    public static var invalidParameter_TypeMismatch: TCWafError {
        TCWafError(.invalidParameter_TypeMismatch)
    }

    /// 越权参数错误
    public static var invalidParameter_UnauthorizedOperationParameterErr: TCWafError {
        TCWafError(.invalidParameter_UnauthorizedOperationParameterErr)
    }

    /// UnknownAction
    public static var invalidParameter_UnknownAction: TCWafError {
        TCWafError(.invalidParameter_UnknownAction)
    }

    /// 回源信息参数错误
    public static var invalidParameter_UpstreamParameterErr: TCWafError {
        TCWafError(.invalidParameter_UpstreamParameterErr)
    }

    /// 超过配额限制。
    public static var limitExceeded: TCWafError {
        TCWafError(.limitExceeded)
    }

    /// SpecificationErr
    public static var limitExceeded_SpecificationErr: TCWafError {
        TCWafError(.limitExceeded_SpecificationErr)
    }

    /// 缺少参数错误。
    public static var missingParameter: TCWafError {
        TCWafError(.missingParameter)
    }

    /// 操作被拒绝。
    public static var operationDenied: TCWafError {
        TCWafError(.operationDenied)
    }

    /// 请求的次数超过了频率限制。
    public static var requestLimitExceeded: TCWafError {
        TCWafError(.requestLimitExceeded)
    }

    /// 资源被占用。
    public static var resourceInUse: TCWafError {
        TCWafError(.resourceInUse)
    }

    /// EmptyErr
    public static var resourceInUse_EmptyErr: TCWafError {
        TCWafError(.resourceInUse_EmptyErr)
    }

    /// 资源不足。
    public static var resourceInsufficient: TCWafError {
        TCWafError(.resourceInsufficient)
    }

    /// 资源不存在。
    public static var resourceNotFound: TCWafError {
        TCWafError(.resourceNotFound)
    }

    /// 资源不可用。
    public static var resourceUnavailable: TCWafError {
        TCWafError(.resourceUnavailable)
    }

    /// IPV6网络正在分配，请耐心等待
    public static var resourceUnavailable_DomainIpv6InConfigErr: TCWafError {
        TCWafError(.resourceUnavailable_DomainIpv6InConfigErr)
    }

    /// 资源售罄。
    public static var resourcesSoldOut: TCWafError {
        TCWafError(.resourcesSoldOut)
    }

    /// 未授权操作。
    public static var unauthorizedOperation: TCWafError {
        TCWafError(.unauthorizedOperation)
    }

    /// 未知参数错误。
    public static var unknownParameter: TCWafError {
        TCWafError(.unknownParameter)
    }

    /// 操作不支持。
    public static var unsupportedOperation: TCWafError {
        TCWafError(.unsupportedOperation)
    }

    /// InvalidRequest
    public static var unsupportedOperation_InvalidRequest: TCWafError {
        TCWafError(.unsupportedOperation_InvalidRequest)
    }

    public func asWafError() -> TCWafError {
        return self
    }
}
