//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Waf {
    /// ModifyHost请求参数结构体
    public struct ModifyHostRequest: TCRequest {
        /// 编辑的域名配置信息
        public let host: HostRecord

        /// 实例id
        public let instanceID: String?

        public init(host: HostRecord, instanceID: String? = nil) {
            self.host = host
            self.instanceID = instanceID
        }

        enum CodingKeys: String, CodingKey {
            case host = "Host"
            case instanceID = "InstanceID"
        }
    }

    /// ModifyHost返回参数结构体
    public struct ModifyHostResponse: TCResponse {
        /// 编辑的域名ID
        public let domainId: String

        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case domainId = "DomainId"
            case requestId = "RequestId"
        }
    }

    /// 编辑防护域名
    ///
    /// clb-waf编辑防护域名配置
    @inlinable
    public func modifyHost(_ input: ModifyHostRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<ModifyHostResponse> {
        self.client.execute(action: "ModifyHost", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 编辑防护域名
    ///
    /// clb-waf编辑防护域名配置
    @inlinable
    public func modifyHost(_ input: ModifyHostRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyHostResponse {
        try await self.client.execute(action: "ModifyHost", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 编辑防护域名
    ///
    /// clb-waf编辑防护域名配置
    @inlinable
    public func modifyHost(host: HostRecord, instanceID: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<ModifyHostResponse> {
        self.modifyHost(.init(host: host, instanceID: instanceID), region: region, logger: logger, on: eventLoop)
    }

    /// 编辑防护域名
    ///
    /// clb-waf编辑防护域名配置
    @inlinable
    public func modifyHost(host: HostRecord, instanceID: String? = nil, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyHostResponse {
        try await self.modifyHost(.init(host: host, instanceID: instanceID), region: region, logger: logger, on: eventLoop)
    }
}
