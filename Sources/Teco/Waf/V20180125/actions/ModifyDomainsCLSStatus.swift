//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

import Logging
import NIOCore
import TecoCore

extension Waf {
    /// ModifyDomainsCLSStatus请求参数结构体
    public struct ModifyDomainsCLSStatusRequest: TCRequest {
        /// 需要修改的域名列表
        public let domains: [DomainURI]

        /// 修改域名的访问日志开关为Status
        public let status: UInt64

        public init(domains: [DomainURI], status: UInt64) {
            self.domains = domains
            self.status = status
        }

        enum CodingKeys: String, CodingKey {
            case domains = "Domains"
            case status = "Status"
        }
    }

    /// ModifyDomainsCLSStatus返回参数结构体
    public struct ModifyDomainsCLSStatusResponse: TCResponse {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }

    /// 修改域名列表的访问日志开关
    @inlinable @discardableResult
    public func modifyDomainsCLSStatus(_ input: ModifyDomainsCLSStatusRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<ModifyDomainsCLSStatusResponse> {
        self.client.execute(action: "ModifyDomainsCLSStatus", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 修改域名列表的访问日志开关
    @inlinable @discardableResult
    public func modifyDomainsCLSStatus(_ input: ModifyDomainsCLSStatusRequest, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyDomainsCLSStatusResponse {
        try await self.client.execute(action: "ModifyDomainsCLSStatus", region: region, serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 修改域名列表的访问日志开关
    @inlinable @discardableResult
    public func modifyDomainsCLSStatus(domains: [DomainURI], status: UInt64, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<ModifyDomainsCLSStatusResponse> {
        self.modifyDomainsCLSStatus(.init(domains: domains, status: status), region: region, logger: logger, on: eventLoop)
    }

    /// 修改域名列表的访问日志开关
    @inlinable @discardableResult
    public func modifyDomainsCLSStatus(domains: [DomainURI], status: UInt64, region: TCRegion? = nil, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> ModifyDomainsCLSStatusResponse {
        try await self.modifyDomainsCLSStatus(.init(domains: domains, status: status), region: region, logger: logger, on: eventLoop)
    }
}
