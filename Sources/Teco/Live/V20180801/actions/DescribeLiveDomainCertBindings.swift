//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Live {
    /// 查询绑定证书的域名列表
    ///
    /// 查询绑定证书的域名列表。
    @inlinable
    public func describeLiveDomainCertBindings(_ input: DescribeLiveDomainCertBindingsRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeLiveDomainCertBindingsResponse > {
        self.client.execute(action: "DescribeLiveDomainCertBindings", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 查询绑定证书的域名列表
    ///
    /// 查询绑定证书的域名列表。
    @inlinable
    public func describeLiveDomainCertBindings(_ input: DescribeLiveDomainCertBindingsRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeLiveDomainCertBindingsResponse {
        try await self.client.execute(action: "DescribeLiveDomainCertBindings", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribeLiveDomainCertBindings请求参数结构体
    public struct DescribeLiveDomainCertBindingsRequest: TCRequestModel {
        /// 要搜索的域名字符串。
        public let domainSearch: String?
        
        /// 记录行的位置，从0开始。默认0。
        public let offset: Int64?
        
        /// 记录行的最大数目。默认50。
        /// 若不传，则最多返回50条数据。
        public let length: Int64?
        
        /// 要查询的单个域名。
        public let domainName: String?
        
        /// 可取值：
        /// ExpireTimeAsc：证书过期时间升序。
        /// ExpireTimeDesc：证书过期时间降序。
        public let orderBy: String?
        
        public init (domainSearch: String?, offset: Int64?, length: Int64?, domainName: String?, orderBy: String?) {
            self.domainSearch = domainSearch
            self.offset = offset
            self.length = length
            self.domainName = domainName
            self.orderBy = orderBy
        }
        
        enum CodingKeys: String, CodingKey {
            case domainSearch = "DomainSearch"
            case offset = "Offset"
            case length = "Length"
            case domainName = "DomainName"
            case orderBy = "OrderBy"
        }
    }
    
    /// DescribeLiveDomainCertBindings返回参数结构体
    public struct DescribeLiveDomainCertBindingsResponse: TCResponseModel {
        /// 有绑定证书的域名信息数组。
        public let liveDomainCertBindings: [LiveDomainCertBindings]
        
        /// 总的记录行数，便于分页。
        public let totalNum: Int64
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case liveDomainCertBindings = "LiveDomainCertBindings"
            case totalNum = "TotalNum"
            case requestId = "RequestId"
        }
    }
}
