//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Kms {
    /// UpdateAlias请求参数结构体
    public struct UpdateAliasRequest: TCRequestModel {
        /// 新的别名，1-60个字符或数字的组合
        public let alias: String

        /// CMK的全局唯一标识符
        public let keyId: String

        public init(alias: String, keyId: String) {
            self.alias = alias
            self.keyId = keyId
        }

        enum CodingKeys: String, CodingKey {
            case alias = "Alias"
            case keyId = "KeyId"
        }
    }

    /// UpdateAlias返回参数结构体
    public struct UpdateAliasResponse: TCResponseModel {
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String

        enum CodingKeys: String, CodingKey {
            case requestId = "RequestId"
        }
    }

    /// 修改别名
    ///
    /// 用于修改CMK的别名。对于处于PendingDelete状态的CMK禁止修改。
    @inlinable
    public func updateAlias(_ input: UpdateAliasRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<UpdateAliasResponse> {
        self.client.execute(action: "UpdateAlias", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }

    /// 修改别名
    ///
    /// 用于修改CMK的别名。对于处于PendingDelete状态的CMK禁止修改。
    @inlinable
    public func updateAlias(_ input: UpdateAliasRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> UpdateAliasResponse {
        try await self.client.execute(action: "UpdateAlias", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }

    /// 修改别名
    ///
    /// 用于修改CMK的别名。对于处于PendingDelete状态的CMK禁止修改。
    @inlinable
    public func updateAlias(alias: String, keyId: String, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture<UpdateAliasResponse> {
        self.updateAlias(UpdateAliasRequest(alias: alias, keyId: keyId), logger: logger, on: eventLoop)
    }

    /// 修改别名
    ///
    /// 用于修改CMK的别名。对于处于PendingDelete状态的CMK禁止修改。
    @inlinable
    public func updateAlias(alias: String, keyId: String, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> UpdateAliasResponse {
        try await self.updateAlias(UpdateAliasRequest(alias: alias, keyId: keyId), logger: logger, on: eventLoop)
    }
}
