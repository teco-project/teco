//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

// Test PR teco-project/teco-code-generator#23.

import TecoCore

extension TCKmsError {
    public struct UnsupportedOperation: TCKmsErrorType {
        enum Code: String {
            case externalCmkCanNotRotate = "UnsupportedOperation.ExternalCmkCanNotRotate"
            case notExternalCmk = "UnsupportedOperation.NotExternalCmk"
            case notUserCreatedCmk = "UnsupportedOperation.NotUserCreatedCmk"
            case serviceTemporaryUnavailable = "UnsupportedOperation.ServiceTemporaryUnavailable"
            case unsupportedKeyUsageInCurrentRegion = "UnsupportedOperation.UnsupportedKeyUsageInCurrentRegion"
            case other = "UnsupportedOperation"
        }

        private let error: Code

        public let context: TCErrorContext?

        public var errorCode: String {
            self.error.rawValue
        }

        /// Initializer used by ``TCClient`` to match an error of this type.
        public init?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }

        internal init(_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }

        /// 用户导入类型的CMK禁止轮换。
        public static var externalCmkCanNotRotate: UnsupportedOperation {
            UnsupportedOperation(.externalCmkCanNotRotate)
        }

        /// CMK类型错误，仅支持External CMK。
        public static var notExternalCmk: UnsupportedOperation {
            UnsupportedOperation(.notExternalCmk)
        }

        /// 仅支持对用户自己创建的CMK做更新。
        public static var notUserCreatedCmk: UnsupportedOperation {
            UnsupportedOperation(.notUserCreatedCmk)
        }

        /// 服务暂时不可用。
        public static var serviceTemporaryUnavailable: UnsupportedOperation {
            UnsupportedOperation(.serviceTemporaryUnavailable)
        }

        /// 加密方式在当前region不支持。
        public static var unsupportedKeyUsageInCurrentRegion: UnsupportedOperation {
            UnsupportedOperation(.unsupportedKeyUsageInCurrentRegion)
        }

        /// 操作不支持。
        public static var other: UnsupportedOperation {
            UnsupportedOperation(.other)
        }

        public func asKmsError() -> TCKmsError {
            let code: TCKmsError.Code
            switch self.error {
            case .externalCmkCanNotRotate:
                code = .unsupportedOperation_ExternalCmkCanNotRotate
            case .notExternalCmk:
                code = .unsupportedOperation_NotExternalCmk
            case .notUserCreatedCmk:
                code = .unsupportedOperation_NotUserCreatedCmk
            case .serviceTemporaryUnavailable:
                code = .unsupportedOperation_ServiceTemporaryUnavailable
            case .unsupportedKeyUsageInCurrentRegion:
                code = .unsupportedOperation_UnsupportedKeyUsageInCurrentRegion
            case .other:
                code = .unsupportedOperation
            }
            return TCKmsError(code, context: self.context)
        }
    }
}
