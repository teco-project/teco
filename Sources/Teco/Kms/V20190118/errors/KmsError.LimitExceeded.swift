//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension TCKmsError {
    public struct LimitExceeded: TCKmsErrorType {
        enum Code: String {
            case cmkLimitExceeded = "LimitExceeded.CmkLimitExceeded"
            case fingerprintsLimitExceeded = "LimitExceeded.FingerprintsLimitExceeded"
            case keyLimitExceeded = "LimitExceeded.KeyLimitExceeded"
        }

        private let error: Code

        public let context: TCErrorContext?

        public var errorCode: String {
            self.error.rawValue
        }

        /// Initializer used by ``TCClient`` to match an error of this type.
        public init?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }

        internal init(_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }

        /// CMK数量已达上限。
        public static var cmkLimitExceeded: LimitExceeded {
            LimitExceeded(.cmkLimitExceeded)
        }

        /// 设备指纹个数超过限制。
        public static var fingerprintsLimitExceeded: LimitExceeded {
            LimitExceeded(.fingerprintsLimitExceeded)
        }

        /// 创建的密钥个数超过限制。
        public static var keyLimitExceeded: LimitExceeded {
            LimitExceeded(.keyLimitExceeded)
        }

        public func asKmsError() -> TCKmsError {
            let code: TCKmsError.Code
            switch self.error {
            case .cmkLimitExceeded:
                code = .limitExceeded_CmkLimitExceeded
            case .fingerprintsLimitExceeded:
                code = .limitExceeded_FingerprintsLimitExceeded
            case .keyLimitExceeded:
                code = .limitExceeded_KeyLimitExceeded
            }
            return TCKmsError(code, context: self.context)
        }
    }
}
