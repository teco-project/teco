//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Tsf {
    /// 查询公共配置汇总列表
    ///
    /// 查询公共配置汇总列表
    @inlinable
    public func describePublicConfigSummary(_ input: DescribePublicConfigSummaryRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribePublicConfigSummaryResponse > {
        self.client.execute(action: "DescribePublicConfigSummary", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 查询公共配置汇总列表
    ///
    /// 查询公共配置汇总列表
    @inlinable
    public func describePublicConfigSummary(_ input: DescribePublicConfigSummaryRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribePublicConfigSummaryResponse {
        try await self.client.execute(action: "DescribePublicConfigSummary", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribePublicConfigSummary请求参数结构体
    public struct DescribePublicConfigSummaryRequest: TCRequestModel {
        /// 查询关键字，模糊查询：配置项名称，不传入时查询全量
        public let searchWord: String?
        
        /// 偏移量，默认为0
        public let offset: Int64?
        
        /// 每页条数，默认为20
        public let limit: Int64?
        
        /// 按时间排序：creation_time；按名称排序：config_name
        public let orderBy: String?
        
        /// 升序传 0，降序传 1
        public let orderType: Int64?
        
        /// 无
        public let configTagList: [String]?
        
        /// 无
        public let disableProgramAuthCheck: Bool?
        
        /// 无
        public let configIdList: [String]?
        
        public init (searchWord: String?, offset: Int64?, limit: Int64?, orderBy: String?, orderType: Int64?, configTagList: [String]?, disableProgramAuthCheck: Bool?, configIdList: [String]?) {
            self.searchWord = searchWord
            self.offset = offset
            self.limit = limit
            self.orderBy = orderBy
            self.orderType = orderType
            self.configTagList = configTagList
            self.disableProgramAuthCheck = disableProgramAuthCheck
            self.configIdList = configIdList
        }
        
        enum CodingKeys: String, CodingKey {
            case searchWord = "SearchWord"
            case offset = "Offset"
            case limit = "Limit"
            case orderBy = "OrderBy"
            case orderType = "OrderType"
            case configTagList = "ConfigTagList"
            case disableProgramAuthCheck = "DisableProgramAuthCheck"
            case configIdList = "ConfigIdList"
        }
    }
    
    /// DescribePublicConfigSummary返回参数结构体
    public struct DescribePublicConfigSummaryResponse: TCResponseModel {
        /// 分页的全局配置统计信息列表
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let result: TsfPageConfig
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case result = "Result"
            case requestId = "RequestId"
        }
    }
}