//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Tsf {
    /// 查询服务API列表
    ///
    /// 查询服务API列表
    @inlinable
    public func describeMsApiList(_ input: DescribeMsApiListRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeMsApiListResponse > {
        self.client.execute(action: "DescribeMsApiList", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 查询服务API列表
    ///
    /// 查询服务API列表
    @inlinable
    public func describeMsApiList(_ input: DescribeMsApiListRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeMsApiListResponse {
        try await self.client.execute(action: "DescribeMsApiList", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribeMsApiList请求参数结构体
    public struct DescribeMsApiListRequest: TCRequestModel {
        /// 微服务ID
        public let microserviceId: String
        
        /// 搜索关键字
        public let searchWord: String?
        
        /// 每页的数量
        public let limit: Int64?
        
        /// 翻页偏移量
        public let offset: Int64?
        
        public init (microserviceId: String, searchWord: String?, limit: Int64?, offset: Int64?) {
            self.microserviceId = microserviceId
            self.searchWord = searchWord
            self.limit = limit
            self.offset = offset
        }
        
        enum CodingKeys: String, CodingKey {
            case microserviceId = "MicroserviceId"
            case searchWord = "SearchWord"
            case limit = "Limit"
            case offset = "Offset"
        }
    }
    
    /// DescribeMsApiList返回参数结构体
    public struct DescribeMsApiListResponse: TCResponseModel {
        /// 相应结果
        public let result: TsfApiListResponse
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case result = "Result"
            case requestId = "RequestId"
        }
    }
}