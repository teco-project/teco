//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Teco project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension Tsf {
    /// 查询java实例jvm监控数据
    ///
    /// 查询java实例jvm监控数据,返回数据可选
    @inlinable
    public func describeJvmMonitor(_ input: DescribeJvmMonitorRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) -> EventLoopFuture < DescribeJvmMonitorResponse > {
        self.client.execute(action: "DescribeJvmMonitor", serviceConfig: self.config, input: input, logger: logger, on: eventLoop)
    }
    
    /// 查询java实例jvm监控数据
    ///
    /// 查询java实例jvm监控数据,返回数据可选
    @inlinable
    public func describeJvmMonitor(_ input: DescribeJvmMonitorRequest, logger: Logger = TCClient.loggingDisabled, on eventLoop: EventLoop? = nil) async throws -> DescribeJvmMonitorResponse {
        try await self.client.execute(action: "DescribeJvmMonitor", serviceConfig: self.config, input: input, logger: logger, on: eventLoop).get()
    }
    
    /// DescribeJvmMonitor请求参数结构体
    public struct DescribeJvmMonitorRequest: TCRequestModel {
        /// 查询的实例Id
        public let instanceId: String
        
        /// 实例所属应用Id
        public let applicationId: String
        
        /// 时间粒度,单位:秒
        public let timeGranularity: Int64
        
        /// 查询数据起始时间格式(yyyy-MM-dd HH:mm:ss)
        public let from: String
        
        /// 查询数据结束时间格式(yyyy-MM-dd HH:mm:ss)
        public let to: String
        
        /// 查询的监控图列表,以返回值属性名作为入参
        public let requiredPictures: [String]
        
        /// 扩展字段
        public let tag: String?
        
        public init (instanceId: String, applicationId: String, timeGranularity: Int64, from: String, to: String, requiredPictures: [String], tag: String?) {
            self.instanceId = instanceId
            self.applicationId = applicationId
            self.timeGranularity = timeGranularity
            self.from = from
            self.to = to
            self.requiredPictures = requiredPictures
            self.tag = tag
        }
        
        enum CodingKeys: String, CodingKey {
            case instanceId = "InstanceId"
            case applicationId = "ApplicationId"
            case timeGranularity = "TimeGranularity"
            case from = "From"
            case to = "To"
            case requiredPictures = "RequiredPictures"
            case tag = "Tag"
        }
    }
    
    /// DescribeJvmMonitor返回参数结构体
    public struct DescribeJvmMonitorResponse: TCResponseModel {
        /// Java实例jvm监控数据
        /// 注意：此字段可能返回 null，表示取不到有效值。
        public let result: JvmMonitorData
        
        /// 唯一请求 ID，每次请求都会返回。定位问题时需要提供该次请求的 RequestId。
        public let requestId: String
        
        enum CodingKeys: String, CodingKey {
            case result = "Result"
            case requestId = "RequestId"
        }
    }
}