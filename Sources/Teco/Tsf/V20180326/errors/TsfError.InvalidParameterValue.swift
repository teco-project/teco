//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project.
//
// Copyright (c) 2022 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

extension TCTsfError {
    public struct InvalidParameterValue: TCTsfErrorType {
        enum Code: String {
            case applicationMicroTypeInvalid = "InvalidParameterValue.ApplicationMicroTypeInvalid"
            case applicationNameExist = "InvalidParameterValue.ApplicationNameExist"
            case applicationNameLength = "InvalidParameterValue.ApplicationNameLength"
            case applicationNameNull = "InvalidParameterValue.ApplicationNameNull"
            case applicationNameRegxInvalid = "InvalidParameterValue.ApplicationNameRegxInvalid"
            case applicationNotExists = "InvalidParameterValue.ApplicationNotExists"
            case applicationPageLimitInvalid = "InvalidParameterValue.ApplicationPageLimitInvalid"
            case applicationTypeInvalid = "InvalidParameterValue.ApplicationTypeInvalid"
            case clusterCidrConflict = "InvalidParameterValue.ClusterCidrConflict"
            case clusterNameExist = "InvalidParameterValue.ClusterNameExist"
            case clusterNameRequired = "InvalidParameterValue.ClusterNameRequired"
            case clusterRegionInvalid = "InvalidParameterValue.ClusterRegionInvalid"
            case clusterTypeInvalid = "InvalidParameterValue.ClusterTypeInvalid"
            case clusterZoneInvalid = "InvalidParameterValue.ClusterZoneInvalid"
            case configAlreadyReleased = "InvalidParameterValue.ConfigAlreadyReleased"
            case configExists = "InvalidParameterValue.ConfigExists"
            case configGroupApplicationIdNotMatch = "InvalidParameterValue.ConfigGroupApplicationIdNotMatch"
            case configNameInvalid = "InvalidParameterValue.ConfigNameInvalid"
            case configNotExistsOrPermissionDenied = "InvalidParameterValue.ConfigNotExistsOrPermissionDenied"
            case configReleaseNotExists = "InvalidParameterValue.ConfigReleaseNotExists"
            case configValueFormatInvalid = "InvalidParameterValue.ConfigValueFormatInvalid"
            case configValueTooLong = "InvalidParameterValue.ConfigValueTooLong"
            case configVersionDescInvalid = "InvalidParameterValue.ConfigVersionDescInvalid"
            case configVersionInvalid = "InvalidParameterValue.ConfigVersionInvalid"
            case containerGroupImageTagIsInUse = "InvalidParameterValue.ContainerGroupImageTagIsInUse"
            case containergroupAccesstypeNull = "InvalidParameterValue.ContainergroupAccesstypeNull"
            case containergroupApplicationIdNull = "InvalidParameterValue.ContainergroupApplicationIdNull"
            case containergroupCpulimitOver = "InvalidParameterValue.ContainergroupCpulimitOver"
            case containergroupGroupidNull = "InvalidParameterValue.ContainergroupGroupidNull"
            case containergroupGroupnameLegnth = "InvalidParameterValue.ContainergroupGroupnameLegnth"
            case containergroupGroupnameNull = "InvalidParameterValue.ContainergroupGroupnameNull"
            case containergroupGroupnameRegexMatchFalse = "InvalidParameterValue.ContainergroupGroupnameRegexMatchFalse"
            case containergroupInstanceNumInvalid = "InvalidParameterValue.ContainergroupInstanceNumInvalid"
            case containergroupInvalidCpuInfo = "InvalidParameterValue.ContainergroupInvalidCpuInfo"
            case containergroupInvalidMemInfo = "InvalidParameterValue.ContainergroupInvalidMemInfo"
            case containergroupLimitValueInvalid = "InvalidParameterValue.ContainergroupLimitValueInvalid"
            case containergroupMemlimitOver = "InvalidParameterValue.ContainergroupMemlimitOver"
            case containergroupNodePortInvalid = "InvalidParameterValue.ContainergroupNodePortInvalid"
            case containergroupPortInvalid = "InvalidParameterValue.ContainergroupPortInvalid"
            case containergroupPortsRepeat = "InvalidParameterValue.ContainergroupPortsRepeat"
            case containergroupProtocolInvalid = "InvalidParameterValue.ContainergroupProtocolInvalid"
            case containergroupProtocolMixError = "InvalidParameterValue.ContainergroupProtocolMixError"
            case containergroupProtocolNull = "InvalidParameterValue.ContainergroupProtocolNull"
            case containergroupProtocolPortsNull = "InvalidParameterValue.ContainergroupProtocolPortsNull"
            case containergroupReponameInvalid = "InvalidParameterValue.ContainergroupReponameInvalid"
            case containergroupResourceAgentValueInvalid = "InvalidParameterValue.ContainergroupResourceAgentValueInvalid"
            case containergroupTargetPortsRepeat = "InvalidParameterValue.ContainergroupTargetPortsRepeat"
            case containergroupTargetportNull = "InvalidParameterValue.ContainergroupTargetportNull"
            case containergroupUpdateivlInvalid = "InvalidParameterValue.ContainergroupUpdateivlInvalid"
            case containergroupUpdatetypeInvalid = "InvalidParameterValue.ContainergroupUpdatetypeInvalid"
            case containergroupYamlUserContainerNotFound = "InvalidParameterValue.ContainergroupYamlUserContainerNotFound"
            case cvmCaeMasterAgentBusy = "InvalidParameterValue.CvmCaeMasterAgentBusy"
            case cvmCaeMasterAgentNotFound = "InvalidParameterValue.CvmCaeMasterAgentNotFound"
            case cvmCaeMasterGroupNoAgent = "InvalidParameterValue.CvmCaeMasterGroupNoAgent"
            case deployGroupNotExists = "InvalidParameterValue.DeployGroupNotExists"
            case fileConfigAlreadyReleased = "InvalidParameterValue.FileConfigAlreadyReleased"
            case fileConfigExists = "InvalidParameterValue.FileConfigExists"
            case fileConfigExistsPath = "InvalidParameterValue.FileConfigExistsPath"
            case fileConfigExistsPathOther = "InvalidParameterValue.FileConfigExistsPathOther"
            case fileConfigFilePathInvalid = "InvalidParameterValue.FileConfigFilePathInvalid"
            case fileConfigNameInvalid = "InvalidParameterValue.FileConfigNameInvalid"
            case fileConfigNotExistsOrPermissionDenied = "InvalidParameterValue.FileConfigNotExistsOrPermissionDenied"
            case fileConfigPathExists = "InvalidParameterValue.FileConfigPathExists"
            case fileConfigVersionDescInvalid = "InvalidParameterValue.FileConfigVersionDescInvalid"
            case gatewayParameterError = "InvalidParameterValue.GatewayParameterError"
            case gatewayParameterInvalid = "InvalidParameterValue.GatewayParameterInvalid"
            case globalNamespaceNameExist = "InvalidParameterValue.GlobalNamespaceNameExist"
            case groupBatchParameterInvalid = "InvalidParameterValue.GroupBatchParameterInvalid"
            case groupClusterNamespaceNotBound = "InvalidParameterValue.GroupClusterNamespaceNotBound"
            case groupClusterTypeMismatch = "InvalidParameterValue.GroupClusterTypeMismatch"
            case groupDeleteClusterTypeMismatch = "InvalidParameterValue.GroupDeleteClusterTypeMismatch"
            case groupIdNull = "InvalidParameterValue.GroupIdNull"
            case groupNameExist = "InvalidParameterValue.GroupNameExist"
            case groupNameLength = "InvalidParameterValue.GroupNameLength"
            case groupNameRegxMismatch = "InvalidParameterValue.GroupNameRegxMismatch"
            case groupNotExists = "InvalidParameterValue.GroupNotExists"
            case groupPageLimitInvalid = "InvalidParameterValue.GroupPageLimitInvalid"
            case groupStatusInvalid = "InvalidParameterValue.GroupStatusInvalid"
            case groupValidInstanceNull = "InvalidParameterValue.GroupValidInstanceNull"
            case imagerepoRepoNameNull = "InvalidParameterValue.ImagerepoRepoNameNull"
            case imagerepoReponameInvalid = "InvalidParameterValue.ImagerepoReponameInvalid"
            case imagerepoTagnameNull = "InvalidParameterValue.ImagerepoTagnameNull"
            case instanceInvalidImage = "InvalidParameterValue.InstanceInvalidImage"
            case invalidParameter = "InvalidParameterValue.InvalidParameter"
            case invalidParameterFormat = "InvalidParameterValue.InvalidParameterFormat"
            case laneInfoAlreadyUsed = "InvalidParameterValue.LaneInfoAlreadyUsed"
            case laneInfoNameAlreadyUsed = "InvalidParameterValue.LaneInfoNameAlreadyUsed"
            case laneInfoNameInvalid = "InvalidParameterValue.LaneInfoNameInvalid"
            case laneInfoNameNotEmpty = "InvalidParameterValue.LaneInfoNameNotEmpty"
            case laneInfoNameTooLong = "InvalidParameterValue.LaneInfoNameTooLong"
            case laneInfoNotExist = "InvalidParameterValue.LaneInfoNotExist"
            case laneInfoNotExistEntrance = "InvalidParameterValue.LaneInfoNotExistEntrance"
            case laneInfoRemarkTooLong = "InvalidParameterValue.LaneInfoRemarkTooLong"
            case laneRuleInfoNotExist = "InvalidParameterValue.LaneRuleInfoNotExist"
            case laneRuleNameAlreadyUsed = "InvalidParameterValue.LaneRuleNameAlreadyUsed"
            case laneRuleNameInvalid = "InvalidParameterValue.LaneRuleNameInvalid"
            case laneRuleNameNotEmpty = "InvalidParameterValue.LaneRuleNameNotEmpty"
            case laneRuleNameTooLong = "InvalidParameterValue.LaneRuleNameTooLong"
            case laneRuleNotExist = "InvalidParameterValue.LaneRuleNotExist"
            case laneRuleRemarkTooLong = "InvalidParameterValue.LaneRuleRemarkTooLong"
            case laneRuleTagNameNotEmpty = "InvalidParameterValue.LaneRuleTagNameNotEmpty"
            case laneRuleTagNameTooLong = "InvalidParameterValue.LaneRuleTagNameTooLong"
            case laneRuleTagNotEmpty = "InvalidParameterValue.LaneRuleTagNotEmpty"
            case laneRuleTagValueTooLong = "InvalidParameterValue.LaneRuleTagValueTooLong"
            case laneRuleTagValueTotalTooLong = "InvalidParameterValue.LaneRuleTagValueTotalTooLong"
            case namespaceAlreadyBindCluster = "InvalidParameterValue.NamespaceAlreadyBindCluster"
            case namespaceDescInvalid = "InvalidParameterValue.NamespaceDescInvalid"
            case namespaceNameExist = "InvalidParameterValue.NamespaceNameExist"
            case namespaceNameInvalid = "InvalidParameterValue.NamespaceNameInvalid"
            case namespaceNotExists = "InvalidParameterValue.NamespaceNotExists"
            case releasedConfigCanNotBeDeleted = "InvalidParameterValue.ReleasedConfigCanNotBeDeleted"
            case resourcePermissionDenied = "InvalidParameterValue.ResourcePermissionDenied"
            case resourceTypeError = "InvalidParameterValue.ResourceTypeError"
            case serviceDescLength = "InvalidParameterValue.ServiceDescLength"
            case serviceNameRepeated = "InvalidParameterValue.ServiceNameRepeated"
            case serviceNotExistsOrPermissionDenied = "InvalidParameterValue.ServiceNotExistsOrPermissionDenied"
            case taskParameterInvalid = "InvalidParameterValue.TaskParameterInvalid"
            case wrongDontStartValue = "InvalidParameterValue.WrongDontStartValue"
            case other = "InvalidParameterValue"
        }

        private let error: Code

        public let context: TCErrorContext?

        public var errorCode: String {
            self.error.rawValue
        }

        /// Initializer used by ``TCClient`` to match an error of this type.
        public init?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }

        internal init(_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }

        /// 无效的微服务类型。
        public static var applicationMicroTypeInvalid: InvalidParameterValue {
            InvalidParameterValue(.applicationMicroTypeInvalid)
        }

        /// 应用名称已存在，请更换其他名称。
        public static var applicationNameExist: InvalidParameterValue {
            InvalidParameterValue(.applicationNameExist)
        }

        /// 应用名称不能大于60字符。
        public static var applicationNameLength: InvalidParameterValue {
            InvalidParameterValue(.applicationNameLength)
        }

        /// 应用名称不能为空。
        public static var applicationNameNull: InvalidParameterValue {
            InvalidParameterValue(.applicationNameNull)
        }

        /// 应用名称格式不正确,只能包含小写字母、数字及分隔符("_"、"-")，且不能以分隔符开头或结尾。
        public static var applicationNameRegxInvalid: InvalidParameterValue {
            InvalidParameterValue(.applicationNameRegxInvalid)
        }

        /// 无法获取应用。
        public static var applicationNotExists: InvalidParameterValue {
            InvalidParameterValue(.applicationNotExists)
        }

        /// 无效的应用分页参数。
        public static var applicationPageLimitInvalid: InvalidParameterValue {
            InvalidParameterValue(.applicationPageLimitInvalid)
        }

        /// 无效的应用类型。
        public static var applicationTypeInvalid: InvalidParameterValue {
            InvalidParameterValue(.applicationTypeInvalid)
        }

        /// 与同VPC其它集群CIDR冲突。
        public static var clusterCidrConflict: InvalidParameterValue {
            InvalidParameterValue(.clusterCidrConflict)
        }

        /// 集群命名已存在，请更换其他名称。
        public static var clusterNameExist: InvalidParameterValue {
            InvalidParameterValue(.clusterNameExist)
        }

        /// 集群命名不能为空。
        public static var clusterNameRequired: InvalidParameterValue {
            InvalidParameterValue(.clusterNameRequired)
        }

        /// 创建集群，无效的地域字段。
        public static var clusterRegionInvalid: InvalidParameterValue {
            InvalidParameterValue(.clusterRegionInvalid)
        }

        /// 非法集群类型。
        public static var clusterTypeInvalid: InvalidParameterValue {
            InvalidParameterValue(.clusterTypeInvalid)
        }

        /// 创建集群，无效的可用区字段。
        public static var clusterZoneInvalid: InvalidParameterValue {
            InvalidParameterValue(.clusterZoneInvalid)
        }

        /// 配置项已经发布过。
        public static var configAlreadyReleased: InvalidParameterValue {
            InvalidParameterValue(.configAlreadyReleased)
        }

        /// 配置项已存在。
        public static var configExists: InvalidParameterValue {
            InvalidParameterValue(.configExists)
        }

        /// 配置项和部署组所属应用不一致。
        public static var configGroupApplicationIdNotMatch: InvalidParameterValue {
            InvalidParameterValue(.configGroupApplicationIdNotMatch)
        }

        /// 配置项名称不合规。
        public static var configNameInvalid: InvalidParameterValue {
            InvalidParameterValue(.configNameInvalid)
        }

        /// 无法获取配置项或无权限访问。
        public static var configNotExistsOrPermissionDenied: InvalidParameterValue {
            InvalidParameterValue(.configNotExistsOrPermissionDenied)
        }

        /// 无法获取配置项发布信息。
        public static var configReleaseNotExists: InvalidParameterValue {
            InvalidParameterValue(.configReleaseNotExists)
        }

        /// 配置格式不符合YAML要求。
        public static var configValueFormatInvalid: InvalidParameterValue {
            InvalidParameterValue(.configValueFormatInvalid)
        }

        /// 配置项值内容大小（%s）超过限制。
        public static var configValueTooLong: InvalidParameterValue {
            InvalidParameterValue(.configValueTooLong)
        }

        /// 配置项版本描述不合规。
        public static var configVersionDescInvalid: InvalidParameterValue {
            InvalidParameterValue(.configVersionDescInvalid)
        }

        /// 配置项版本不合规。
        public static var configVersionInvalid: InvalidParameterValue {
            InvalidParameterValue(.configVersionInvalid)
        }

        /// 该镜像被占用中。
        public static var containerGroupImageTagIsInUse: InvalidParameterValue {
            InvalidParameterValue(.containerGroupImageTagIsInUse)
        }

        /// 服务访问方式不能为空。
        public static var containergroupAccesstypeNull: InvalidParameterValue {
            InvalidParameterValue(.containergroupAccesstypeNull)
        }

        /// 所属应用ID不能为空。
        public static var containergroupApplicationIdNull: InvalidParameterValue {
            InvalidParameterValue(.containergroupApplicationIdNull)
        }

        /// 集群 CPU 资源不足。
        public static var containergroupCpulimitOver: InvalidParameterValue {
            InvalidParameterValue(.containergroupCpulimitOver)
        }

        /// 部署组ID不能为空。
        public static var containergroupGroupidNull: InvalidParameterValue {
            InvalidParameterValue(.containergroupGroupidNull)
        }

        /// 部署组名不能大于60个字符。
        public static var containergroupGroupnameLegnth: InvalidParameterValue {
            InvalidParameterValue(.containergroupGroupnameLegnth)
        }

        /// 部署组名不能为空。
        public static var containergroupGroupnameNull: InvalidParameterValue {
            InvalidParameterValue(.containergroupGroupnameNull)
        }

        /// 部署组名称格式不正确,只能包含小写字母、数字及分隔符("-"),且必须以小写字母开头，数字或小写字母结尾。
        public static var containergroupGroupnameRegexMatchFalse: InvalidParameterValue {
            InvalidParameterValue(.containergroupGroupnameRegexMatchFalse)
        }

        /// 实例数量不能为空或不合法。
        public static var containergroupInstanceNumInvalid: InvalidParameterValue {
            InvalidParameterValue(.containergroupInstanceNumInvalid)
        }

        /// CPU limit 和 request 不能同时为空。
        public static var containergroupInvalidCpuInfo: InvalidParameterValue {
            InvalidParameterValue(.containergroupInvalidCpuInfo)
        }

        /// 内存 limit 和 request 不能同时为空。
        public static var containergroupInvalidMemInfo: InvalidParameterValue {
            InvalidParameterValue(.containergroupInvalidMemInfo)
        }

        /// limit最大数量，默认 20, 最大值 50。
        public static var containergroupLimitValueInvalid: InvalidParameterValue {
            InvalidParameterValue(.containergroupLimitValueInvalid)
        }

        /// 集群内存资源不足。
        public static var containergroupMemlimitOver: InvalidParameterValue {
            InvalidParameterValue(.containergroupMemlimitOver)
        }

        /// 主机端口值非法。
        public static var containergroupNodePortInvalid: InvalidParameterValue {
            InvalidParameterValue(.containergroupNodePortInvalid)
        }

        /// 服务端口值非法。
        public static var containergroupPortInvalid: InvalidParameterValue {
            InvalidParameterValue(.containergroupPortInvalid)
        }

        /// 服务端口不允许重复映射。
        public static var containergroupPortsRepeat: InvalidParameterValue {
            InvalidParameterValue(.containergroupPortsRepeat)
        }

        /// 协议值非法,限定:TCP/UDP。
        public static var containergroupProtocolInvalid: InvalidParameterValue {
            InvalidParameterValue(.containergroupProtocolInvalid)
        }

        /// 公网访问方式下，协议需要一致。
        public static var containergroupProtocolMixError: InvalidParameterValue {
            InvalidParameterValue(.containergroupProtocolMixError)
        }

        /// 协议不能为空。
        public static var containergroupProtocolNull: InvalidParameterValue {
            InvalidParameterValue(.containergroupProtocolNull)
        }

        /// 协议端口不能为空。
        public static var containergroupProtocolPortsNull: InvalidParameterValue {
            InvalidParameterValue(.containergroupProtocolPortsNull)
        }

        /// 镜像仓库名与应用名不匹配。
        public static var containergroupReponameInvalid: InvalidParameterValue {
            InvalidParameterValue(.containergroupReponameInvalid)
        }

        /// agent 容器资源值非法 , %s。
        public static var containergroupResourceAgentValueInvalid: InvalidParameterValue {
            InvalidParameterValue(.containergroupResourceAgentValueInvalid)
        }

        /// 容器端口不允许重复映射。
        public static var containergroupTargetPortsRepeat: InvalidParameterValue {
            InvalidParameterValue(.containergroupTargetPortsRepeat)
        }

        /// 容器端口不能为空。
        public static var containergroupTargetportNull: InvalidParameterValue {
            InvalidParameterValue(.containergroupTargetportNull)
        }

        /// 更新间隔不能为空或者数值非法。
        public static var containergroupUpdateivlInvalid: InvalidParameterValue {
            InvalidParameterValue(.containergroupUpdateivlInvalid)
        }

        /// updateType参数不合法，值必须为0、1。
        public static var containergroupUpdatetypeInvalid: InvalidParameterValue {
            InvalidParameterValue(.containergroupUpdatetypeInvalid)
        }

        /// 找不到业务容器。
        public static var containergroupYamlUserContainerNotFound: InvalidParameterValue {
            InvalidParameterValue(.containergroupYamlUserContainerNotFound)
        }

        /// TSF MASTER 正在执行任务，请等待任务执行完成再下发新任务。
        public static var cvmCaeMasterAgentBusy: InvalidParameterValue {
            InvalidParameterValue(.cvmCaeMasterAgentBusy)
        }

        /// 无可用实例。
        public static var cvmCaeMasterAgentNotFound: InvalidParameterValue {
            InvalidParameterValue(.cvmCaeMasterAgentNotFound)
        }

        /// TSF MASTER 部署组中无云主机。
        public static var cvmCaeMasterGroupNoAgent: InvalidParameterValue {
            InvalidParameterValue(.cvmCaeMasterGroupNoAgent)
        }

        /// 部署组不存在。
        public static var deployGroupNotExists: InvalidParameterValue {
            InvalidParameterValue(.deployGroupNotExists)
        }

        /// 文件配置项已经发布。
        public static var fileConfigAlreadyReleased: InvalidParameterValue {
            InvalidParameterValue(.fileConfigAlreadyReleased)
        }

        /// 文件配置项已存在。
        public static var fileConfigExists: InvalidParameterValue {
            InvalidParameterValue(.fileConfigExists)
        }

        /// 配置文件路径重复。
        public static var fileConfigExistsPath: InvalidParameterValue {
            InvalidParameterValue(.fileConfigExistsPath)
        }

        /// 其他用户已发布此配置文件路径。
        public static var fileConfigExistsPathOther: InvalidParameterValue {
            InvalidParameterValue(.fileConfigExistsPathOther)
        }

        /// 文件配置项文件路径不合规。
        public static var fileConfigFilePathInvalid: InvalidParameterValue {
            InvalidParameterValue(.fileConfigFilePathInvalid)
        }

        /// 文件配置项名称不合规。
        public static var fileConfigNameInvalid: InvalidParameterValue {
            InvalidParameterValue(.fileConfigNameInvalid)
        }

        /// 无法获取文件配置项或无权限访问。
        public static var fileConfigNotExistsOrPermissionDenied: InvalidParameterValue {
            InvalidParameterValue(.fileConfigNotExistsOrPermissionDenied)
        }

        /// 同一部署组禁止配置文件重复(文件路径+文件名)。
        public static var fileConfigPathExists: InvalidParameterValue {
            InvalidParameterValue(.fileConfigPathExists)
        }

        /// 文件配置项版本描述不合规。
        public static var fileConfigVersionDescInvalid: InvalidParameterValue {
            InvalidParameterValue(.fileConfigVersionDescInvalid)
        }

        /// 请求参数异常:%s。
        public static var gatewayParameterError: InvalidParameterValue {
            InvalidParameterValue(.gatewayParameterError)
        }

        /// 无效请求参数:%s。
        public static var gatewayParameterInvalid: InvalidParameterValue {
            InvalidParameterValue(.gatewayParameterInvalid)
        }

        /// 全局命名空间已经存在，只能创建一个全局命名空间。
        public static var globalNamespaceNameExist: InvalidParameterValue {
            InvalidParameterValue(.globalNamespaceNameExist)
        }

        /// 部署相关请求参数校验失败。
        public static var groupBatchParameterInvalid: InvalidParameterValue {
            InvalidParameterValue(.groupBatchParameterInvalid)
        }

        /// 部署组的集群未绑定该命名空间。
        public static var groupClusterNamespaceNotBound: InvalidParameterValue {
            InvalidParameterValue(.groupClusterNamespaceNotBound)
        }

        /// 创建分组， 集群类型不匹配。
        public static var groupClusterTypeMismatch: InvalidParameterValue {
            InvalidParameterValue(.groupClusterTypeMismatch)
        }

        /// 删除分组，集群类型不匹配。
        public static var groupDeleteClusterTypeMismatch: InvalidParameterValue {
            InvalidParameterValue(.groupDeleteClusterTypeMismatch)
        }

        /// 部署组ID不能为空。
        public static var groupIdNull: InvalidParameterValue {
            InvalidParameterValue(.groupIdNull)
        }

        /// 部署组名称已存在，请更换其他名称。
        public static var groupNameExist: InvalidParameterValue {
            InvalidParameterValue(.groupNameExist)
        }

        /// 部署组名不能大于50个字符。
        public static var groupNameLength: InvalidParameterValue {
            InvalidParameterValue(.groupNameLength)
        }

        /// 部署组名称格式不正确,只能包含小写字母、数字及分隔符("-"),且必须以小写字母开头，数字或小写字母结尾。
        public static var groupNameRegxMismatch: InvalidParameterValue {
            InvalidParameterValue(.groupNameRegxMismatch)
        }

        /// 无法获取部署组。
        public static var groupNotExists: InvalidParameterValue {
            InvalidParameterValue(.groupNotExists)
        }

        /// 分组无效的分业参数。
        public static var groupPageLimitInvalid: InvalidParameterValue {
            InvalidParameterValue(.groupPageLimitInvalid)
        }

        /// 无效的部署组状态过滤字段。
        public static var groupStatusInvalid: InvalidParameterValue {
            InvalidParameterValue(.groupStatusInvalid)
        }

        /// 分组操作，无有效机器。
        public static var groupValidInstanceNull: InvalidParameterValue {
            InvalidParameterValue(.groupValidInstanceNull)
        }

        /// 镜像仓库名不能为空。
        public static var imagerepoRepoNameNull: InvalidParameterValue {
            InvalidParameterValue(.imagerepoRepoNameNull)
        }

        /// 镜像仓库名不合法,示例:tsf-repo/nginx。
        public static var imagerepoReponameInvalid: InvalidParameterValue {
            InvalidParameterValue(.imagerepoReponameInvalid)
        }

        /// imageTags不能为空。
        public static var imagerepoTagnameNull: InvalidParameterValue {
            InvalidParameterValue(.imagerepoTagnameNull)
        }

        /// 重装系统，无效的镜像id。
        public static var instanceInvalidImage: InvalidParameterValue {
            InvalidParameterValue(.instanceInvalidImage)
        }

        /// 参数 %s 取值错误。
        public static var invalidParameter: InvalidParameterValue {
            InvalidParameterValue(.invalidParameter)
        }

        /// 参数格式异常。
        public static var invalidParameterFormat: InvalidParameterValue {
            InvalidParameterValue(.invalidParameterFormat)
        }

        /// 已经绑定灰度规则，无法删除。
        public static var laneInfoAlreadyUsed: InvalidParameterValue {
            InvalidParameterValue(.laneInfoAlreadyUsed)
        }

        /// 存在同名的泳道。
        public static var laneInfoNameAlreadyUsed: InvalidParameterValue {
            InvalidParameterValue(.laneInfoNameAlreadyUsed)
        }

        /// 泳道名称格式有误。
        public static var laneInfoNameInvalid: InvalidParameterValue {
            InvalidParameterValue(.laneInfoNameInvalid)
        }

        /// 泳道名称不能为空。
        public static var laneInfoNameNotEmpty: InvalidParameterValue {
            InvalidParameterValue(.laneInfoNameNotEmpty)
        }

        /// 泳道名称不能超过60个字符。
        public static var laneInfoNameTooLong: InvalidParameterValue {
            InvalidParameterValue(.laneInfoNameTooLong)
        }

        /// 泳道不存在。
        public static var laneInfoNotExist: InvalidParameterValue {
            InvalidParameterValue(.laneInfoNotExist)
        }

        /// 泳道没有设置任何入口应用。
        public static var laneInfoNotExistEntrance: InvalidParameterValue {
            InvalidParameterValue(.laneInfoNotExistEntrance)
        }

        /// 泳道备注不能超过200个字符。
        public static var laneInfoRemarkTooLong: InvalidParameterValue {
            InvalidParameterValue(.laneInfoRemarkTooLong)
        }

        /// 全链路灰度规则中的泳道不存在。
        public static var laneRuleInfoNotExist: InvalidParameterValue {
            InvalidParameterValue(.laneRuleInfoNotExist)
        }

        /// 存在同名的全链路灰度规则。
        public static var laneRuleNameAlreadyUsed: InvalidParameterValue {
            InvalidParameterValue(.laneRuleNameAlreadyUsed)
        }

        /// 全链路灰度规则名称格式有误。
        public static var laneRuleNameInvalid: InvalidParameterValue {
            InvalidParameterValue(.laneRuleNameInvalid)
        }

        /// 全链路灰度规则名称不能为空。
        public static var laneRuleNameNotEmpty: InvalidParameterValue {
            InvalidParameterValue(.laneRuleNameNotEmpty)
        }

        /// 全链路灰度规则名称不能超过60个字符。
        public static var laneRuleNameTooLong: InvalidParameterValue {
            InvalidParameterValue(.laneRuleNameTooLong)
        }

        /// 全链路灰度规则不存在。
        public static var laneRuleNotExist: InvalidParameterValue {
            InvalidParameterValue(.laneRuleNotExist)
        }

        /// 全链路灰度规则备注不能超过200个字符。
        public static var laneRuleRemarkTooLong: InvalidParameterValue {
            InvalidParameterValue(.laneRuleRemarkTooLong)
        }

        /// 全链路灰度规则标签名不能为空。
        public static var laneRuleTagNameNotEmpty: InvalidParameterValue {
            InvalidParameterValue(.laneRuleTagNameNotEmpty)
        }

        /// 全链路灰度规则标签名不能超过32个字符。
        public static var laneRuleTagNameTooLong: InvalidParameterValue {
            InvalidParameterValue(.laneRuleTagNameTooLong)
        }

        /// 全链路灰度规则必须设置至少一个标签。
        public static var laneRuleTagNotEmpty: InvalidParameterValue {
            InvalidParameterValue(.laneRuleTagNotEmpty)
        }

        /// 全链路灰度规则标签值不能超过128个字符。
        public static var laneRuleTagValueTooLong: InvalidParameterValue {
            InvalidParameterValue(.laneRuleTagValueTooLong)
        }

        /// 全链路灰度规则总标签值不能超过200个字符。
        public static var laneRuleTagValueTotalTooLong: InvalidParameterValue {
            InvalidParameterValue(.laneRuleTagValueTotalTooLong)
        }

        /// 集群已关联该命名空间。
        public static var namespaceAlreadyBindCluster: InvalidParameterValue {
            InvalidParameterValue(.namespaceAlreadyBindCluster)
        }

        /// 命名空间描格式不正确。
        public static var namespaceDescInvalid: InvalidParameterValue {
            InvalidParameterValue(.namespaceDescInvalid)
        }

        /// 命名空间名称已存在，请更换其他名称。
        public static var namespaceNameExist: InvalidParameterValue {
            InvalidParameterValue(.namespaceNameExist)
        }

        /// 命名空间名称格式不正确。
        public static var namespaceNameInvalid: InvalidParameterValue {
            InvalidParameterValue(.namespaceNameInvalid)
        }

        /// 无法获取命名空间。
        public static var namespaceNotExists: InvalidParameterValue {
            InvalidParameterValue(.namespaceNotExists)
        }

        /// 配置项已经发布，不允许删除。
        public static var releasedConfigCanNotBeDeleted: InvalidParameterValue {
            InvalidParameterValue(.releasedConfigCanNotBeDeleted)
        }

        /// 无权限操作资源%s。
        public static var resourcePermissionDenied: InvalidParameterValue {
            InvalidParameterValue(.resourcePermissionDenied)
        }

        /// ResourceType 不支持。
        public static var resourceTypeError: InvalidParameterValue {
            InvalidParameterValue(.resourceTypeError)
        }

        /// 服务描述不能大于200字符。
        public static var serviceDescLength: InvalidParameterValue {
            InvalidParameterValue(.serviceDescLength)
        }

        /// 服务名称重复。
        public static var serviceNameRepeated: InvalidParameterValue {
            InvalidParameterValue(.serviceNameRepeated)
        }

        /// 服务不存在或权限不足。
        public static var serviceNotExistsOrPermissionDenied: InvalidParameterValue {
            InvalidParameterValue(.serviceNotExistsOrPermissionDenied)
        }

        /// 无效请求参数。
        public static var taskParameterInvalid: InvalidParameterValue {
            InvalidParameterValue(.taskParameterInvalid)
        }

        /// 仅有停止状态下的部署组才可以不启动。
        public static var wrongDontStartValue: InvalidParameterValue {
            InvalidParameterValue(.wrongDontStartValue)
        }

        /// 参数取值错误。
        public static var other: InvalidParameterValue {
            InvalidParameterValue(.other)
        }

        public func asTsfError() -> TCTsfError {
            let code: TCTsfError.Code
            switch self.error {
            case .applicationMicroTypeInvalid:
                code = .invalidParameterValue_ApplicationMicroTypeInvalid
            case .applicationNameExist:
                code = .invalidParameterValue_ApplicationNameExist
            case .applicationNameLength:
                code = .invalidParameterValue_ApplicationNameLength
            case .applicationNameNull:
                code = .invalidParameterValue_ApplicationNameNull
            case .applicationNameRegxInvalid:
                code = .invalidParameterValue_ApplicationNameRegxInvalid
            case .applicationNotExists:
                code = .invalidParameterValue_ApplicationNotExists
            case .applicationPageLimitInvalid:
                code = .invalidParameterValue_ApplicationPageLimitInvalid
            case .applicationTypeInvalid:
                code = .invalidParameterValue_ApplicationTypeInvalid
            case .clusterCidrConflict:
                code = .invalidParameterValue_ClusterCidrConflict
            case .clusterNameExist:
                code = .invalidParameterValue_ClusterNameExist
            case .clusterNameRequired:
                code = .invalidParameterValue_ClusterNameRequired
            case .clusterRegionInvalid:
                code = .invalidParameterValue_ClusterRegionInvalid
            case .clusterTypeInvalid:
                code = .invalidParameterValue_ClusterTypeInvalid
            case .clusterZoneInvalid:
                code = .invalidParameterValue_ClusterZoneInvalid
            case .configAlreadyReleased:
                code = .invalidParameterValue_ConfigAlreadyReleased
            case .configExists:
                code = .invalidParameterValue_ConfigExists
            case .configGroupApplicationIdNotMatch:
                code = .invalidParameterValue_ConfigGroupApplicationIdNotMatch
            case .configNameInvalid:
                code = .invalidParameterValue_ConfigNameInvalid
            case .configNotExistsOrPermissionDenied:
                code = .invalidParameterValue_ConfigNotExistsOrPermissionDenied
            case .configReleaseNotExists:
                code = .invalidParameterValue_ConfigReleaseNotExists
            case .configValueFormatInvalid:
                code = .invalidParameterValue_ConfigValueFormatInvalid
            case .configValueTooLong:
                code = .invalidParameterValue_ConfigValueTooLong
            case .configVersionDescInvalid:
                code = .invalidParameterValue_ConfigVersionDescInvalid
            case .configVersionInvalid:
                code = .invalidParameterValue_ConfigVersionInvalid
            case .containerGroupImageTagIsInUse:
                code = .invalidParameterValue_ContainerGroupImageTagIsInUse
            case .containergroupAccesstypeNull:
                code = .invalidParameterValue_ContainergroupAccesstypeNull
            case .containergroupApplicationIdNull:
                code = .invalidParameterValue_ContainergroupApplicationIdNull
            case .containergroupCpulimitOver:
                code = .invalidParameterValue_ContainergroupCpulimitOver
            case .containergroupGroupidNull:
                code = .invalidParameterValue_ContainergroupGroupidNull
            case .containergroupGroupnameLegnth:
                code = .invalidParameterValue_ContainergroupGroupnameLegnth
            case .containergroupGroupnameNull:
                code = .invalidParameterValue_ContainergroupGroupnameNull
            case .containergroupGroupnameRegexMatchFalse:
                code = .invalidParameterValue_ContainergroupGroupnameRegexMatchFalse
            case .containergroupInstanceNumInvalid:
                code = .invalidParameterValue_ContainergroupInstanceNumInvalid
            case .containergroupInvalidCpuInfo:
                code = .invalidParameterValue_ContainergroupInvalidCpuInfo
            case .containergroupInvalidMemInfo:
                code = .invalidParameterValue_ContainergroupInvalidMemInfo
            case .containergroupLimitValueInvalid:
                code = .invalidParameterValue_ContainergroupLimitValueInvalid
            case .containergroupMemlimitOver:
                code = .invalidParameterValue_ContainergroupMemlimitOver
            case .containergroupNodePortInvalid:
                code = .invalidParameterValue_ContainergroupNodePortInvalid
            case .containergroupPortInvalid:
                code = .invalidParameterValue_ContainergroupPortInvalid
            case .containergroupPortsRepeat:
                code = .invalidParameterValue_ContainergroupPortsRepeat
            case .containergroupProtocolInvalid:
                code = .invalidParameterValue_ContainergroupProtocolInvalid
            case .containergroupProtocolMixError:
                code = .invalidParameterValue_ContainergroupProtocolMixError
            case .containergroupProtocolNull:
                code = .invalidParameterValue_ContainergroupProtocolNull
            case .containergroupProtocolPortsNull:
                code = .invalidParameterValue_ContainergroupProtocolPortsNull
            case .containergroupReponameInvalid:
                code = .invalidParameterValue_ContainergroupReponameInvalid
            case .containergroupResourceAgentValueInvalid:
                code = .invalidParameterValue_ContainergroupResourceAgentValueInvalid
            case .containergroupTargetPortsRepeat:
                code = .invalidParameterValue_ContainergroupTargetPortsRepeat
            case .containergroupTargetportNull:
                code = .invalidParameterValue_ContainergroupTargetportNull
            case .containergroupUpdateivlInvalid:
                code = .invalidParameterValue_ContainergroupUpdateivlInvalid
            case .containergroupUpdatetypeInvalid:
                code = .invalidParameterValue_ContainergroupUpdatetypeInvalid
            case .containergroupYamlUserContainerNotFound:
                code = .invalidParameterValue_ContainergroupYamlUserContainerNotFound
            case .cvmCaeMasterAgentBusy:
                code = .invalidParameterValue_CvmCaeMasterAgentBusy
            case .cvmCaeMasterAgentNotFound:
                code = .invalidParameterValue_CvmCaeMasterAgentNotFound
            case .cvmCaeMasterGroupNoAgent:
                code = .invalidParameterValue_CvmCaeMasterGroupNoAgent
            case .deployGroupNotExists:
                code = .invalidParameterValue_DeployGroupNotExists
            case .fileConfigAlreadyReleased:
                code = .invalidParameterValue_FileConfigAlreadyReleased
            case .fileConfigExists:
                code = .invalidParameterValue_FileConfigExists
            case .fileConfigExistsPath:
                code = .invalidParameterValue_FileConfigExistsPath
            case .fileConfigExistsPathOther:
                code = .invalidParameterValue_FileConfigExistsPathOther
            case .fileConfigFilePathInvalid:
                code = .invalidParameterValue_FileConfigFilePathInvalid
            case .fileConfigNameInvalid:
                code = .invalidParameterValue_FileConfigNameInvalid
            case .fileConfigNotExistsOrPermissionDenied:
                code = .invalidParameterValue_FileConfigNotExistsOrPermissionDenied
            case .fileConfigPathExists:
                code = .invalidParameterValue_FileConfigPathExists
            case .fileConfigVersionDescInvalid:
                code = .invalidParameterValue_FileConfigVersionDescInvalid
            case .gatewayParameterError:
                code = .invalidParameterValue_GatewayParameterError
            case .gatewayParameterInvalid:
                code = .invalidParameterValue_GatewayParameterInvalid
            case .globalNamespaceNameExist:
                code = .invalidParameterValue_GlobalNamespaceNameExist
            case .groupBatchParameterInvalid:
                code = .invalidParameterValue_GroupBatchParameterInvalid
            case .groupClusterNamespaceNotBound:
                code = .invalidParameterValue_GroupClusterNamespaceNotBound
            case .groupClusterTypeMismatch:
                code = .invalidParameterValue_GroupClusterTypeMismatch
            case .groupDeleteClusterTypeMismatch:
                code = .invalidParameterValue_GroupDeleteClusterTypeMismatch
            case .groupIdNull:
                code = .invalidParameterValue_GroupIdNull
            case .groupNameExist:
                code = .invalidParameterValue_GroupNameExist
            case .groupNameLength:
                code = .invalidParameterValue_GroupNameLength
            case .groupNameRegxMismatch:
                code = .invalidParameterValue_GroupNameRegxMismatch
            case .groupNotExists:
                code = .invalidParameterValue_GroupNotExists
            case .groupPageLimitInvalid:
                code = .invalidParameterValue_GroupPageLimitInvalid
            case .groupStatusInvalid:
                code = .invalidParameterValue_GroupStatusInvalid
            case .groupValidInstanceNull:
                code = .invalidParameterValue_GroupValidInstanceNull
            case .imagerepoRepoNameNull:
                code = .invalidParameterValue_ImagerepoRepoNameNull
            case .imagerepoReponameInvalid:
                code = .invalidParameterValue_ImagerepoReponameInvalid
            case .imagerepoTagnameNull:
                code = .invalidParameterValue_ImagerepoTagnameNull
            case .instanceInvalidImage:
                code = .invalidParameterValue_InstanceInvalidImage
            case .invalidParameter:
                code = .invalidParameterValue_InvalidParameter
            case .invalidParameterFormat:
                code = .invalidParameterValue_InvalidParameterFormat
            case .laneInfoAlreadyUsed:
                code = .invalidParameterValue_LaneInfoAlreadyUsed
            case .laneInfoNameAlreadyUsed:
                code = .invalidParameterValue_LaneInfoNameAlreadyUsed
            case .laneInfoNameInvalid:
                code = .invalidParameterValue_LaneInfoNameInvalid
            case .laneInfoNameNotEmpty:
                code = .invalidParameterValue_LaneInfoNameNotEmpty
            case .laneInfoNameTooLong:
                code = .invalidParameterValue_LaneInfoNameTooLong
            case .laneInfoNotExist:
                code = .invalidParameterValue_LaneInfoNotExist
            case .laneInfoNotExistEntrance:
                code = .invalidParameterValue_LaneInfoNotExistEntrance
            case .laneInfoRemarkTooLong:
                code = .invalidParameterValue_LaneInfoRemarkTooLong
            case .laneRuleInfoNotExist:
                code = .invalidParameterValue_LaneRuleInfoNotExist
            case .laneRuleNameAlreadyUsed:
                code = .invalidParameterValue_LaneRuleNameAlreadyUsed
            case .laneRuleNameInvalid:
                code = .invalidParameterValue_LaneRuleNameInvalid
            case .laneRuleNameNotEmpty:
                code = .invalidParameterValue_LaneRuleNameNotEmpty
            case .laneRuleNameTooLong:
                code = .invalidParameterValue_LaneRuleNameTooLong
            case .laneRuleNotExist:
                code = .invalidParameterValue_LaneRuleNotExist
            case .laneRuleRemarkTooLong:
                code = .invalidParameterValue_LaneRuleRemarkTooLong
            case .laneRuleTagNameNotEmpty:
                code = .invalidParameterValue_LaneRuleTagNameNotEmpty
            case .laneRuleTagNameTooLong:
                code = .invalidParameterValue_LaneRuleTagNameTooLong
            case .laneRuleTagNotEmpty:
                code = .invalidParameterValue_LaneRuleTagNotEmpty
            case .laneRuleTagValueTooLong:
                code = .invalidParameterValue_LaneRuleTagValueTooLong
            case .laneRuleTagValueTotalTooLong:
                code = .invalidParameterValue_LaneRuleTagValueTotalTooLong
            case .namespaceAlreadyBindCluster:
                code = .invalidParameterValue_NamespaceAlreadyBindCluster
            case .namespaceDescInvalid:
                code = .invalidParameterValue_NamespaceDescInvalid
            case .namespaceNameExist:
                code = .invalidParameterValue_NamespaceNameExist
            case .namespaceNameInvalid:
                code = .invalidParameterValue_NamespaceNameInvalid
            case .namespaceNotExists:
                code = .invalidParameterValue_NamespaceNotExists
            case .releasedConfigCanNotBeDeleted:
                code = .invalidParameterValue_ReleasedConfigCanNotBeDeleted
            case .resourcePermissionDenied:
                code = .invalidParameterValue_ResourcePermissionDenied
            case .resourceTypeError:
                code = .invalidParameterValue_ResourceTypeError
            case .serviceDescLength:
                code = .invalidParameterValue_ServiceDescLength
            case .serviceNameRepeated:
                code = .invalidParameterValue_ServiceNameRepeated
            case .serviceNotExistsOrPermissionDenied:
                code = .invalidParameterValue_ServiceNotExistsOrPermissionDenied
            case .taskParameterInvalid:
                code = .invalidParameterValue_TaskParameterInvalid
            case .wrongDontStartValue:
                code = .invalidParameterValue_WrongDontStartValue
            case .other:
                code = .invalidParameterValue
            }
            return TCTsfError(code, context: self.context)
        }
    }
}
