//===----------------------------------------------------------------------===//
//
// This source file is part of the Teco open source project
//
// Copyright (c) 2022-2023 the Teco project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by TecoServiceGenerator.
// DO NOT EDIT.

// Test PR teco-project/teco-code-generator#23.

import TecoCore

extension TCTsfError {
    public struct InvalidParameter: TCTsfErrorType {
        enum Code: String {
            case applicationDeleteFailed = "InvalidParameter.ApplicationDeleteFailed"
            case badRequest = "InvalidParameter.BadRequest"
            case configTemplateNameInvalid = "InvalidParameter.ConfigTemplateNameInvalid"
            case cvmCaeMasterJsonDecodeFail = "InvalidParameter.CvmCaeMasterJsonDecodeFail"
            case cvmCaeMasterUnknownInstanceStatus = "InvalidParameter.CvmCaeMasterUnknownInstanceStatus"
            case imagerepoTcrNamespaceNotFound = "InvalidParameter.ImagerepoTcrNamespaceNotFound"
            case kubernetesParamError = "InvalidParameter.KubernetesParamError"
            case laneInfoAlreadyUsed = "InvalidParameter.LaneInfoAlreadyUsed"
            case laneInfoNameAlreadyUsed = "InvalidParameter.LaneInfoNameAlreadyUsed"
            case laneInfoNameInvalid = "InvalidParameter.LaneInfoNameInvalid"
            case laneInfoNameNotEmpty = "InvalidParameter.LaneInfoNameNotEmpty"
            case laneInfoNameTooLong = "InvalidParameter.LaneInfoNameTooLong"
            case laneInfoNotExist = "InvalidParameter.LaneInfoNotExist"
            case laneInfoNotExistEntrance = "InvalidParameter.LaneInfoNotExistEntrance"
            case laneInfoRemarkTooLong = "InvalidParameter.LaneInfoRemarkTooLong"
            case laneRuleInfoNotExist = "InvalidParameter.LaneRuleInfoNotExist"
            case laneRuleNameAlreadyUsed = "InvalidParameter.LaneRuleNameAlreadyUsed"
            case laneRuleNameInvalid = "InvalidParameter.LaneRuleNameInvalid"
            case laneRuleNameNotEmpty = "InvalidParameter.LaneRuleNameNotEmpty"
            case laneRuleNameTooLong = "InvalidParameter.LaneRuleNameTooLong"
            case laneRuleNotExist = "InvalidParameter.LaneRuleNotExist"
            case laneRuleRemarkTooLong = "InvalidParameter.LaneRuleRemarkTooLong"
            case laneRuleTagNameNotEmpty = "InvalidParameter.LaneRuleTagNameNotEmpty"
            case laneRuleTagNameTooLong = "InvalidParameter.LaneRuleTagNameTooLong"
            case laneRuleTagNotEmpty = "InvalidParameter.LaneRuleTagNotEmpty"
            case laneRuleTagValueTooLong = "InvalidParameter.LaneRuleTagValueTooLong"
            case laneRuleTagValueTotalTooLong = "InvalidParameter.LaneRuleTagValueTotalTooLong"
            case packageInUse = "InvalidParameter.PackageInUse"
            case paramError = "InvalidParameter.ParamError"
            case repoPackageParamError = "InvalidParameter.RepoPackageParamError"
            case repositoryNotEmpty = "InvalidParameter.RepositoryNotEmpty"
            case tsfApmBusiLogCfgAppParamError = "InvalidParameter.TsfApmBusiLogCfgAppParamError"
            case tsfApmBusiLogCfgAppRelationParamError = "InvalidParameter.TsfApmBusiLogCfgAppRelationParamError"
            case tsfApmBusiLogCfgCloudParamError = "InvalidParameter.TsfApmBusiLogCfgCloudParamError"
            case tsfApmBusiLogCfgIdParamError = "InvalidParameter.TsfApmBusiLogCfgIdParamError"
            case tsfApmBusiLogCfgLimitParamError = "InvalidParameter.TsfApmBusiLogCfgLimitParamError"
            case tsfApmBusiLogSearchRequestParamError = "InvalidParameter.TsfApmBusiLogSearchRequestParamError"
            case tsfApmStatsSearchRequestParamError = "InvalidParameter.TsfApmStatsSearchRequestParamError"
            case tsfApmStdoutSearchRequestParamError = "InvalidParameter.TsfApmStdoutSearchRequestParamError"
            case tsfApmTraceSearchRequestParamError = "InvalidParameter.TsfApmTraceSearchRequestParamError"
            case tsfMonitorRequestParamIllegal = "InvalidParameter.TsfMonitorRequestParamIllegal"
            case upperDeleteLimit = "InvalidParameter.UpperDeleteLimit"
            case other = "InvalidParameter"
        }

        private let error: Code

        public let context: TCErrorContext?

        public var errorCode: String {
            self.error.rawValue
        }

        /// Initializer used by ``TCClient`` to match an error of this type.
        public init?(errorCode: String, context: TCErrorContext) {
            guard let error = Code(rawValue: errorCode) else {
                return nil
            }
            self.error = error
            self.context = context
        }

        internal init(_ error: Code, context: TCErrorContext? = nil) {
            self.error = error
            self.context = context
        }

        /// 删除应用失败。
        public static var applicationDeleteFailed: InvalidParameter {
            InvalidParameter(.applicationDeleteFailed)
        }

        /// [%s]模块接口[%s]请求不正确（400 BAD REQUEST）。。
        public static var badRequest: InvalidParameter {
            InvalidParameter(.badRequest)
        }

        /// 配置模板名称不符合规范。
        public static var configTemplateNameInvalid: InvalidParameter {
            InvalidParameter(.configTemplateNameInvalid)
        }

        /// TSF MASTER 解包失败。
        public static var cvmCaeMasterJsonDecodeFail: InvalidParameter {
            InvalidParameter(.cvmCaeMasterJsonDecodeFail)
        }

        /// TSF MASTER 实例状态异常。
        public static var cvmCaeMasterUnknownInstanceStatus: InvalidParameter {
            InvalidParameter(.cvmCaeMasterUnknownInstanceStatus)
        }

        /// 未找到 TCR 实例或命名空间。
        public static var imagerepoTcrNamespaceNotFound: InvalidParameter {
            InvalidParameter(.imagerepoTcrNamespaceNotFound)
        }

        /// 参数错误。
        public static var kubernetesParamError: InvalidParameter {
            InvalidParameter(.kubernetesParamError)
        }

        /// 已经绑定灰度规则，无法删除。
        public static var laneInfoAlreadyUsed: InvalidParameter {
            InvalidParameter(.laneInfoAlreadyUsed)
        }

        /// 存在同名的泳道。
        public static var laneInfoNameAlreadyUsed: InvalidParameter {
            InvalidParameter(.laneInfoNameAlreadyUsed)
        }

        /// 泳道名称格式有误。
        public static var laneInfoNameInvalid: InvalidParameter {
            InvalidParameter(.laneInfoNameInvalid)
        }

        /// 泳道名称不能为空。
        public static var laneInfoNameNotEmpty: InvalidParameter {
            InvalidParameter(.laneInfoNameNotEmpty)
        }

        /// 泳道名称不能超过60个字符。
        public static var laneInfoNameTooLong: InvalidParameter {
            InvalidParameter(.laneInfoNameTooLong)
        }

        /// 泳道不存在。
        public static var laneInfoNotExist: InvalidParameter {
            InvalidParameter(.laneInfoNotExist)
        }

        /// 泳道没有设置任何入口应用。
        public static var laneInfoNotExistEntrance: InvalidParameter {
            InvalidParameter(.laneInfoNotExistEntrance)
        }

        /// 泳道备注不能超过200个字符。
        public static var laneInfoRemarkTooLong: InvalidParameter {
            InvalidParameter(.laneInfoRemarkTooLong)
        }

        /// 泳道规则中的泳道不存在。
        public static var laneRuleInfoNotExist: InvalidParameter {
            InvalidParameter(.laneRuleInfoNotExist)
        }

        /// 存在同名的泳道规则名称。
        public static var laneRuleNameAlreadyUsed: InvalidParameter {
            InvalidParameter(.laneRuleNameAlreadyUsed)
        }

        /// 泳道规则名称格式有误。
        public static var laneRuleNameInvalid: InvalidParameter {
            InvalidParameter(.laneRuleNameInvalid)
        }

        /// 泳道规则名称不能为空。
        public static var laneRuleNameNotEmpty: InvalidParameter {
            InvalidParameter(.laneRuleNameNotEmpty)
        }

        /// 泳道规则名称不能超过60个字符。
        public static var laneRuleNameTooLong: InvalidParameter {
            InvalidParameter(.laneRuleNameTooLong)
        }

        /// 泳道规则不存在。
        public static var laneRuleNotExist: InvalidParameter {
            InvalidParameter(.laneRuleNotExist)
        }

        /// 泳道规则备注不能超过200个字符。
        public static var laneRuleRemarkTooLong: InvalidParameter {
            InvalidParameter(.laneRuleRemarkTooLong)
        }

        /// 泳道规则标签名不能为空。
        public static var laneRuleTagNameNotEmpty: InvalidParameter {
            InvalidParameter(.laneRuleTagNameNotEmpty)
        }

        /// 泳道规则标签名不能超过32个字符。
        public static var laneRuleTagNameTooLong: InvalidParameter {
            InvalidParameter(.laneRuleTagNameTooLong)
        }

        /// 泳道规则必须设置至少一个标签。
        public static var laneRuleTagNotEmpty: InvalidParameter {
            InvalidParameter(.laneRuleTagNotEmpty)
        }

        /// 泳道规则标签值不能超过128个字符。
        public static var laneRuleTagValueTooLong: InvalidParameter {
            InvalidParameter(.laneRuleTagValueTooLong)
        }

        /// 泳道规则总标签值不能超过200个字符。
        public static var laneRuleTagValueTotalTooLong: InvalidParameter {
            InvalidParameter(.laneRuleTagValueTotalTooLong)
        }

        /// 包正在被使用，请先解除占用。
        public static var packageInUse: InvalidParameter {
            InvalidParameter(.packageInUse)
        }

        /// 参数错误。
        public static var paramError: InvalidParameter {
            InvalidParameter(.paramError)
        }

        /// 请求参数有误。
        public static var repoPackageParamError: InvalidParameter {
            InvalidParameter(.repoPackageParamError)
        }

        /// 仓库中存在软件包，请先删除软件包。
        public static var repositoryNotEmpty: InvalidParameter {
            InvalidParameter(.repositoryNotEmpty)
        }

        /// TSF应用性能管理业务日志应用标识参数错误。
        public static var tsfApmBusiLogCfgAppParamError: InvalidParameter {
            InvalidParameter(.tsfApmBusiLogCfgAppParamError)
        }

        /// TSF应用性能管理业务日志配置与应用关联参数错误。
        public static var tsfApmBusiLogCfgAppRelationParamError: InvalidParameter {
            InvalidParameter(.tsfApmBusiLogCfgAppRelationParamError)
        }

        /// TSF应用性能管理业务日志配置云账户参数错误。
        public static var tsfApmBusiLogCfgCloudParamError: InvalidParameter {
            InvalidParameter(.tsfApmBusiLogCfgCloudParamError)
        }

        /// TSF应用性能管理业务日志配置标识参数错误。
        public static var tsfApmBusiLogCfgIdParamError: InvalidParameter {
            InvalidParameter(.tsfApmBusiLogCfgIdParamError)
        }

        /// TSF应用性能管理业务日志配置数目参数错误。
        public static var tsfApmBusiLogCfgLimitParamError: InvalidParameter {
            InvalidParameter(.tsfApmBusiLogCfgLimitParamError)
        }

        /// TSF应用性能管理业务日志搜索请求参数错误。
        public static var tsfApmBusiLogSearchRequestParamError: InvalidParameter {
            InvalidParameter(.tsfApmBusiLogSearchRequestParamError)
        }

        /// TSF应用性能管理运行状态统计查询请求参数错误。
        public static var tsfApmStatsSearchRequestParamError: InvalidParameter {
            InvalidParameter(.tsfApmStatsSearchRequestParamError)
        }

        /// TSF应用性能管理标准输出日志搜索请求参数错误。
        public static var tsfApmStdoutSearchRequestParamError: InvalidParameter {
            InvalidParameter(.tsfApmStdoutSearchRequestParamError)
        }

        /// TSF应用性能管理调用链搜索请求参数错误。
        public static var tsfApmTraceSearchRequestParamError: InvalidParameter {
            InvalidParameter(.tsfApmTraceSearchRequestParamError)
        }

        /// TSF监控统计请求参数[%s]非法。
        public static var tsfMonitorRequestParamIllegal: InvalidParameter {
            InvalidParameter(.tsfMonitorRequestParamIllegal)
        }

        /// 仓库批量删除包数量超过单次允许上限。
        public static var upperDeleteLimit: InvalidParameter {
            InvalidParameter(.upperDeleteLimit)
        }

        /// 参数错误。
        public static var other: InvalidParameter {
            InvalidParameter(.other)
        }

        public func asTsfError() -> TCTsfError {
            let code: TCTsfError.Code
            switch self.error {
            case .applicationDeleteFailed:
                code = .invalidParameter_ApplicationDeleteFailed
            case .badRequest:
                code = .invalidParameter_BadRequest
            case .configTemplateNameInvalid:
                code = .invalidParameter_ConfigTemplateNameInvalid
            case .cvmCaeMasterJsonDecodeFail:
                code = .invalidParameter_CvmCaeMasterJsonDecodeFail
            case .cvmCaeMasterUnknownInstanceStatus:
                code = .invalidParameter_CvmCaeMasterUnknownInstanceStatus
            case .imagerepoTcrNamespaceNotFound:
                code = .invalidParameter_ImagerepoTcrNamespaceNotFound
            case .kubernetesParamError:
                code = .invalidParameter_KubernetesParamError
            case .laneInfoAlreadyUsed:
                code = .invalidParameter_LaneInfoAlreadyUsed
            case .laneInfoNameAlreadyUsed:
                code = .invalidParameter_LaneInfoNameAlreadyUsed
            case .laneInfoNameInvalid:
                code = .invalidParameter_LaneInfoNameInvalid
            case .laneInfoNameNotEmpty:
                code = .invalidParameter_LaneInfoNameNotEmpty
            case .laneInfoNameTooLong:
                code = .invalidParameter_LaneInfoNameTooLong
            case .laneInfoNotExist:
                code = .invalidParameter_LaneInfoNotExist
            case .laneInfoNotExistEntrance:
                code = .invalidParameter_LaneInfoNotExistEntrance
            case .laneInfoRemarkTooLong:
                code = .invalidParameter_LaneInfoRemarkTooLong
            case .laneRuleInfoNotExist:
                code = .invalidParameter_LaneRuleInfoNotExist
            case .laneRuleNameAlreadyUsed:
                code = .invalidParameter_LaneRuleNameAlreadyUsed
            case .laneRuleNameInvalid:
                code = .invalidParameter_LaneRuleNameInvalid
            case .laneRuleNameNotEmpty:
                code = .invalidParameter_LaneRuleNameNotEmpty
            case .laneRuleNameTooLong:
                code = .invalidParameter_LaneRuleNameTooLong
            case .laneRuleNotExist:
                code = .invalidParameter_LaneRuleNotExist
            case .laneRuleRemarkTooLong:
                code = .invalidParameter_LaneRuleRemarkTooLong
            case .laneRuleTagNameNotEmpty:
                code = .invalidParameter_LaneRuleTagNameNotEmpty
            case .laneRuleTagNameTooLong:
                code = .invalidParameter_LaneRuleTagNameTooLong
            case .laneRuleTagNotEmpty:
                code = .invalidParameter_LaneRuleTagNotEmpty
            case .laneRuleTagValueTooLong:
                code = .invalidParameter_LaneRuleTagValueTooLong
            case .laneRuleTagValueTotalTooLong:
                code = .invalidParameter_LaneRuleTagValueTotalTooLong
            case .packageInUse:
                code = .invalidParameter_PackageInUse
            case .paramError:
                code = .invalidParameter_ParamError
            case .repoPackageParamError:
                code = .invalidParameter_RepoPackageParamError
            case .repositoryNotEmpty:
                code = .invalidParameter_RepositoryNotEmpty
            case .tsfApmBusiLogCfgAppParamError:
                code = .invalidParameter_TsfApmBusiLogCfgAppParamError
            case .tsfApmBusiLogCfgAppRelationParamError:
                code = .invalidParameter_TsfApmBusiLogCfgAppRelationParamError
            case .tsfApmBusiLogCfgCloudParamError:
                code = .invalidParameter_TsfApmBusiLogCfgCloudParamError
            case .tsfApmBusiLogCfgIdParamError:
                code = .invalidParameter_TsfApmBusiLogCfgIdParamError
            case .tsfApmBusiLogCfgLimitParamError:
                code = .invalidParameter_TsfApmBusiLogCfgLimitParamError
            case .tsfApmBusiLogSearchRequestParamError:
                code = .invalidParameter_TsfApmBusiLogSearchRequestParamError
            case .tsfApmStatsSearchRequestParamError:
                code = .invalidParameter_TsfApmStatsSearchRequestParamError
            case .tsfApmStdoutSearchRequestParamError:
                code = .invalidParameter_TsfApmStdoutSearchRequestParamError
            case .tsfApmTraceSearchRequestParamError:
                code = .invalidParameter_TsfApmTraceSearchRequestParamError
            case .tsfMonitorRequestParamIllegal:
                code = .invalidParameter_TsfMonitorRequestParamIllegal
            case .upperDeleteLimit:
                code = .invalidParameter_UpperDeleteLimit
            case .other:
                code = .invalidParameter
            }
            return TCTsfError(code, context: self.context)
        }
    }
}
